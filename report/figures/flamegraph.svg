<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1718" onload="init(evt)" viewBox="0 0 1200 1718" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1718" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1701.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1701.00"> </text><svg id="frames" x="10" width="1180" total_samples="1403"><g><title>__futex_abstimed_wait_common64 (1 samples, 0.07%)</title><rect x="0.4989%" y="1621" width="0.0713%" height="15" fill="rgb(227,0,7)" fg:x="7" fg:w="1"/><text x="0.7489%" y="1631.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (4 samples, 0.29%)</title><rect x="0.5702%" y="1621" width="0.2851%" height="15" fill="rgb(217,0,24)" fg:x="8" fg:w="4"/><text x="0.8202%" y="1631.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (4 samples, 0.29%)</title><rect x="0.5702%" y="1605" width="0.2851%" height="15" fill="rgb(221,193,54)" fg:x="8" fg:w="4"/><text x="0.8202%" y="1615.50"></text></g><g><title>core::hash::Hasher::write_usize (4 samples, 0.29%)</title><rect x="0.5702%" y="1589" width="0.2851%" height="15" fill="rgb(248,212,6)" fg:x="8" fg:w="4"/><text x="0.8202%" y="1599.50"></text></g><g><title>[[heap]] (19 samples, 1.35%)</title><rect x="0.0000%" y="1637" width="1.3542%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="19"/><text x="0.2500%" y="1647.50"></text></g><g><title>hashbrown::map::make_insert_hash (7 samples, 0.50%)</title><rect x="0.8553%" y="1621" width="0.4989%" height="15" fill="rgb(232,128,0)" fg:x="12" fg:w="7"/><text x="1.1053%" y="1631.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (7 samples, 0.50%)</title><rect x="0.8553%" y="1605" width="0.4989%" height="15" fill="rgb(207,160,47)" fg:x="12" fg:w="7"/><text x="1.1053%" y="1615.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (7 samples, 0.50%)</title><rect x="0.8553%" y="1589" width="0.4989%" height="15" fill="rgb(228,23,34)" fg:x="12" fg:w="7"/><text x="1.1053%" y="1599.50"></text></g><g><title>core::hash::Hasher::write_usize (7 samples, 0.50%)</title><rect x="0.8553%" y="1573" width="0.4989%" height="15" fill="rgb(218,30,26)" fg:x="12" fg:w="7"/><text x="1.1053%" y="1583.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.14%)</title><rect x="2.9223%" y="1621" width="0.1426%" height="15" fill="rgb(220,122,19)" fg:x="41" fg:w="2"/><text x="3.1723%" y="1631.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.14%)</title><rect x="2.9223%" y="1605" width="0.1426%" height="15" fill="rgb(250,228,42)" fg:x="41" fg:w="2"/><text x="3.1723%" y="1615.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (2 samples, 0.14%)</title><rect x="2.9223%" y="1589" width="0.1426%" height="15" fill="rgb(240,193,28)" fg:x="41" fg:w="2"/><text x="3.1723%" y="1599.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.14%)</title><rect x="2.9223%" y="1573" width="0.1426%" height="15" fill="rgb(216,20,37)" fg:x="41" fg:w="2"/><text x="3.1723%" y="1583.50"></text></g><g><title>ldpc::decoding::BMCDecoder&lt;_,_&gt;::check_to_bit::{{closure}}::{{closure}} (2 samples, 0.14%)</title><rect x="2.9223%" y="1557" width="0.1426%" height="15" fill="rgb(206,188,39)" fg:x="41" fg:w="2"/><text x="3.1723%" y="1567.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (2 samples, 0.14%)</title><rect x="2.9223%" y="1541" width="0.1426%" height="15" fill="rgb(217,207,13)" fg:x="41" fg:w="2"/><text x="3.1723%" y="1551.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.14%)</title><rect x="2.9223%" y="1525" width="0.1426%" height="15" fill="rgb(231,73,38)" fg:x="41" fg:w="2"/><text x="3.1723%" y="1535.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.14%)</title><rect x="2.9223%" y="1509" width="0.1426%" height="15" fill="rgb(225,20,46)" fg:x="41" fg:w="2"/><text x="3.1723%" y="1519.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.14%)</title><rect x="2.9223%" y="1493" width="0.1426%" height="15" fill="rgb(210,31,41)" fg:x="41" fg:w="2"/><text x="3.1723%" y="1503.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (2 samples, 0.14%)</title><rect x="3.0649%" y="1621" width="0.1426%" height="15" fill="rgb(221,200,47)" fg:x="43" fg:w="2"/><text x="3.3149%" y="1631.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (2 samples, 0.14%)</title><rect x="3.0649%" y="1605" width="0.1426%" height="15" fill="rgb(226,26,5)" fg:x="43" fg:w="2"/><text x="3.3149%" y="1615.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.14%)</title><rect x="3.0649%" y="1589" width="0.1426%" height="15" fill="rgb(249,33,26)" fg:x="43" fg:w="2"/><text x="3.3149%" y="1599.50"></text></g><g><title>rand_distr::utils::ziggurat (1 samples, 0.07%)</title><rect x="3.2074%" y="1621" width="0.0713%" height="15" fill="rgb(235,183,28)" fg:x="45" fg:w="1"/><text x="3.4574%" y="1631.50"></text></g><g><title>&lt;&amp;mut R as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="3.2074%" y="1605" width="0.0713%" height="15" fill="rgb(221,5,38)" fg:x="45" fg:w="1"/><text x="3.4574%" y="1615.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="3.2074%" y="1589" width="0.0713%" height="15" fill="rgb(247,18,42)" fg:x="45" fg:w="1"/><text x="3.4574%" y="1599.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="3.2074%" y="1573" width="0.0713%" height="15" fill="rgb(241,131,45)" fg:x="45" fg:w="1"/><text x="3.4574%" y="1583.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="3.2074%" y="1557" width="0.0713%" height="15" fill="rgb(249,31,29)" fg:x="45" fg:w="1"/><text x="3.4574%" y="1567.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (1 samples, 0.07%)</title><rect x="3.2074%" y="1541" width="0.0713%" height="15" fill="rgb(225,111,53)" fg:x="45" fg:w="1"/><text x="3.4574%" y="1551.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.07%)</title><rect x="3.2074%" y="1525" width="0.0713%" height="15" fill="rgb(238,160,17)" fg:x="45" fg:w="1"/><text x="3.4574%" y="1535.50"></text></g><g><title>[anon] (29 samples, 2.07%)</title><rect x="1.3542%" y="1637" width="2.0670%" height="15" fill="rgb(214,148,48)" fg:x="19" fg:w="29"/><text x="1.6042%" y="1647.50">[..</text></g><g><title>tanhf32x (2 samples, 0.14%)</title><rect x="3.2787%" y="1621" width="0.1426%" height="15" fill="rgb(232,36,49)" fg:x="46" fg:w="2"/><text x="3.5287%" y="1631.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="5.7733%" y="901" width="0.0713%" height="15" fill="rgb(209,103,24)" fg:x="81" fg:w="1"/><text x="6.0233%" y="911.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="5.7733%" y="885" width="0.0713%" height="15" fill="rgb(229,88,8)" fg:x="81" fg:w="1"/><text x="6.0233%" y="895.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="5.7733%" y="869" width="0.0713%" height="15" fill="rgb(213,181,19)" fg:x="81" fg:w="1"/><text x="6.0233%" y="879.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="5.7733%" y="853" width="0.0713%" height="15" fill="rgb(254,191,54)" fg:x="81" fg:w="1"/><text x="6.0233%" y="863.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="5.7733%" y="837" width="0.0713%" height="15" fill="rgb(241,83,37)" fg:x="81" fg:w="1"/><text x="6.0233%" y="847.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="5.7733%" y="821" width="0.0713%" height="15" fill="rgb(233,36,39)" fg:x="81" fg:w="1"/><text x="6.0233%" y="831.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.07%)</title><rect x="5.7733%" y="805" width="0.0713%" height="15" fill="rgb(226,3,54)" fg:x="81" fg:w="1"/><text x="6.0233%" y="815.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="5.7733%" y="789" width="0.0713%" height="15" fill="rgb(245,192,40)" fg:x="81" fg:w="1"/><text x="6.0233%" y="799.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="5.7733%" y="773" width="0.0713%" height="15" fill="rgb(238,167,29)" fg:x="81" fg:w="1"/><text x="6.0233%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="5.7733%" y="757" width="0.0713%" height="15" fill="rgb(232,182,51)" fg:x="81" fg:w="1"/><text x="6.0233%" y="767.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="5.7733%" y="741" width="0.0713%" height="15" fill="rgb(231,60,39)" fg:x="81" fg:w="1"/><text x="6.0233%" y="751.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="5.7733%" y="725" width="0.0713%" height="15" fill="rgb(208,69,12)" fg:x="81" fg:w="1"/><text x="6.0233%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="5.7733%" y="709" width="0.0713%" height="15" fill="rgb(235,93,37)" fg:x="81" fg:w="1"/><text x="6.0233%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="5.7733%" y="693" width="0.0713%" height="15" fill="rgb(213,116,39)" fg:x="81" fg:w="1"/><text x="6.0233%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="5.7733%" y="677" width="0.0713%" height="15" fill="rgb(222,207,29)" fg:x="81" fg:w="1"/><text x="6.0233%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="5.7733%" y="661" width="0.0713%" height="15" fill="rgb(206,96,30)" fg:x="81" fg:w="1"/><text x="6.0233%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.07%)</title><rect x="5.7733%" y="645" width="0.0713%" height="15" fill="rgb(218,138,4)" fg:x="81" fg:w="1"/><text x="6.0233%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="5.7733%" y="629" width="0.0713%" height="15" fill="rgb(250,191,14)" fg:x="81" fg:w="1"/><text x="6.0233%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="5.7733%" y="613" width="0.0713%" height="15" fill="rgb(239,60,40)" fg:x="81" fg:w="1"/><text x="6.0233%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.07%)</title><rect x="5.7733%" y="597" width="0.0713%" height="15" fill="rgb(206,27,48)" fg:x="81" fg:w="1"/><text x="6.0233%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="5.7733%" y="581" width="0.0713%" height="15" fill="rgb(225,35,8)" fg:x="81" fg:w="1"/><text x="6.0233%" y="591.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="5.7733%" y="565" width="0.0713%" height="15" fill="rgb(250,213,24)" fg:x="81" fg:w="1"/><text x="6.0233%" y="575.50"></text></g><g><title>&lt;rand_distr::normal::Normal&lt;F&gt; as rand::distributions::distribution::Distribution&lt;F&gt;&gt;::sample (1 samples, 0.07%)</title><rect x="5.7733%" y="549" width="0.0713%" height="15" fill="rgb(247,123,22)" fg:x="81" fg:w="1"/><text x="6.0233%" y="559.50"></text></g><g><title>rand::rng::Rng::sample (1 samples, 0.07%)</title><rect x="5.7733%" y="533" width="0.0713%" height="15" fill="rgb(231,138,38)" fg:x="81" fg:w="1"/><text x="6.0233%" y="543.50"></text></g><g><title>rand_distr::utils::ziggurat (1 samples, 0.07%)</title><rect x="5.7733%" y="517" width="0.0713%" height="15" fill="rgb(231,145,46)" fg:x="81" fg:w="1"/><text x="6.0233%" y="527.50"></text></g><g><title>&lt;&amp;mut R as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="5.7733%" y="501" width="0.0713%" height="15" fill="rgb(251,118,11)" fg:x="81" fg:w="1"/><text x="6.0233%" y="511.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="5.7733%" y="485" width="0.0713%" height="15" fill="rgb(217,147,25)" fg:x="81" fg:w="1"/><text x="6.0233%" y="495.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="5.7733%" y="469" width="0.0713%" height="15" fill="rgb(247,81,37)" fg:x="81" fg:w="1"/><text x="6.0233%" y="479.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="5.7733%" y="453" width="0.0713%" height="15" fill="rgb(209,12,38)" fg:x="81" fg:w="1"/><text x="6.0233%" y="463.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (1 samples, 0.07%)</title><rect x="5.7733%" y="437" width="0.0713%" height="15" fill="rgb(227,1,9)" fg:x="81" fg:w="1"/><text x="6.0233%" y="447.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.07%)</title><rect x="5.7733%" y="421" width="0.0713%" height="15" fill="rgb(248,47,43)" fg:x="81" fg:w="1"/><text x="6.0233%" y="431.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.07%)</title><rect x="5.7733%" y="405" width="0.0713%" height="15" fill="rgb(221,10,30)" fg:x="81" fg:w="1"/><text x="6.0233%" y="415.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (1 samples, 0.07%)</title><rect x="5.7733%" y="389" width="0.0713%" height="15" fill="rgb(210,229,1)" fg:x="81" fg:w="1"/><text x="6.0233%" y="399.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (1 samples, 0.07%)</title><rect x="5.7733%" y="373" width="0.0713%" height="15" fill="rgb(222,148,37)" fg:x="81" fg:w="1"/><text x="6.0233%" y="383.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (1 samples, 0.07%)</title><rect x="5.7733%" y="357" width="0.0713%" height="15" fill="rgb(234,67,33)" fg:x="81" fg:w="1"/><text x="6.0233%" y="367.50"></text></g><g><title>rand_chacha::guts::round (1 samples, 0.07%)</title><rect x="5.7733%" y="341" width="0.0713%" height="15" fill="rgb(247,98,35)" fg:x="81" fg:w="1"/><text x="6.0233%" y="351.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::arith::AddAssign&gt;::add_assign (1 samples, 0.07%)</title><rect x="5.7733%" y="325" width="0.0713%" height="15" fill="rgb(247,138,52)" fg:x="81" fg:w="1"/><text x="6.0233%" y="335.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::AddAssign&gt;::add_assign (1 samples, 0.07%)</title><rect x="5.7733%" y="309" width="0.0713%" height="15" fill="rgb(213,79,30)" fg:x="81" fg:w="1"/><text x="6.0233%" y="319.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (1 samples, 0.07%)</title><rect x="5.7733%" y="293" width="0.0713%" height="15" fill="rgb(246,177,23)" fg:x="81" fg:w="1"/><text x="6.0233%" y="303.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.07%)</title><rect x="5.7733%" y="277" width="0.0713%" height="15" fill="rgb(230,62,27)" fg:x="81" fg:w="1"/><text x="6.0233%" y="287.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (2 samples, 0.14%)</title><rect x="5.7733%" y="1253" width="0.1426%" height="15" fill="rgb(216,154,8)" fg:x="81" fg:w="2"/><text x="6.0233%" y="1263.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (2 samples, 0.14%)</title><rect x="5.7733%" y="1237" width="0.1426%" height="15" fill="rgb(244,35,45)" fg:x="81" fg:w="2"/><text x="6.0233%" y="1247.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 0.14%)</title><rect x="5.7733%" y="1221" width="0.1426%" height="15" fill="rgb(251,115,12)" fg:x="81" fg:w="2"/><text x="6.0233%" y="1231.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2 samples, 0.14%)</title><rect x="5.7733%" y="1205" width="0.1426%" height="15" fill="rgb(240,54,50)" fg:x="81" fg:w="2"/><text x="6.0233%" y="1215.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (2 samples, 0.14%)</title><rect x="5.7733%" y="1189" width="0.1426%" height="15" fill="rgb(233,84,52)" fg:x="81" fg:w="2"/><text x="6.0233%" y="1199.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.14%)</title><rect x="5.7733%" y="1173" width="0.1426%" height="15" fill="rgb(207,117,47)" fg:x="81" fg:w="2"/><text x="6.0233%" y="1183.50"></text></g><g><title>std::panicking::try (2 samples, 0.14%)</title><rect x="5.7733%" y="1157" width="0.1426%" height="15" fill="rgb(249,43,39)" fg:x="81" fg:w="2"/><text x="6.0233%" y="1167.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.14%)</title><rect x="5.7733%" y="1141" width="0.1426%" height="15" fill="rgb(209,38,44)" fg:x="81" fg:w="2"/><text x="6.0233%" y="1151.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.14%)</title><rect x="5.7733%" y="1125" width="0.1426%" height="15" fill="rgb(236,212,23)" fg:x="81" fg:w="2"/><text x="6.0233%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (2 samples, 0.14%)</title><rect x="5.7733%" y="1109" width="0.1426%" height="15" fill="rgb(242,79,21)" fg:x="81" fg:w="2"/><text x="6.0233%" y="1119.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (2 samples, 0.14%)</title><rect x="5.7733%" y="1093" width="0.1426%" height="15" fill="rgb(211,96,35)" fg:x="81" fg:w="2"/><text x="6.0233%" y="1103.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 0.14%)</title><rect x="5.7733%" y="1077" width="0.1426%" height="15" fill="rgb(253,215,40)" fg:x="81" fg:w="2"/><text x="6.0233%" y="1087.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2 samples, 0.14%)</title><rect x="5.7733%" y="1061" width="0.1426%" height="15" fill="rgb(211,81,21)" fg:x="81" fg:w="2"/><text x="6.0233%" y="1071.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (2 samples, 0.14%)</title><rect x="5.7733%" y="1045" width="0.1426%" height="15" fill="rgb(208,190,38)" fg:x="81" fg:w="2"/><text x="6.0233%" y="1055.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.14%)</title><rect x="5.7733%" y="1029" width="0.1426%" height="15" fill="rgb(235,213,38)" fg:x="81" fg:w="2"/><text x="6.0233%" y="1039.50"></text></g><g><title>std::panicking::try (2 samples, 0.14%)</title><rect x="5.7733%" y="1013" width="0.1426%" height="15" fill="rgb(237,122,38)" fg:x="81" fg:w="2"/><text x="6.0233%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.14%)</title><rect x="5.7733%" y="997" width="0.1426%" height="15" fill="rgb(244,218,35)" fg:x="81" fg:w="2"/><text x="6.0233%" y="1007.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.14%)</title><rect x="5.7733%" y="981" width="0.1426%" height="15" fill="rgb(240,68,47)" fg:x="81" fg:w="2"/><text x="6.0233%" y="991.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (2 samples, 0.14%)</title><rect x="5.7733%" y="965" width="0.1426%" height="15" fill="rgb(210,16,53)" fg:x="81" fg:w="2"/><text x="6.0233%" y="975.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (2 samples, 0.14%)</title><rect x="5.7733%" y="949" width="0.1426%" height="15" fill="rgb(235,124,12)" fg:x="81" fg:w="2"/><text x="6.0233%" y="959.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 0.14%)</title><rect x="5.7733%" y="933" width="0.1426%" height="15" fill="rgb(224,169,11)" fg:x="81" fg:w="2"/><text x="6.0233%" y="943.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2 samples, 0.14%)</title><rect x="5.7733%" y="917" width="0.1426%" height="15" fill="rgb(250,166,2)" fg:x="81" fg:w="2"/><text x="6.0233%" y="927.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="5.8446%" y="901" width="0.0713%" height="15" fill="rgb(242,216,29)" fg:x="82" fg:w="1"/><text x="6.0946%" y="911.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="5.8446%" y="885" width="0.0713%" height="15" fill="rgb(230,116,27)" fg:x="82" fg:w="1"/><text x="6.0946%" y="895.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="5.8446%" y="869" width="0.0713%" height="15" fill="rgb(228,99,48)" fg:x="82" fg:w="1"/><text x="6.0946%" y="879.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="5.8446%" y="853" width="0.0713%" height="15" fill="rgb(253,11,6)" fg:x="82" fg:w="1"/><text x="6.0946%" y="863.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="5.8446%" y="837" width="0.0713%" height="15" fill="rgb(247,143,39)" fg:x="82" fg:w="1"/><text x="6.0946%" y="847.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="5.8446%" y="821" width="0.0713%" height="15" fill="rgb(236,97,10)" fg:x="82" fg:w="1"/><text x="6.0946%" y="831.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="5.8446%" y="805" width="0.0713%" height="15" fill="rgb(233,208,19)" fg:x="82" fg:w="1"/><text x="6.0946%" y="815.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="5.8446%" y="789" width="0.0713%" height="15" fill="rgb(216,164,2)" fg:x="82" fg:w="1"/><text x="6.0946%" y="799.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="5.8446%" y="773" width="0.0713%" height="15" fill="rgb(220,129,5)" fg:x="82" fg:w="1"/><text x="6.0946%" y="783.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="5.8446%" y="757" width="0.0713%" height="15" fill="rgb(242,17,10)" fg:x="82" fg:w="1"/><text x="6.0946%" y="767.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="5.8446%" y="741" width="0.0713%" height="15" fill="rgb(242,107,0)" fg:x="82" fg:w="1"/><text x="6.0946%" y="751.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.07%)</title><rect x="5.8446%" y="725" width="0.0713%" height="15" fill="rgb(251,28,31)" fg:x="82" fg:w="1"/><text x="6.0946%" y="735.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="5.8446%" y="709" width="0.0713%" height="15" fill="rgb(233,223,10)" fg:x="82" fg:w="1"/><text x="6.0946%" y="719.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="5.8446%" y="693" width="0.0713%" height="15" fill="rgb(215,21,27)" fg:x="82" fg:w="1"/><text x="6.0946%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="5.8446%" y="677" width="0.0713%" height="15" fill="rgb(232,23,21)" fg:x="82" fg:w="1"/><text x="6.0946%" y="687.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="5.8446%" y="661" width="0.0713%" height="15" fill="rgb(244,5,23)" fg:x="82" fg:w="1"/><text x="6.0946%" y="671.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="5.8446%" y="645" width="0.0713%" height="15" fill="rgb(226,81,46)" fg:x="82" fg:w="1"/><text x="6.0946%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="5.8446%" y="629" width="0.0713%" height="15" fill="rgb(247,70,30)" fg:x="82" fg:w="1"/><text x="6.0946%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="5.8446%" y="613" width="0.0713%" height="15" fill="rgb(212,68,19)" fg:x="82" fg:w="1"/><text x="6.0946%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="5.8446%" y="597" width="0.0713%" height="15" fill="rgb(240,187,13)" fg:x="82" fg:w="1"/><text x="6.0946%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="5.8446%" y="581" width="0.0713%" height="15" fill="rgb(223,113,26)" fg:x="82" fg:w="1"/><text x="6.0946%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.07%)</title><rect x="5.8446%" y="565" width="0.0713%" height="15" fill="rgb(206,192,2)" fg:x="82" fg:w="1"/><text x="6.0946%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="5.8446%" y="549" width="0.0713%" height="15" fill="rgb(241,108,4)" fg:x="82" fg:w="1"/><text x="6.0946%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="5.8446%" y="533" width="0.0713%" height="15" fill="rgb(247,173,49)" fg:x="82" fg:w="1"/><text x="6.0946%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.07%)</title><rect x="5.8446%" y="517" width="0.0713%" height="15" fill="rgb(224,114,35)" fg:x="82" fg:w="1"/><text x="6.0946%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="5.8446%" y="501" width="0.0713%" height="15" fill="rgb(245,159,27)" fg:x="82" fg:w="1"/><text x="6.0946%" y="511.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="5.8446%" y="485" width="0.0713%" height="15" fill="rgb(245,172,44)" fg:x="82" fg:w="1"/><text x="6.0946%" y="495.50"></text></g><g><title>&lt;rand_distr::normal::Normal&lt;F&gt; as rand::distributions::distribution::Distribution&lt;F&gt;&gt;::sample (1 samples, 0.07%)</title><rect x="5.8446%" y="469" width="0.0713%" height="15" fill="rgb(236,23,11)" fg:x="82" fg:w="1"/><text x="6.0946%" y="479.50"></text></g><g><title>rand::rng::Rng::sample (1 samples, 0.07%)</title><rect x="5.8446%" y="453" width="0.0713%" height="15" fill="rgb(205,117,38)" fg:x="82" fg:w="1"/><text x="6.0946%" y="463.50"></text></g><g><title>rand_distr::utils::ziggurat (1 samples, 0.07%)</title><rect x="5.8446%" y="437" width="0.0713%" height="15" fill="rgb(237,72,25)" fg:x="82" fg:w="1"/><text x="6.0946%" y="447.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.07%)</title><rect x="5.8446%" y="421" width="0.0713%" height="15" fill="rgb(244,70,9)" fg:x="82" fg:w="1"/><text x="6.0946%" y="431.50"></text></g><g><title>&lt;rand_distr::normal::StandardNormal as rand::distributions::distribution::Distribution&lt;f64&gt;&gt;::sample::zero_case (1 samples, 0.07%)</title><rect x="5.8446%" y="405" width="0.0713%" height="15" fill="rgb(217,125,39)" fg:x="82" fg:w="1"/><text x="6.0946%" y="415.50"></text></g><g><title>&lt;rand::distributions::float::Open01 as rand::distributions::distribution::Distribution&lt;f64&gt;&gt;::sample (1 samples, 0.07%)</title><rect x="5.8446%" y="389" width="0.0713%" height="15" fill="rgb(235,36,10)" fg:x="82" fg:w="1"/><text x="6.0946%" y="399.50"></text></g><g><title>rand::rng::Rng::gen (1 samples, 0.07%)</title><rect x="5.8446%" y="373" width="0.0713%" height="15" fill="rgb(251,123,47)" fg:x="82" fg:w="1"/><text x="6.0946%" y="383.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u64&gt; for rand::distributions::Standard&gt;::sample (1 samples, 0.07%)</title><rect x="5.8446%" y="357" width="0.0713%" height="15" fill="rgb(221,13,13)" fg:x="82" fg:w="1"/><text x="6.0946%" y="367.50"></text></g><g><title>&lt;&amp;mut R as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="5.8446%" y="341" width="0.0713%" height="15" fill="rgb(238,131,9)" fg:x="82" fg:w="1"/><text x="6.0946%" y="351.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="5.8446%" y="325" width="0.0713%" height="15" fill="rgb(211,50,8)" fg:x="82" fg:w="1"/><text x="6.0946%" y="335.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="5.8446%" y="309" width="0.0713%" height="15" fill="rgb(245,182,24)" fg:x="82" fg:w="1"/><text x="6.0946%" y="319.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="5.8446%" y="293" width="0.0713%" height="15" fill="rgb(242,14,37)" fg:x="82" fg:w="1"/><text x="6.0946%" y="303.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (1 samples, 0.07%)</title><rect x="5.8446%" y="277" width="0.0713%" height="15" fill="rgb(246,228,12)" fg:x="82" fg:w="1"/><text x="6.0946%" y="287.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.07%)</title><rect x="5.8446%" y="261" width="0.0713%" height="15" fill="rgb(213,55,15)" fg:x="82" fg:w="1"/><text x="6.0946%" y="271.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.07%)</title><rect x="5.8446%" y="245" width="0.0713%" height="15" fill="rgb(209,9,3)" fg:x="82" fg:w="1"/><text x="6.0946%" y="255.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (1 samples, 0.07%)</title><rect x="5.8446%" y="229" width="0.0713%" height="15" fill="rgb(230,59,30)" fg:x="82" fg:w="1"/><text x="6.0946%" y="239.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (1 samples, 0.07%)</title><rect x="5.8446%" y="213" width="0.0713%" height="15" fill="rgb(209,121,21)" fg:x="82" fg:w="1"/><text x="6.0946%" y="223.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (1 samples, 0.07%)</title><rect x="5.8446%" y="197" width="0.0713%" height="15" fill="rgb(220,109,13)" fg:x="82" fg:w="1"/><text x="6.0946%" y="207.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,S4,NI&gt; as core::ops::arith::Add&gt;::add (1 samples, 0.07%)</title><rect x="5.8446%" y="181" width="0.0713%" height="15" fill="rgb(232,18,1)" fg:x="82" fg:w="1"/><text x="6.0946%" y="191.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_add_epi32 (1 samples, 0.07%)</title><rect x="5.8446%" y="165" width="0.0713%" height="15" fill="rgb(215,41,42)" fg:x="82" fg:w="1"/><text x="6.0946%" y="175.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3 samples, 0.21%)</title><rect x="5.7733%" y="1621" width="0.2138%" height="15" fill="rgb(224,123,36)" fg:x="81" fg:w="3"/><text x="6.0233%" y="1631.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3 samples, 0.21%)</title><rect x="5.7733%" y="1605" width="0.2138%" height="15" fill="rgb(240,125,3)" fg:x="81" fg:w="3"/><text x="6.0233%" y="1615.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (3 samples, 0.21%)</title><rect x="5.7733%" y="1589" width="0.2138%" height="15" fill="rgb(205,98,50)" fg:x="81" fg:w="3"/><text x="6.0233%" y="1599.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.21%)</title><rect x="5.7733%" y="1573" width="0.2138%" height="15" fill="rgb(205,185,37)" fg:x="81" fg:w="3"/><text x="6.0233%" y="1583.50"></text></g><g><title>std::panicking::try (3 samples, 0.21%)</title><rect x="5.7733%" y="1557" width="0.2138%" height="15" fill="rgb(238,207,15)" fg:x="81" fg:w="3"/><text x="6.0233%" y="1567.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.21%)</title><rect x="5.7733%" y="1541" width="0.2138%" height="15" fill="rgb(213,199,42)" fg:x="81" fg:w="3"/><text x="6.0233%" y="1551.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.21%)</title><rect x="5.7733%" y="1525" width="0.2138%" height="15" fill="rgb(235,201,11)" fg:x="81" fg:w="3"/><text x="6.0233%" y="1535.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (3 samples, 0.21%)</title><rect x="5.7733%" y="1509" width="0.2138%" height="15" fill="rgb(207,46,11)" fg:x="81" fg:w="3"/><text x="6.0233%" y="1519.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (3 samples, 0.21%)</title><rect x="5.7733%" y="1493" width="0.2138%" height="15" fill="rgb(241,35,35)" fg:x="81" fg:w="3"/><text x="6.0233%" y="1503.50"></text></g><g><title>rayon_core::registry::main_loop (3 samples, 0.21%)</title><rect x="5.7733%" y="1477" width="0.2138%" height="15" fill="rgb(243,32,47)" fg:x="81" fg:w="3"/><text x="6.0233%" y="1487.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (3 samples, 0.21%)</title><rect x="5.7733%" y="1461" width="0.2138%" height="15" fill="rgb(247,202,23)" fg:x="81" fg:w="3"/><text x="6.0233%" y="1471.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (3 samples, 0.21%)</title><rect x="5.7733%" y="1445" width="0.2138%" height="15" fill="rgb(219,102,11)" fg:x="81" fg:w="3"/><text x="6.0233%" y="1455.50"></text></g><g><title>rayon_core::job::JobRef::execute (3 samples, 0.21%)</title><rect x="5.7733%" y="1429" width="0.2138%" height="15" fill="rgb(243,110,44)" fg:x="81" fg:w="3"/><text x="6.0233%" y="1439.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (3 samples, 0.21%)</title><rect x="5.7733%" y="1413" width="0.2138%" height="15" fill="rgb(222,74,54)" fg:x="81" fg:w="3"/><text x="6.0233%" y="1423.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.21%)</title><rect x="5.7733%" y="1397" width="0.2138%" height="15" fill="rgb(216,99,12)" fg:x="81" fg:w="3"/><text x="6.0233%" y="1407.50"></text></g><g><title>std::panicking::try (3 samples, 0.21%)</title><rect x="5.7733%" y="1381" width="0.2138%" height="15" fill="rgb(226,22,26)" fg:x="81" fg:w="3"/><text x="6.0233%" y="1391.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.21%)</title><rect x="5.7733%" y="1365" width="0.2138%" height="15" fill="rgb(217,163,10)" fg:x="81" fg:w="3"/><text x="6.0233%" y="1375.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.21%)</title><rect x="5.7733%" y="1349" width="0.2138%" height="15" fill="rgb(213,25,53)" fg:x="81" fg:w="3"/><text x="6.0233%" y="1359.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (3 samples, 0.21%)</title><rect x="5.7733%" y="1333" width="0.2138%" height="15" fill="rgb(252,105,26)" fg:x="81" fg:w="3"/><text x="6.0233%" y="1343.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (3 samples, 0.21%)</title><rect x="5.7733%" y="1317" width="0.2138%" height="15" fill="rgb(220,39,43)" fg:x="81" fg:w="3"/><text x="6.0233%" y="1327.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (3 samples, 0.21%)</title><rect x="5.7733%" y="1301" width="0.2138%" height="15" fill="rgb(229,68,48)" fg:x="81" fg:w="3"/><text x="6.0233%" y="1311.50"></text></g><g><title>rayon_core::join::join_context (3 samples, 0.21%)</title><rect x="5.7733%" y="1285" width="0.2138%" height="15" fill="rgb(252,8,32)" fg:x="81" fg:w="3"/><text x="6.0233%" y="1295.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3 samples, 0.21%)</title><rect x="5.7733%" y="1269" width="0.2138%" height="15" fill="rgb(223,20,43)" fg:x="81" fg:w="3"/><text x="6.0233%" y="1279.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="5.9159%" y="1253" width="0.0713%" height="15" fill="rgb(229,81,49)" fg:x="83" fg:w="1"/><text x="6.1659%" y="1263.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="5.9159%" y="1237" width="0.0713%" height="15" fill="rgb(236,28,36)" fg:x="83" fg:w="1"/><text x="6.1659%" y="1247.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="5.9159%" y="1221" width="0.0713%" height="15" fill="rgb(249,185,26)" fg:x="83" fg:w="1"/><text x="6.1659%" y="1231.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="5.9159%" y="1205" width="0.0713%" height="15" fill="rgb(249,174,33)" fg:x="83" fg:w="1"/><text x="6.1659%" y="1215.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="5.9159%" y="1189" width="0.0713%" height="15" fill="rgb(233,201,37)" fg:x="83" fg:w="1"/><text x="6.1659%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="5.9159%" y="1173" width="0.0713%" height="15" fill="rgb(221,78,26)" fg:x="83" fg:w="1"/><text x="6.1659%" y="1183.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="5.9159%" y="1157" width="0.0713%" height="15" fill="rgb(250,127,30)" fg:x="83" fg:w="1"/><text x="6.1659%" y="1167.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="5.9159%" y="1141" width="0.0713%" height="15" fill="rgb(230,49,44)" fg:x="83" fg:w="1"/><text x="6.1659%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="5.9159%" y="1125" width="0.0713%" height="15" fill="rgb(229,67,23)" fg:x="83" fg:w="1"/><text x="6.1659%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="5.9159%" y="1109" width="0.0713%" height="15" fill="rgb(249,83,47)" fg:x="83" fg:w="1"/><text x="6.1659%" y="1119.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="5.9159%" y="1093" width="0.0713%" height="15" fill="rgb(215,43,3)" fg:x="83" fg:w="1"/><text x="6.1659%" y="1103.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="5.9159%" y="1077" width="0.0713%" height="15" fill="rgb(238,154,13)" fg:x="83" fg:w="1"/><text x="6.1659%" y="1087.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="5.9159%" y="1061" width="0.0713%" height="15" fill="rgb(219,56,2)" fg:x="83" fg:w="1"/><text x="6.1659%" y="1071.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="5.9159%" y="1045" width="0.0713%" height="15" fill="rgb(233,0,4)" fg:x="83" fg:w="1"/><text x="6.1659%" y="1055.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="5.9159%" y="1029" width="0.0713%" height="15" fill="rgb(235,30,7)" fg:x="83" fg:w="1"/><text x="6.1659%" y="1039.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="5.9159%" y="1013" width="0.0713%" height="15" fill="rgb(250,79,13)" fg:x="83" fg:w="1"/><text x="6.1659%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="5.9159%" y="997" width="0.0713%" height="15" fill="rgb(211,146,34)" fg:x="83" fg:w="1"/><text x="6.1659%" y="1007.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="5.9159%" y="981" width="0.0713%" height="15" fill="rgb(228,22,38)" fg:x="83" fg:w="1"/><text x="6.1659%" y="991.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="5.9159%" y="965" width="0.0713%" height="15" fill="rgb(235,168,5)" fg:x="83" fg:w="1"/><text x="6.1659%" y="975.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="5.9159%" y="949" width="0.0713%" height="15" fill="rgb(221,155,16)" fg:x="83" fg:w="1"/><text x="6.1659%" y="959.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="5.9159%" y="933" width="0.0713%" height="15" fill="rgb(215,215,53)" fg:x="83" fg:w="1"/><text x="6.1659%" y="943.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="5.9159%" y="917" width="0.0713%" height="15" fill="rgb(223,4,10)" fg:x="83" fg:w="1"/><text x="6.1659%" y="927.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="5.9159%" y="901" width="0.0713%" height="15" fill="rgb(234,103,6)" fg:x="83" fg:w="1"/><text x="6.1659%" y="911.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="5.9159%" y="885" width="0.0713%" height="15" fill="rgb(227,97,0)" fg:x="83" fg:w="1"/><text x="6.1659%" y="895.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="5.9159%" y="869" width="0.0713%" height="15" fill="rgb(234,150,53)" fg:x="83" fg:w="1"/><text x="6.1659%" y="879.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="5.9159%" y="853" width="0.0713%" height="15" fill="rgb(228,201,54)" fg:x="83" fg:w="1"/><text x="6.1659%" y="863.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="5.9159%" y="837" width="0.0713%" height="15" fill="rgb(222,22,37)" fg:x="83" fg:w="1"/><text x="6.1659%" y="847.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="5.9159%" y="821" width="0.0713%" height="15" fill="rgb(237,53,32)" fg:x="83" fg:w="1"/><text x="6.1659%" y="831.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.07%)</title><rect x="5.9159%" y="805" width="0.0713%" height="15" fill="rgb(233,25,53)" fg:x="83" fg:w="1"/><text x="6.1659%" y="815.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="5.9159%" y="789" width="0.0713%" height="15" fill="rgb(210,40,34)" fg:x="83" fg:w="1"/><text x="6.1659%" y="799.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="5.9159%" y="773" width="0.0713%" height="15" fill="rgb(241,220,44)" fg:x="83" fg:w="1"/><text x="6.1659%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="5.9159%" y="757" width="0.0713%" height="15" fill="rgb(235,28,35)" fg:x="83" fg:w="1"/><text x="6.1659%" y="767.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="5.9159%" y="741" width="0.0713%" height="15" fill="rgb(210,56,17)" fg:x="83" fg:w="1"/><text x="6.1659%" y="751.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="5.9159%" y="725" width="0.0713%" height="15" fill="rgb(224,130,29)" fg:x="83" fg:w="1"/><text x="6.1659%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="5.9159%" y="709" width="0.0713%" height="15" fill="rgb(235,212,8)" fg:x="83" fg:w="1"/><text x="6.1659%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="5.9159%" y="693" width="0.0713%" height="15" fill="rgb(223,33,50)" fg:x="83" fg:w="1"/><text x="6.1659%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="5.9159%" y="677" width="0.0713%" height="15" fill="rgb(219,149,13)" fg:x="83" fg:w="1"/><text x="6.1659%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="5.9159%" y="661" width="0.0713%" height="15" fill="rgb(250,156,29)" fg:x="83" fg:w="1"/><text x="6.1659%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.07%)</title><rect x="5.9159%" y="645" width="0.0713%" height="15" fill="rgb(216,193,19)" fg:x="83" fg:w="1"/><text x="6.1659%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="5.9159%" y="629" width="0.0713%" height="15" fill="rgb(216,135,14)" fg:x="83" fg:w="1"/><text x="6.1659%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="5.9159%" y="613" width="0.0713%" height="15" fill="rgb(241,47,5)" fg:x="83" fg:w="1"/><text x="6.1659%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.07%)</title><rect x="5.9159%" y="597" width="0.0713%" height="15" fill="rgb(233,42,35)" fg:x="83" fg:w="1"/><text x="6.1659%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="5.9159%" y="581" width="0.0713%" height="15" fill="rgb(231,13,6)" fg:x="83" fg:w="1"/><text x="6.1659%" y="591.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="5.9159%" y="565" width="0.0713%" height="15" fill="rgb(207,181,40)" fg:x="83" fg:w="1"/><text x="6.1659%" y="575.50"></text></g><g><title>&lt;rand_distr::normal::Normal&lt;F&gt; as rand::distributions::distribution::Distribution&lt;F&gt;&gt;::sample (1 samples, 0.07%)</title><rect x="5.9159%" y="549" width="0.0713%" height="15" fill="rgb(254,173,49)" fg:x="83" fg:w="1"/><text x="6.1659%" y="559.50"></text></g><g><title>rand::rng::Rng::sample (1 samples, 0.07%)</title><rect x="5.9159%" y="533" width="0.0713%" height="15" fill="rgb(221,1,38)" fg:x="83" fg:w="1"/><text x="6.1659%" y="543.50"></text></g><g><title>rand_distr::utils::ziggurat (1 samples, 0.07%)</title><rect x="5.9159%" y="517" width="0.0713%" height="15" fill="rgb(206,124,46)" fg:x="83" fg:w="1"/><text x="6.1659%" y="527.50"></text></g><g><title>&lt;&amp;mut R as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="5.9159%" y="501" width="0.0713%" height="15" fill="rgb(249,21,11)" fg:x="83" fg:w="1"/><text x="6.1659%" y="511.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="5.9159%" y="485" width="0.0713%" height="15" fill="rgb(222,201,40)" fg:x="83" fg:w="1"/><text x="6.1659%" y="495.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="5.9159%" y="469" width="0.0713%" height="15" fill="rgb(235,61,29)" fg:x="83" fg:w="1"/><text x="6.1659%" y="479.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="5.9159%" y="453" width="0.0713%" height="15" fill="rgb(219,207,3)" fg:x="83" fg:w="1"/><text x="6.1659%" y="463.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (1 samples, 0.07%)</title><rect x="5.9159%" y="437" width="0.0713%" height="15" fill="rgb(222,56,46)" fg:x="83" fg:w="1"/><text x="6.1659%" y="447.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.07%)</title><rect x="5.9159%" y="421" width="0.0713%" height="15" fill="rgb(239,76,54)" fg:x="83" fg:w="1"/><text x="6.1659%" y="431.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.07%)</title><rect x="5.9159%" y="405" width="0.0713%" height="15" fill="rgb(231,124,27)" fg:x="83" fg:w="1"/><text x="6.1659%" y="415.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (1 samples, 0.07%)</title><rect x="5.9159%" y="389" width="0.0713%" height="15" fill="rgb(249,195,6)" fg:x="83" fg:w="1"/><text x="6.1659%" y="399.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (1 samples, 0.07%)</title><rect x="5.9159%" y="373" width="0.0713%" height="15" fill="rgb(237,174,47)" fg:x="83" fg:w="1"/><text x="6.1659%" y="383.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (1 samples, 0.07%)</title><rect x="5.9159%" y="357" width="0.0713%" height="15" fill="rgb(206,201,31)" fg:x="83" fg:w="1"/><text x="6.1659%" y="367.50"></text></g><g><title>rand_chacha::guts::round (1 samples, 0.07%)</title><rect x="5.9159%" y="341" width="0.0713%" height="15" fill="rgb(231,57,52)" fg:x="83" fg:w="1"/><text x="6.1659%" y="351.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::arith::AddAssign&gt;::add_assign (1 samples, 0.07%)</title><rect x="5.9159%" y="325" width="0.0713%" height="15" fill="rgb(248,177,22)" fg:x="83" fg:w="1"/><text x="6.1659%" y="335.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::AddAssign&gt;::add_assign (1 samples, 0.07%)</title><rect x="5.9159%" y="309" width="0.0713%" height="15" fill="rgb(215,211,37)" fg:x="83" fg:w="1"/><text x="6.1659%" y="319.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (1 samples, 0.07%)</title><rect x="5.9159%" y="293" width="0.0713%" height="15" fill="rgb(241,128,51)" fg:x="83" fg:w="1"/><text x="6.1659%" y="303.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.07%)</title><rect x="5.9159%" y="277" width="0.0713%" height="15" fill="rgb(227,165,31)" fg:x="83" fg:w="1"/><text x="6.1659%" y="287.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (1 samples, 0.07%)</title><rect x="5.9872%" y="1621" width="0.0713%" height="15" fill="rgb(228,167,24)" fg:x="84" fg:w="1"/><text x="6.2372%" y="1631.50"></text></g><g><title>rayon_core::registry::main_loop (1 samples, 0.07%)</title><rect x="5.9872%" y="1605" width="0.0713%" height="15" fill="rgb(228,143,12)" fg:x="84" fg:w="1"/><text x="6.2372%" y="1615.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.07%)</title><rect x="5.9872%" y="1589" width="0.0713%" height="15" fill="rgb(249,149,8)" fg:x="84" fg:w="1"/><text x="6.2372%" y="1599.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (1 samples, 0.07%)</title><rect x="5.9872%" y="1573" width="0.0713%" height="15" fill="rgb(243,35,44)" fg:x="84" fg:w="1"/><text x="6.2372%" y="1583.50"></text></g><g><title>rayon_core::job::JobRef::execute (1 samples, 0.07%)</title><rect x="5.9872%" y="1557" width="0.0713%" height="15" fill="rgb(246,89,9)" fg:x="84" fg:w="1"/><text x="6.2372%" y="1567.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="5.9872%" y="1541" width="0.0713%" height="15" fill="rgb(233,213,13)" fg:x="84" fg:w="1"/><text x="6.2372%" y="1551.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="5.9872%" y="1525" width="0.0713%" height="15" fill="rgb(233,141,41)" fg:x="84" fg:w="1"/><text x="6.2372%" y="1535.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="5.9872%" y="1509" width="0.0713%" height="15" fill="rgb(239,167,4)" fg:x="84" fg:w="1"/><text x="6.2372%" y="1519.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="5.9872%" y="1493" width="0.0713%" height="15" fill="rgb(209,217,16)" fg:x="84" fg:w="1"/><text x="6.2372%" y="1503.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="5.9872%" y="1477" width="0.0713%" height="15" fill="rgb(219,88,35)" fg:x="84" fg:w="1"/><text x="6.2372%" y="1487.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (1 samples, 0.07%)</title><rect x="5.9872%" y="1461" width="0.0713%" height="15" fill="rgb(220,193,23)" fg:x="84" fg:w="1"/><text x="6.2372%" y="1471.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="5.9872%" y="1445" width="0.0713%" height="15" fill="rgb(230,90,52)" fg:x="84" fg:w="1"/><text x="6.2372%" y="1455.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="5.9872%" y="1429" width="0.0713%" height="15" fill="rgb(252,106,19)" fg:x="84" fg:w="1"/><text x="6.2372%" y="1439.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="5.9872%" y="1413" width="0.0713%" height="15" fill="rgb(206,74,20)" fg:x="84" fg:w="1"/><text x="6.2372%" y="1423.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="5.9872%" y="1397" width="0.0713%" height="15" fill="rgb(230,138,44)" fg:x="84" fg:w="1"/><text x="6.2372%" y="1407.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="5.9872%" y="1381" width="0.0713%" height="15" fill="rgb(235,182,43)" fg:x="84" fg:w="1"/><text x="6.2372%" y="1391.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="5.9872%" y="1365" width="0.0713%" height="15" fill="rgb(242,16,51)" fg:x="84" fg:w="1"/><text x="6.2372%" y="1375.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="5.9872%" y="1349" width="0.0713%" height="15" fill="rgb(248,9,4)" fg:x="84" fg:w="1"/><text x="6.2372%" y="1359.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="5.9872%" y="1333" width="0.0713%" height="15" fill="rgb(210,31,22)" fg:x="84" fg:w="1"/><text x="6.2372%" y="1343.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="5.9872%" y="1317" width="0.0713%" height="15" fill="rgb(239,54,39)" fg:x="84" fg:w="1"/><text x="6.2372%" y="1327.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="5.9872%" y="1301" width="0.0713%" height="15" fill="rgb(230,99,41)" fg:x="84" fg:w="1"/><text x="6.2372%" y="1311.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="5.9872%" y="1285" width="0.0713%" height="15" fill="rgb(253,106,12)" fg:x="84" fg:w="1"/><text x="6.2372%" y="1295.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="5.9872%" y="1269" width="0.0713%" height="15" fill="rgb(213,46,41)" fg:x="84" fg:w="1"/><text x="6.2372%" y="1279.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="5.9872%" y="1253" width="0.0713%" height="15" fill="rgb(215,133,35)" fg:x="84" fg:w="1"/><text x="6.2372%" y="1263.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="5.9872%" y="1237" width="0.0713%" height="15" fill="rgb(213,28,5)" fg:x="84" fg:w="1"/><text x="6.2372%" y="1247.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="5.9872%" y="1221" width="0.0713%" height="15" fill="rgb(215,77,49)" fg:x="84" fg:w="1"/><text x="6.2372%" y="1231.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="5.9872%" y="1205" width="0.0713%" height="15" fill="rgb(248,100,22)" fg:x="84" fg:w="1"/><text x="6.2372%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="5.9872%" y="1189" width="0.0713%" height="15" fill="rgb(208,67,9)" fg:x="84" fg:w="1"/><text x="6.2372%" y="1199.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="5.9872%" y="1173" width="0.0713%" height="15" fill="rgb(219,133,21)" fg:x="84" fg:w="1"/><text x="6.2372%" y="1183.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="5.9872%" y="1157" width="0.0713%" height="15" fill="rgb(246,46,29)" fg:x="84" fg:w="1"/><text x="6.2372%" y="1167.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="5.9872%" y="1141" width="0.0713%" height="15" fill="rgb(246,185,52)" fg:x="84" fg:w="1"/><text x="6.2372%" y="1151.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="5.9872%" y="1125" width="0.0713%" height="15" fill="rgb(252,136,11)" fg:x="84" fg:w="1"/><text x="6.2372%" y="1135.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="5.9872%" y="1109" width="0.0713%" height="15" fill="rgb(219,138,53)" fg:x="84" fg:w="1"/><text x="6.2372%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="5.9872%" y="1093" width="0.0713%" height="15" fill="rgb(211,51,23)" fg:x="84" fg:w="1"/><text x="6.2372%" y="1103.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="5.9872%" y="1077" width="0.0713%" height="15" fill="rgb(247,221,28)" fg:x="84" fg:w="1"/><text x="6.2372%" y="1087.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="5.9872%" y="1061" width="0.0713%" height="15" fill="rgb(251,222,45)" fg:x="84" fg:w="1"/><text x="6.2372%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="5.9872%" y="1045" width="0.0713%" height="15" fill="rgb(217,162,53)" fg:x="84" fg:w="1"/><text x="6.2372%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="5.9872%" y="1029" width="0.0713%" height="15" fill="rgb(229,93,14)" fg:x="84" fg:w="1"/><text x="6.2372%" y="1039.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="5.9872%" y="1013" width="0.0713%" height="15" fill="rgb(209,67,49)" fg:x="84" fg:w="1"/><text x="6.2372%" y="1023.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="5.9872%" y="997" width="0.0713%" height="15" fill="rgb(213,87,29)" fg:x="84" fg:w="1"/><text x="6.2372%" y="1007.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="5.9872%" y="981" width="0.0713%" height="15" fill="rgb(205,151,52)" fg:x="84" fg:w="1"/><text x="6.2372%" y="991.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="5.9872%" y="965" width="0.0713%" height="15" fill="rgb(253,215,39)" fg:x="84" fg:w="1"/><text x="6.2372%" y="975.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="5.9872%" y="949" width="0.0713%" height="15" fill="rgb(221,220,41)" fg:x="84" fg:w="1"/><text x="6.2372%" y="959.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.07%)</title><rect x="5.9872%" y="933" width="0.0713%" height="15" fill="rgb(218,133,21)" fg:x="84" fg:w="1"/><text x="6.2372%" y="943.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="5.9872%" y="917" width="0.0713%" height="15" fill="rgb(221,193,43)" fg:x="84" fg:w="1"/><text x="6.2372%" y="927.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="5.9872%" y="901" width="0.0713%" height="15" fill="rgb(240,128,52)" fg:x="84" fg:w="1"/><text x="6.2372%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="5.9872%" y="885" width="0.0713%" height="15" fill="rgb(253,114,12)" fg:x="84" fg:w="1"/><text x="6.2372%" y="895.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="5.9872%" y="869" width="0.0713%" height="15" fill="rgb(215,223,47)" fg:x="84" fg:w="1"/><text x="6.2372%" y="879.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="5.9872%" y="853" width="0.0713%" height="15" fill="rgb(248,225,23)" fg:x="84" fg:w="1"/><text x="6.2372%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="5.9872%" y="837" width="0.0713%" height="15" fill="rgb(250,108,0)" fg:x="84" fg:w="1"/><text x="6.2372%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="5.9872%" y="821" width="0.0713%" height="15" fill="rgb(228,208,7)" fg:x="84" fg:w="1"/><text x="6.2372%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="5.9872%" y="805" width="0.0713%" height="15" fill="rgb(244,45,10)" fg:x="84" fg:w="1"/><text x="6.2372%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="5.9872%" y="789" width="0.0713%" height="15" fill="rgb(207,125,25)" fg:x="84" fg:w="1"/><text x="6.2372%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.07%)</title><rect x="5.9872%" y="773" width="0.0713%" height="15" fill="rgb(210,195,18)" fg:x="84" fg:w="1"/><text x="6.2372%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="5.9872%" y="757" width="0.0713%" height="15" fill="rgb(249,80,12)" fg:x="84" fg:w="1"/><text x="6.2372%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="5.9872%" y="741" width="0.0713%" height="15" fill="rgb(221,65,9)" fg:x="84" fg:w="1"/><text x="6.2372%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.07%)</title><rect x="5.9872%" y="725" width="0.0713%" height="15" fill="rgb(235,49,36)" fg:x="84" fg:w="1"/><text x="6.2372%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="5.9872%" y="709" width="0.0713%" height="15" fill="rgb(225,32,20)" fg:x="84" fg:w="1"/><text x="6.2372%" y="719.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="5.9872%" y="693" width="0.0713%" height="15" fill="rgb(215,141,46)" fg:x="84" fg:w="1"/><text x="6.2372%" y="703.50"></text></g><g><title>&lt;rand_distr::normal::Normal&lt;F&gt; as rand::distributions::distribution::Distribution&lt;F&gt;&gt;::sample (1 samples, 0.07%)</title><rect x="5.9872%" y="677" width="0.0713%" height="15" fill="rgb(250,160,47)" fg:x="84" fg:w="1"/><text x="6.2372%" y="687.50"></text></g><g><title>rand::rng::Rng::sample (1 samples, 0.07%)</title><rect x="5.9872%" y="661" width="0.0713%" height="15" fill="rgb(216,222,40)" fg:x="84" fg:w="1"/><text x="6.2372%" y="671.50"></text></g><g><title>rand_distr::utils::ziggurat (1 samples, 0.07%)</title><rect x="5.9872%" y="645" width="0.0713%" height="15" fill="rgb(234,217,39)" fg:x="84" fg:w="1"/><text x="6.2372%" y="655.50"></text></g><g><title>&lt;&amp;mut R as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="5.9872%" y="629" width="0.0713%" height="15" fill="rgb(207,178,40)" fg:x="84" fg:w="1"/><text x="6.2372%" y="639.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="5.9872%" y="613" width="0.0713%" height="15" fill="rgb(221,136,13)" fg:x="84" fg:w="1"/><text x="6.2372%" y="623.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="5.9872%" y="597" width="0.0713%" height="15" fill="rgb(249,199,10)" fg:x="84" fg:w="1"/><text x="6.2372%" y="607.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="5.9872%" y="581" width="0.0713%" height="15" fill="rgb(249,222,13)" fg:x="84" fg:w="1"/><text x="6.2372%" y="591.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (1 samples, 0.07%)</title><rect x="5.9872%" y="565" width="0.0713%" height="15" fill="rgb(244,185,38)" fg:x="84" fg:w="1"/><text x="6.2372%" y="575.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.07%)</title><rect x="5.9872%" y="549" width="0.0713%" height="15" fill="rgb(236,202,9)" fg:x="84" fg:w="1"/><text x="6.2372%" y="559.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.07%)</title><rect x="5.9872%" y="533" width="0.0713%" height="15" fill="rgb(250,229,37)" fg:x="84" fg:w="1"/><text x="6.2372%" y="543.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (1 samples, 0.07%)</title><rect x="5.9872%" y="517" width="0.0713%" height="15" fill="rgb(206,174,23)" fg:x="84" fg:w="1"/><text x="6.2372%" y="527.50"></text></g><g><title>std_detect::detect::arch::__is_feature_detected::avx2 (1 samples, 0.07%)</title><rect x="5.9872%" y="501" width="0.0713%" height="15" fill="rgb(211,33,43)" fg:x="84" fg:w="1"/><text x="6.2372%" y="511.50"></text></g><g><title>std_detect::detect::check_for (1 samples, 0.07%)</title><rect x="5.9872%" y="485" width="0.0713%" height="15" fill="rgb(245,58,50)" fg:x="84" fg:w="1"/><text x="6.2372%" y="495.50"></text></g><g><title>std_detect::detect::cache::test (1 samples, 0.07%)</title><rect x="5.9872%" y="469" width="0.0713%" height="15" fill="rgb(244,68,36)" fg:x="84" fg:w="1"/><text x="6.2372%" y="479.50"></text></g><g><title>std_detect::detect::cache::Cache::test (1 samples, 0.07%)</title><rect x="5.9872%" y="453" width="0.0713%" height="15" fill="rgb(232,229,15)" fg:x="84" fg:w="1"/><text x="6.2372%" y="463.50"></text></g><g><title>__GI___sched_yield (1 samples, 0.07%)</title><rect x="6.0584%" y="1621" width="0.0713%" height="15" fill="rgb(254,30,23)" fg:x="85" fg:w="1"/><text x="6.3084%" y="1631.50"></text></g><g><title>__futex_abstimed_wait_common64 (1 samples, 0.07%)</title><rect x="6.1297%" y="1621" width="0.0713%" height="15" fill="rgb(235,160,14)" fg:x="86" fg:w="1"/><text x="6.3797%" y="1631.50"></text></g><g><title>_int_malloc (1 samples, 0.07%)</title><rect x="6.2010%" y="1621" width="0.0713%" height="15" fill="rgb(212,155,44)" fg:x="87" fg:w="1"/><text x="6.4510%" y="1631.50"></text></g><g><title>clap::derive::Parser::parse (1 samples, 0.07%)</title><rect x="6.2723%" y="1621" width="0.0713%" height="15" fill="rgb(226,2,50)" fg:x="88" fg:w="1"/><text x="6.5223%" y="1631.50"></text></g><g><title>clap::build::app::App::get_matches (1 samples, 0.07%)</title><rect x="6.2723%" y="1605" width="0.0713%" height="15" fill="rgb(234,177,6)" fg:x="88" fg:w="1"/><text x="6.5223%" y="1615.50"></text></g><g><title>clap::build::app::App::try_get_matches_from_mut (1 samples, 0.07%)</title><rect x="6.2723%" y="1589" width="0.0713%" height="15" fill="rgb(217,24,9)" fg:x="88" fg:w="1"/><text x="6.5223%" y="1599.50"></text></g><g><title>clap::parse::arg_matcher::ArgMatcher::needs_more_vals (1 samples, 0.07%)</title><rect x="6.2723%" y="1573" width="0.0713%" height="15" fill="rgb(220,13,46)" fg:x="88" fg:w="1"/><text x="6.5223%" y="1583.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (1 samples, 0.07%)</title><rect x="6.2723%" y="1557" width="0.0713%" height="15" fill="rgb(239,221,27)" fg:x="88" fg:w="1"/><text x="6.5223%" y="1567.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="6.2723%" y="1541" width="0.0713%" height="15" fill="rgb(222,198,25)" fg:x="88" fg:w="1"/><text x="6.5223%" y="1551.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="6.2723%" y="1525" width="0.0713%" height="15" fill="rgb(211,99,13)" fg:x="88" fg:w="1"/><text x="6.5223%" y="1535.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="6.2723%" y="1509" width="0.0713%" height="15" fill="rgb(232,111,31)" fg:x="88" fg:w="1"/><text x="6.5223%" y="1519.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="6.2723%" y="1493" width="0.0713%" height="15" fill="rgb(245,82,37)" fg:x="88" fg:w="1"/><text x="6.5223%" y="1503.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (1 samples, 0.07%)</title><rect x="6.2723%" y="1477" width="0.0713%" height="15" fill="rgb(227,149,46)" fg:x="88" fg:w="1"/><text x="6.5223%" y="1487.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="6.2723%" y="1461" width="0.0713%" height="15" fill="rgb(218,36,50)" fg:x="88" fg:w="1"/><text x="6.5223%" y="1471.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="6.2723%" y="1445" width="0.0713%" height="15" fill="rgb(226,80,48)" fg:x="88" fg:w="1"/><text x="6.5223%" y="1455.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (5 samples, 0.36%)</title><rect x="6.3435%" y="1621" width="0.3564%" height="15" fill="rgb(238,224,15)" fg:x="89" fg:w="5"/><text x="6.5935%" y="1631.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (5 samples, 0.36%)</title><rect x="6.3435%" y="1605" width="0.3564%" height="15" fill="rgb(241,136,10)" fg:x="89" fg:w="5"/><text x="6.5935%" y="1615.50"></text></g><g><title>core::hash::Hasher::write_usize (5 samples, 0.36%)</title><rect x="6.3435%" y="1589" width="0.3564%" height="15" fill="rgb(208,32,45)" fg:x="89" fg:w="5"/><text x="6.5935%" y="1599.50"></text></g><g><title>__futex_abstimed_wait_common64 (5 samples, 0.36%)</title><rect x="6.6999%" y="1253" width="0.3564%" height="15" fill="rgb(207,135,9)" fg:x="94" fg:w="5"/><text x="6.9499%" y="1263.50"></text></g><g><title>core::iter::traits::iterator::Iterator::unzip (10 samples, 0.71%)</title><rect x="6.6999%" y="1621" width="0.7128%" height="15" fill="rgb(206,86,44)" fg:x="94" fg:w="10"/><text x="6.9499%" y="1631.50"></text></g><g><title>&lt;(ExtendA,ExtendB) as core::iter::traits::collect::Extend&lt;(A,B)&gt;&gt;::extend (10 samples, 0.71%)</title><rect x="6.6999%" y="1605" width="0.7128%" height="15" fill="rgb(245,177,15)" fg:x="94" fg:w="10"/><text x="6.9499%" y="1615.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (10 samples, 0.71%)</title><rect x="6.6999%" y="1589" width="0.7128%" height="15" fill="rgb(206,64,50)" fg:x="94" fg:w="10"/><text x="6.9499%" y="1599.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (10 samples, 0.71%)</title><rect x="6.6999%" y="1573" width="0.7128%" height="15" fill="rgb(234,36,40)" fg:x="94" fg:w="10"/><text x="6.9499%" y="1583.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}} (10 samples, 0.71%)</title><rect x="6.6999%" y="1557" width="0.7128%" height="15" fill="rgb(213,64,8)" fg:x="94" fg:w="10"/><text x="6.9499%" y="1567.50"></text></g><g><title>rayon::iter::ParallelIterator::reduce (10 samples, 0.71%)</title><rect x="6.6999%" y="1541" width="0.7128%" height="15" fill="rgb(210,75,36)" fg:x="94" fg:w="10"/><text x="6.9499%" y="1551.50"></text></g><g><title>rayon::iter::reduce::reduce (10 samples, 0.71%)</title><rect x="6.6999%" y="1525" width="0.7128%" height="15" fill="rgb(229,88,21)" fg:x="94" fg:w="10"/><text x="6.9499%" y="1535.50"></text></g><g><title>&lt;rayon::iter::map::Map&lt;I,F&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed (10 samples, 0.71%)</title><rect x="6.6999%" y="1509" width="0.7128%" height="15" fill="rgb(252,204,47)" fg:x="94" fg:w="10"/><text x="6.9499%" y="1519.50"></text></g><g><title>&lt;rayon::range::Iter&lt;T&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed (10 samples, 0.71%)</title><rect x="6.6999%" y="1493" width="0.7128%" height="15" fill="rgb(208,77,27)" fg:x="94" fg:w="10"/><text x="6.9499%" y="1503.50"></text></g><g><title>rayon::range::&lt;impl rayon::range::private::RangeInteger for usize&gt;::drive_unindexed (10 samples, 0.71%)</title><rect x="6.6999%" y="1477" width="0.7128%" height="15" fill="rgb(221,76,26)" fg:x="94" fg:w="10"/><text x="6.9499%" y="1487.50"></text></g><g><title>rayon::iter::plumbing::bridge (10 samples, 0.71%)</title><rect x="6.6999%" y="1461" width="0.7128%" height="15" fill="rgb(225,139,18)" fg:x="94" fg:w="10"/><text x="6.9499%" y="1471.50"></text></g><g><title>&lt;rayon::range::Iter&lt;T&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer (10 samples, 0.71%)</title><rect x="6.6999%" y="1445" width="0.7128%" height="15" fill="rgb(230,137,11)" fg:x="94" fg:w="10"/><text x="6.9499%" y="1455.50"></text></g><g><title>rayon::range::&lt;impl rayon::range::private::IndexedRangeInteger for usize&gt;::with_producer (10 samples, 0.71%)</title><rect x="6.6999%" y="1429" width="0.7128%" height="15" fill="rgb(212,28,1)" fg:x="94" fg:w="10"/><text x="6.9499%" y="1439.50"></text></g><g><title>&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (10 samples, 0.71%)</title><rect x="6.6999%" y="1413" width="0.7128%" height="15" fill="rgb(248,164,17)" fg:x="94" fg:w="10"/><text x="6.9499%" y="1423.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer (10 samples, 0.71%)</title><rect x="6.6999%" y="1397" width="0.7128%" height="15" fill="rgb(222,171,42)" fg:x="94" fg:w="10"/><text x="6.9499%" y="1407.50"></text></g><g><title>rayon_core::join::join_context (10 samples, 0.71%)</title><rect x="6.6999%" y="1381" width="0.7128%" height="15" fill="rgb(243,84,45)" fg:x="94" fg:w="10"/><text x="6.9499%" y="1391.50"></text></g><g><title>rayon_core::registry::Registry::in_worker_cold (10 samples, 0.71%)</title><rect x="6.6999%" y="1365" width="0.7128%" height="15" fill="rgb(252,49,23)" fg:x="94" fg:w="10"/><text x="6.9499%" y="1375.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (10 samples, 0.71%)</title><rect x="6.6999%" y="1349" width="0.7128%" height="15" fill="rgb(215,19,7)" fg:x="94" fg:w="10"/><text x="6.9499%" y="1359.50"></text></g><g><title>rayon_core::registry::Registry::in_worker_cold::{{closure}} (10 samples, 0.71%)</title><rect x="6.6999%" y="1333" width="0.7128%" height="15" fill="rgb(238,81,41)" fg:x="94" fg:w="10"/><text x="6.9499%" y="1343.50"></text></g><g><title>std::sync::condvar::Condvar::wait (10 samples, 0.71%)</title><rect x="6.6999%" y="1317" width="0.7128%" height="15" fill="rgb(210,199,37)" fg:x="94" fg:w="10"/><text x="6.9499%" y="1327.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (10 samples, 0.71%)</title><rect x="6.6999%" y="1301" width="0.7128%" height="15" fill="rgb(244,192,49)" fg:x="94" fg:w="10"/><text x="6.9499%" y="1311.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (10 samples, 0.71%)</title><rect x="6.6999%" y="1285" width="0.7128%" height="15" fill="rgb(226,211,11)" fg:x="94" fg:w="10"/><text x="6.9499%" y="1295.50"></text></g><g><title>__pthread_cond_wait (10 samples, 0.71%)</title><rect x="6.6999%" y="1269" width="0.7128%" height="15" fill="rgb(236,162,54)" fg:x="94" fg:w="10"/><text x="6.9499%" y="1279.50"></text></g><g><title>__pthread_mutex_cond_lock (5 samples, 0.36%)</title><rect x="7.0563%" y="1253" width="0.3564%" height="15" fill="rgb(220,229,9)" fg:x="99" fg:w="5"/><text x="7.3063%" y="1263.50"></text></g><g><title>__lll_lock_wait (5 samples, 0.36%)</title><rect x="7.0563%" y="1237" width="0.3564%" height="15" fill="rgb(250,87,22)" fg:x="99" fg:w="5"/><text x="7.3063%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;ldpc::decoding::BMCDecoderState&lt;256_usize&gt;&gt; (2 samples, 0.14%)</title><rect x="7.4127%" y="1621" width="0.1426%" height="15" fill="rgb(239,43,17)" fg:x="104" fg:w="2"/><text x="7.6627%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;(usize,usize),ldpc::decoding::Message&lt;f64&gt;&gt;&gt; (2 samples, 0.14%)</title><rect x="7.4127%" y="1605" width="0.1426%" height="15" fill="rgb(231,177,25)" fg:x="104" fg:w="2"/><text x="7.6627%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;(usize,usize),ldpc::decoding::Message&lt;f64&gt;,std::collections::hash::map::RandomState&gt;&gt; (2 samples, 0.14%)</title><rect x="7.4127%" y="1589" width="0.1426%" height="15" fill="rgb(219,179,1)" fg:x="104" fg:w="2"/><text x="7.6627%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;((usize,usize),ldpc::decoding::Message&lt;f64&gt;)&gt;&gt; (2 samples, 0.14%)</title><rect x="7.4127%" y="1573" width="0.1426%" height="15" fill="rgb(238,219,53)" fg:x="104" fg:w="2"/><text x="7.6627%" y="1583.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.14%)</title><rect x="7.4127%" y="1557" width="0.1426%" height="15" fill="rgb(232,167,36)" fg:x="104" fg:w="2"/><text x="7.6627%" y="1567.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (2 samples, 0.14%)</title><rect x="7.4127%" y="1541" width="0.1426%" height="15" fill="rgb(244,19,51)" fg:x="104" fg:w="2"/><text x="7.6627%" y="1551.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (2 samples, 0.14%)</title><rect x="7.4127%" y="1525" width="0.1426%" height="15" fill="rgb(224,6,22)" fg:x="104" fg:w="2"/><text x="7.6627%" y="1535.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.14%)</title><rect x="7.4127%" y="1509" width="0.1426%" height="15" fill="rgb(224,145,5)" fg:x="104" fg:w="2"/><text x="7.6627%" y="1519.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.14%)</title><rect x="7.4127%" y="1493" width="0.1426%" height="15" fill="rgb(234,130,49)" fg:x="104" fg:w="2"/><text x="7.6627%" y="1503.50"></text></g><g><title>__GI___libc_free (2 samples, 0.14%)</title><rect x="7.4127%" y="1477" width="0.1426%" height="15" fill="rgb(254,6,2)" fg:x="104" fg:w="2"/><text x="7.6627%" y="1487.50"></text></g><g><title>_int_free (2 samples, 0.14%)</title><rect x="7.4127%" y="1461" width="0.1426%" height="15" fill="rgb(208,96,46)" fg:x="104" fg:w="2"/><text x="7.6627%" y="1471.50"></text></g><g><title>&lt;f64 as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (3 samples, 0.21%)</title><rect x="7.9829%" y="1525" width="0.2138%" height="15" fill="rgb(239,3,39)" fg:x="112" fg:w="3"/><text x="8.2329%" y="1535.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.14%)</title><rect x="9.4797%" y="1397" width="0.1426%" height="15" fill="rgb(233,210,1)" fg:x="133" fg:w="2"/><text x="9.7297%" y="1407.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.43%)</title><rect x="9.3371%" y="1413" width="0.4277%" height="15" fill="rgb(244,137,37)" fg:x="131" fg:w="6"/><text x="9.5871%" y="1423.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.14%)</title><rect x="9.6222%" y="1397" width="0.1426%" height="15" fill="rgb(240,136,2)" fg:x="135" fg:w="2"/><text x="9.8722%" y="1407.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (7 samples, 0.50%)</title><rect x="10.1212%" y="1397" width="0.4989%" height="15" fill="rgb(239,18,37)" fg:x="142" fg:w="7"/><text x="10.3712%" y="1407.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (26 samples, 1.85%)</title><rect x="9.0520%" y="1461" width="1.8532%" height="15" fill="rgb(218,185,22)" fg:x="127" fg:w="26"/><text x="9.3020%" y="1471.50">&lt;..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (26 samples, 1.85%)</title><rect x="9.0520%" y="1445" width="1.8532%" height="15" fill="rgb(225,218,4)" fg:x="127" fg:w="26"/><text x="9.3020%" y="1455.50">&lt;..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (26 samples, 1.85%)</title><rect x="9.0520%" y="1429" width="1.8532%" height="15" fill="rgb(230,182,32)" fg:x="127" fg:w="26"/><text x="9.3020%" y="1439.50">&lt;..</text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (16 samples, 1.14%)</title><rect x="9.7648%" y="1413" width="1.1404%" height="15" fill="rgb(242,56,43)" fg:x="137" fg:w="16"/><text x="10.0148%" y="1423.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4 samples, 0.29%)</title><rect x="10.6201%" y="1397" width="0.2851%" height="15" fill="rgb(233,99,24)" fg:x="149" fg:w="4"/><text x="10.8701%" y="1407.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (9 samples, 0.64%)</title><rect x="10.9052%" y="1461" width="0.6415%" height="15" fill="rgb(234,209,42)" fg:x="153" fg:w="9"/><text x="11.1552%" y="1471.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (5 samples, 0.36%)</title><rect x="11.1903%" y="1445" width="0.3564%" height="15" fill="rgb(227,7,12)" fg:x="157" fg:w="5"/><text x="11.4403%" y="1455.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (3 samples, 0.21%)</title><rect x="11.3329%" y="1429" width="0.2138%" height="15" fill="rgb(245,203,43)" fg:x="159" fg:w="3"/><text x="11.5829%" y="1439.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (3 samples, 0.21%)</title><rect x="11.3329%" y="1413" width="0.2138%" height="15" fill="rgb(238,205,33)" fg:x="159" fg:w="3"/><text x="11.5829%" y="1423.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.29%)</title><rect x="14.0413%" y="1365" width="0.2851%" height="15" fill="rgb(231,56,7)" fg:x="197" fg:w="4"/><text x="14.2913%" y="1375.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (14 samples, 1.00%)</title><rect x="13.5424%" y="1381" width="0.9979%" height="15" fill="rgb(244,186,29)" fg:x="190" fg:w="14"/><text x="13.7924%" y="1391.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.21%)</title><rect x="14.3264%" y="1365" width="0.2138%" height="15" fill="rgb(234,111,31)" fg:x="201" fg:w="3"/><text x="14.5764%" y="1375.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.14%)</title><rect x="14.5403%" y="1381" width="0.1426%" height="15" fill="rgb(241,149,10)" fg:x="204" fg:w="2"/><text x="14.7903%" y="1391.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (45 samples, 3.21%)</title><rect x="11.5467%" y="1461" width="3.2074%" height="15" fill="rgb(249,206,44)" fg:x="162" fg:w="45"/><text x="11.7967%" y="1471.50">cor..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (45 samples, 3.21%)</title><rect x="11.5467%" y="1445" width="3.2074%" height="15" fill="rgb(251,153,30)" fg:x="162" fg:w="45"/><text x="11.7967%" y="1455.50">cor..</text></g><g><title>core::hash::Hasher::write_usize (45 samples, 3.21%)</title><rect x="11.5467%" y="1429" width="3.2074%" height="15" fill="rgb(239,152,38)" fg:x="162" fg:w="45"/><text x="11.7967%" y="1439.50">cor..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (41 samples, 2.92%)</title><rect x="11.8318%" y="1413" width="2.9223%" height="15" fill="rgb(249,139,47)" fg:x="166" fg:w="41"/><text x="12.0818%" y="1423.50">&lt;c..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (33 samples, 2.35%)</title><rect x="12.4020%" y="1397" width="2.3521%" height="15" fill="rgb(244,64,35)" fg:x="174" fg:w="33"/><text x="12.6520%" y="1407.50">&lt;..</text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="14.6828%" y="1381" width="0.0713%" height="15" fill="rgb(216,46,15)" fg:x="206" fg:w="1"/><text x="14.9328%" y="1391.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.21%)</title><rect x="15.1105%" y="1429" width="0.2138%" height="15" fill="rgb(250,74,19)" fg:x="212" fg:w="3"/><text x="15.3605%" y="1439.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.21%)</title><rect x="15.1105%" y="1413" width="0.2138%" height="15" fill="rgb(249,42,33)" fg:x="212" fg:w="3"/><text x="15.3605%" y="1423.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="15.1818%" y="1397" width="0.1426%" height="15" fill="rgb(242,149,17)" fg:x="213" fg:w="2"/><text x="15.4318%" y="1407.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.14%)</title><rect x="15.1818%" y="1381" width="0.1426%" height="15" fill="rgb(244,29,21)" fg:x="213" fg:w="2"/><text x="15.4318%" y="1391.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (6 samples, 0.43%)</title><rect x="15.3243%" y="1429" width="0.4277%" height="15" fill="rgb(220,130,37)" fg:x="215" fg:w="6"/><text x="15.5743%" y="1439.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (A,B)&gt;::eq (6 samples, 0.43%)</title><rect x="15.3243%" y="1413" width="0.4277%" height="15" fill="rgb(211,67,2)" fg:x="215" fg:w="6"/><text x="15.5743%" y="1423.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (6 samples, 0.43%)</title><rect x="15.3243%" y="1397" width="0.4277%" height="15" fill="rgb(235,68,52)" fg:x="215" fg:w="6"/><text x="15.5743%" y="1407.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.07%)</title><rect x="15.7520%" y="1381" width="0.0713%" height="15" fill="rgb(246,142,3)" fg:x="221" fg:w="1"/><text x="16.0020%" y="1391.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (5 samples, 0.36%)</title><rect x="15.8232%" y="1381" width="0.3564%" height="15" fill="rgb(241,25,7)" fg:x="222" fg:w="5"/><text x="16.0732%" y="1391.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (5 samples, 0.36%)</title><rect x="15.8232%" y="1365" width="0.3564%" height="15" fill="rgb(242,119,39)" fg:x="222" fg:w="5"/><text x="16.0732%" y="1375.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.36%)</title><rect x="15.8232%" y="1349" width="0.3564%" height="15" fill="rgb(241,98,45)" fg:x="222" fg:w="5"/><text x="16.0732%" y="1359.50"></text></g><g><title>ldpc::decoding::BMCDecoder&lt;_,_&gt;::belief (123 samples, 8.77%)</title><rect x="7.5552%" y="1621" width="8.7669%" height="15" fill="rgb(254,28,30)" fg:x="106" fg:w="123"/><text x="7.8052%" y="1631.50">ldpc::decodi..</text></g><g><title>core::iter::traits::iterator::Iterator::sum (119 samples, 8.48%)</title><rect x="7.8403%" y="1605" width="8.4818%" height="15" fill="rgb(241,142,54)" fg:x="110" fg:w="119"/><text x="8.0903%" y="1615.50">core::iter::..</text></g><g><title>&lt;f64 as core::iter::traits::accum::Sum&gt;::sum (119 samples, 8.48%)</title><rect x="7.8403%" y="1589" width="8.4818%" height="15" fill="rgb(222,85,15)" fg:x="110" fg:w="119"/><text x="8.0903%" y="1599.50">&lt;f64 as core..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (119 samples, 8.48%)</title><rect x="7.8403%" y="1573" width="8.4818%" height="15" fill="rgb(210,85,47)" fg:x="110" fg:w="119"/><text x="8.0903%" y="1583.50">&lt;core::iter:..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (118 samples, 8.41%)</title><rect x="7.9116%" y="1557" width="8.4105%" height="15" fill="rgb(224,206,25)" fg:x="111" fg:w="118"/><text x="8.1616%" y="1567.50">core::iter::..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (117 samples, 8.34%)</title><rect x="7.9829%" y="1541" width="8.3393%" height="15" fill="rgb(243,201,19)" fg:x="112" fg:w="117"/><text x="8.2329%" y="1551.50">core::iter::..</text></g><g><title>ldpc::decoding::BMCDecoder&lt;_,_&gt;::belief::{{closure}} (114 samples, 8.13%)</title><rect x="8.1967%" y="1525" width="8.1254%" height="15" fill="rgb(236,59,4)" fg:x="115" fg:w="114"/><text x="8.4467%" y="1535.50">ldpc::decod..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (108 samples, 7.70%)</title><rect x="8.6244%" y="1509" width="7.6978%" height="15" fill="rgb(254,179,45)" fg:x="121" fg:w="108"/><text x="8.8744%" y="1519.50">std::collec..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (108 samples, 7.70%)</title><rect x="8.6244%" y="1493" width="7.6978%" height="15" fill="rgb(226,14,10)" fg:x="121" fg:w="108"/><text x="8.8744%" y="1503.50">hashbrown::..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (107 samples, 7.63%)</title><rect x="8.6957%" y="1477" width="7.6265%" height="15" fill="rgb(244,27,41)" fg:x="122" fg:w="107"/><text x="8.9457%" y="1487.50">hashbrown:..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (22 samples, 1.57%)</title><rect x="14.7541%" y="1461" width="1.5681%" height="15" fill="rgb(235,35,32)" fg:x="207" fg:w="22"/><text x="15.0041%" y="1471.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (20 samples, 1.43%)</title><rect x="14.8967%" y="1445" width="1.4255%" height="15" fill="rgb(218,68,31)" fg:x="209" fg:w="20"/><text x="15.1467%" y="1455.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (8 samples, 0.57%)</title><rect x="15.7520%" y="1429" width="0.5702%" height="15" fill="rgb(207,120,37)" fg:x="221" fg:w="8"/><text x="16.0020%" y="1439.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (8 samples, 0.57%)</title><rect x="15.7520%" y="1413" width="0.5702%" height="15" fill="rgb(227,98,0)" fg:x="221" fg:w="8"/><text x="16.0020%" y="1423.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (8 samples, 0.57%)</title><rect x="15.7520%" y="1397" width="0.5702%" height="15" fill="rgb(207,7,3)" fg:x="221" fg:w="8"/><text x="16.0020%" y="1407.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.14%)</title><rect x="16.1796%" y="1381" width="0.1426%" height="15" fill="rgb(206,98,19)" fg:x="227" fg:w="2"/><text x="16.4296%" y="1391.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.14%)</title><rect x="16.1796%" y="1365" width="0.1426%" height="15" fill="rgb(217,5,26)" fg:x="227" fg:w="2"/><text x="16.4296%" y="1375.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.14%)</title><rect x="16.1796%" y="1349" width="0.1426%" height="15" fill="rgb(235,190,38)" fg:x="227" fg:w="2"/><text x="16.4296%" y="1359.50"></text></g><g><title>core::core_arch::simd::i8x16::new (2 samples, 0.14%)</title><rect x="16.1796%" y="1333" width="0.1426%" height="15" fill="rgb(247,86,24)" fg:x="227" fg:w="2"/><text x="16.4296%" y="1343.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.14%)</title><rect x="17.3200%" y="1381" width="0.1426%" height="15" fill="rgb(205,101,16)" fg:x="243" fg:w="2"/><text x="17.5700%" y="1391.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.43%)</title><rect x="17.1775%" y="1397" width="0.4277%" height="15" fill="rgb(246,168,33)" fg:x="241" fg:w="6"/><text x="17.4275%" y="1407.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.14%)</title><rect x="17.4626%" y="1381" width="0.1426%" height="15" fill="rgb(231,114,1)" fg:x="245" fg:w="2"/><text x="17.7126%" y="1391.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.29%)</title><rect x="17.8902%" y="1381" width="0.2851%" height="15" fill="rgb(207,184,53)" fg:x="251" fg:w="4"/><text x="18.1402%" y="1391.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (17 samples, 1.21%)</title><rect x="17.0349%" y="1445" width="1.2117%" height="15" fill="rgb(224,95,51)" fg:x="239" fg:w="17"/><text x="17.2849%" y="1455.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (17 samples, 1.21%)</title><rect x="17.0349%" y="1429" width="1.2117%" height="15" fill="rgb(212,188,45)" fg:x="239" fg:w="17"/><text x="17.2849%" y="1439.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (17 samples, 1.21%)</title><rect x="17.0349%" y="1413" width="1.2117%" height="15" fill="rgb(223,154,38)" fg:x="239" fg:w="17"/><text x="17.2849%" y="1423.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (9 samples, 0.64%)</title><rect x="17.6051%" y="1397" width="0.6415%" height="15" fill="rgb(251,22,52)" fg:x="247" fg:w="9"/><text x="17.8551%" y="1407.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.07%)</title><rect x="18.1753%" y="1381" width="0.0713%" height="15" fill="rgb(229,209,22)" fg:x="255" fg:w="1"/><text x="18.4253%" y="1391.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.14%)</title><rect x="18.2466%" y="1445" width="0.1426%" height="15" fill="rgb(234,138,34)" fg:x="256" fg:w="2"/><text x="18.4966%" y="1455.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.07%)</title><rect x="18.3179%" y="1429" width="0.0713%" height="15" fill="rgb(212,95,11)" fg:x="257" fg:w="1"/><text x="18.5679%" y="1439.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.07%)</title><rect x="18.3179%" y="1413" width="0.0713%" height="15" fill="rgb(240,179,47)" fg:x="257" fg:w="1"/><text x="18.5679%" y="1423.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.07%)</title><rect x="18.3179%" y="1397" width="0.0713%" height="15" fill="rgb(240,163,11)" fg:x="257" fg:w="1"/><text x="18.5679%" y="1407.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (17 samples, 1.21%)</title><rect x="19.8147%" y="1365" width="1.2117%" height="15" fill="rgb(236,37,12)" fg:x="278" fg:w="17"/><text x="20.0647%" y="1375.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (6 samples, 0.43%)</title><rect x="20.5987%" y="1349" width="0.4277%" height="15" fill="rgb(232,164,16)" fg:x="289" fg:w="6"/><text x="20.8487%" y="1359.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.14%)</title><rect x="21.0264%" y="1365" width="0.1426%" height="15" fill="rgb(244,205,15)" fg:x="295" fg:w="2"/><text x="21.2764%" y="1375.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (41 samples, 2.92%)</title><rect x="18.3892%" y="1445" width="2.9223%" height="15" fill="rgb(223,117,47)" fg:x="258" fg:w="41"/><text x="18.6392%" y="1455.50">co..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (41 samples, 2.92%)</title><rect x="18.3892%" y="1429" width="2.9223%" height="15" fill="rgb(244,107,35)" fg:x="258" fg:w="41"/><text x="18.6392%" y="1439.50">co..</text></g><g><title>core::hash::Hasher::write_usize (41 samples, 2.92%)</title><rect x="18.3892%" y="1413" width="2.9223%" height="15" fill="rgb(205,140,8)" fg:x="258" fg:w="41"/><text x="18.6392%" y="1423.50">co..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (38 samples, 2.71%)</title><rect x="18.6030%" y="1397" width="2.7085%" height="15" fill="rgb(228,84,46)" fg:x="261" fg:w="38"/><text x="18.8530%" y="1407.50">&lt;c..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (30 samples, 2.14%)</title><rect x="19.1732%" y="1381" width="2.1383%" height="15" fill="rgb(254,188,9)" fg:x="269" fg:w="30"/><text x="19.4232%" y="1391.50">&lt;..</text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.14%)</title><rect x="21.1689%" y="1365" width="0.1426%" height="15" fill="rgb(206,112,54)" fg:x="297" fg:w="2"/><text x="21.4189%" y="1375.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.21%)</title><rect x="21.8104%" y="1413" width="0.2138%" height="15" fill="rgb(216,84,49)" fg:x="306" fg:w="3"/><text x="22.0604%" y="1423.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.21%)</title><rect x="21.8104%" y="1397" width="0.2138%" height="15" fill="rgb(214,194,35)" fg:x="306" fg:w="3"/><text x="22.0604%" y="1407.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.21%)</title><rect x="21.8104%" y="1381" width="0.2138%" height="15" fill="rgb(249,28,3)" fg:x="306" fg:w="3"/><text x="22.0604%" y="1391.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.07%)</title><rect x="21.9530%" y="1365" width="0.0713%" height="15" fill="rgb(222,56,52)" fg:x="308" fg:w="1"/><text x="22.2030%" y="1375.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (5 samples, 0.36%)</title><rect x="22.0242%" y="1413" width="0.3564%" height="15" fill="rgb(245,217,50)" fg:x="309" fg:w="5"/><text x="22.2742%" y="1423.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (A,B)&gt;::eq (5 samples, 0.36%)</title><rect x="22.0242%" y="1397" width="0.3564%" height="15" fill="rgb(213,201,24)" fg:x="309" fg:w="5"/><text x="22.2742%" y="1407.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (5 samples, 0.36%)</title><rect x="22.0242%" y="1381" width="0.3564%" height="15" fill="rgb(248,116,28)" fg:x="309" fg:w="5"/><text x="22.2742%" y="1391.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (8 samples, 0.57%)</title><rect x="22.4519%" y="1365" width="0.5702%" height="15" fill="rgb(219,72,43)" fg:x="315" fg:w="8"/><text x="22.7019%" y="1375.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (8 samples, 0.57%)</title><rect x="22.4519%" y="1349" width="0.5702%" height="15" fill="rgb(209,138,14)" fg:x="315" fg:w="8"/><text x="22.7019%" y="1359.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.57%)</title><rect x="22.4519%" y="1333" width="0.5702%" height="15" fill="rgb(222,18,33)" fg:x="315" fg:w="8"/><text x="22.7019%" y="1343.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (87 samples, 6.20%)</title><rect x="16.9636%" y="1509" width="6.2010%" height="15" fill="rgb(213,199,7)" fg:x="238" fg:w="87"/><text x="17.2136%" y="1519.50">&lt;std::co..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (87 samples, 6.20%)</title><rect x="16.9636%" y="1493" width="6.2010%" height="15" fill="rgb(250,110,10)" fg:x="238" fg:w="87"/><text x="17.2136%" y="1503.50">std::col..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (87 samples, 6.20%)</title><rect x="16.9636%" y="1477" width="6.2010%" height="15" fill="rgb(248,123,6)" fg:x="238" fg:w="87"/><text x="17.2136%" y="1487.50">hashbrow..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (87 samples, 6.20%)</title><rect x="16.9636%" y="1461" width="6.2010%" height="15" fill="rgb(206,91,31)" fg:x="238" fg:w="87"/><text x="17.2136%" y="1471.50">hashbrow..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (26 samples, 1.85%)</title><rect x="21.3115%" y="1445" width="1.8532%" height="15" fill="rgb(211,154,13)" fg:x="299" fg:w="26"/><text x="21.5615%" y="1455.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (23 samples, 1.64%)</title><rect x="21.5253%" y="1429" width="1.6393%" height="15" fill="rgb(225,148,7)" fg:x="302" fg:w="23"/><text x="21.7753%" y="1439.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (11 samples, 0.78%)</title><rect x="22.3806%" y="1413" width="0.7840%" height="15" fill="rgb(220,160,43)" fg:x="314" fg:w="11"/><text x="22.6306%" y="1423.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (11 samples, 0.78%)</title><rect x="22.3806%" y="1397" width="0.7840%" height="15" fill="rgb(213,52,39)" fg:x="314" fg:w="11"/><text x="22.6306%" y="1407.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (11 samples, 0.78%)</title><rect x="22.3806%" y="1381" width="0.7840%" height="15" fill="rgb(243,137,7)" fg:x="314" fg:w="11"/><text x="22.6306%" y="1391.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.14%)</title><rect x="23.0221%" y="1365" width="0.1426%" height="15" fill="rgb(230,79,13)" fg:x="323" fg:w="2"/><text x="23.2721%" y="1375.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.14%)</title><rect x="23.0221%" y="1349" width="0.1426%" height="15" fill="rgb(247,105,23)" fg:x="323" fg:w="2"/><text x="23.2721%" y="1359.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.14%)</title><rect x="23.0221%" y="1333" width="0.1426%" height="15" fill="rgb(223,179,41)" fg:x="323" fg:w="2"/><text x="23.2721%" y="1343.50"></text></g><g><title>core::core_arch::simd::i8x16::new (2 samples, 0.14%)</title><rect x="23.0221%" y="1317" width="0.1426%" height="15" fill="rgb(218,9,34)" fg:x="323" fg:w="2"/><text x="23.2721%" y="1327.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.07%)</title><rect x="23.5210%" y="1397" width="0.0713%" height="15" fill="rgb(222,106,8)" fg:x="330" fg:w="1"/><text x="23.7710%" y="1407.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.36%)</title><rect x="23.3785%" y="1413" width="0.3564%" height="15" fill="rgb(211,220,0)" fg:x="328" fg:w="5"/><text x="23.6285%" y="1423.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.14%)</title><rect x="23.5923%" y="1397" width="0.1426%" height="15" fill="rgb(229,52,16)" fg:x="331" fg:w="2"/><text x="23.8423%" y="1407.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (7 samples, 0.50%)</title><rect x="23.8061%" y="1397" width="0.4989%" height="15" fill="rgb(212,155,18)" fg:x="334" fg:w="7"/><text x="24.0561%" y="1407.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (19 samples, 1.35%)</title><rect x="23.2359%" y="1461" width="1.3542%" height="15" fill="rgb(242,21,14)" fg:x="326" fg:w="19"/><text x="23.4859%" y="1471.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (19 samples, 1.35%)</title><rect x="23.2359%" y="1445" width="1.3542%" height="15" fill="rgb(222,19,48)" fg:x="326" fg:w="19"/><text x="23.4859%" y="1455.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (19 samples, 1.35%)</title><rect x="23.2359%" y="1429" width="1.3542%" height="15" fill="rgb(232,45,27)" fg:x="326" fg:w="19"/><text x="23.4859%" y="1439.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (12 samples, 0.86%)</title><rect x="23.7349%" y="1413" width="0.8553%" height="15" fill="rgb(249,103,42)" fg:x="333" fg:w="12"/><text x="23.9849%" y="1423.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4 samples, 0.29%)</title><rect x="24.3051%" y="1397" width="0.2851%" height="15" fill="rgb(246,81,33)" fg:x="341" fg:w="4"/><text x="24.5551%" y="1407.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (3 samples, 0.21%)</title><rect x="24.5902%" y="1461" width="0.2138%" height="15" fill="rgb(252,33,42)" fg:x="345" fg:w="3"/><text x="24.8402%" y="1471.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (2 samples, 0.14%)</title><rect x="24.6614%" y="1445" width="0.1426%" height="15" fill="rgb(209,212,41)" fg:x="346" fg:w="2"/><text x="24.9114%" y="1455.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (2 samples, 0.14%)</title><rect x="24.6614%" y="1429" width="0.1426%" height="15" fill="rgb(207,154,6)" fg:x="346" fg:w="2"/><text x="24.9114%" y="1439.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (2 samples, 0.14%)</title><rect x="24.6614%" y="1413" width="0.1426%" height="15" fill="rgb(223,64,47)" fg:x="346" fg:w="2"/><text x="24.9114%" y="1423.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.14%)</title><rect x="26.6572%" y="1365" width="0.1426%" height="15" fill="rgb(211,161,38)" fg:x="374" fg:w="2"/><text x="26.9072%" y="1375.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (16 samples, 1.14%)</title><rect x="26.0870%" y="1381" width="1.1404%" height="15" fill="rgb(219,138,40)" fg:x="366" fg:w="16"/><text x="26.3370%" y="1391.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (6 samples, 0.43%)</title><rect x="26.7997%" y="1365" width="0.4277%" height="15" fill="rgb(241,228,46)" fg:x="376" fg:w="6"/><text x="27.0497%" y="1375.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (35 samples, 2.49%)</title><rect x="24.8040%" y="1461" width="2.4947%" height="15" fill="rgb(223,209,38)" fg:x="348" fg:w="35"/><text x="25.0540%" y="1471.50">co..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (35 samples, 2.49%)</title><rect x="24.8040%" y="1445" width="2.4947%" height="15" fill="rgb(236,164,45)" fg:x="348" fg:w="35"/><text x="25.0540%" y="1455.50">co..</text></g><g><title>core::hash::Hasher::write_usize (35 samples, 2.49%)</title><rect x="24.8040%" y="1429" width="2.4947%" height="15" fill="rgb(231,15,5)" fg:x="348" fg:w="35"/><text x="25.0540%" y="1439.50">co..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (34 samples, 2.42%)</title><rect x="24.8753%" y="1413" width="2.4234%" height="15" fill="rgb(252,35,15)" fg:x="349" fg:w="34"/><text x="25.1253%" y="1423.50">&lt;c..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (26 samples, 1.85%)</title><rect x="25.4455%" y="1397" width="1.8532%" height="15" fill="rgb(248,181,18)" fg:x="357" fg:w="26"/><text x="25.6955%" y="1407.50">&lt;..</text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.07%)</title><rect x="27.2274%" y="1381" width="0.0713%" height="15" fill="rgb(233,39,42)" fg:x="382" fg:w="1"/><text x="27.4774%" y="1391.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="27.7263%" y="1429" width="0.0713%" height="15" fill="rgb(238,110,33)" fg:x="389" fg:w="1"/><text x="27.9763%" y="1439.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="27.7263%" y="1413" width="0.0713%" height="15" fill="rgb(233,195,10)" fg:x="389" fg:w="1"/><text x="27.9763%" y="1423.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="27.7263%" y="1397" width="0.0713%" height="15" fill="rgb(254,105,3)" fg:x="389" fg:w="1"/><text x="27.9763%" y="1407.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (4 samples, 0.29%)</title><rect x="27.7976%" y="1429" width="0.2851%" height="15" fill="rgb(221,225,9)" fg:x="390" fg:w="4"/><text x="28.0476%" y="1439.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (A,B)&gt;::eq (4 samples, 0.29%)</title><rect x="27.7976%" y="1413" width="0.2851%" height="15" fill="rgb(224,227,45)" fg:x="390" fg:w="4"/><text x="28.0476%" y="1423.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (4 samples, 0.29%)</title><rect x="27.7976%" y="1397" width="0.2851%" height="15" fill="rgb(229,198,43)" fg:x="390" fg:w="4"/><text x="28.0476%" y="1407.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (3 samples, 0.21%)</title><rect x="28.0827%" y="1381" width="0.2138%" height="15" fill="rgb(206,209,35)" fg:x="394" fg:w="3"/><text x="28.3327%" y="1391.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.07%)</title><rect x="28.2965%" y="1381" width="0.0713%" height="15" fill="rgb(245,195,53)" fg:x="397" fg:w="1"/><text x="28.5465%" y="1391.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (4 samples, 0.29%)</title><rect x="28.3678%" y="1381" width="0.2851%" height="15" fill="rgb(240,92,26)" fg:x="398" fg:w="4"/><text x="28.6178%" y="1391.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (4 samples, 0.29%)</title><rect x="28.3678%" y="1365" width="0.2851%" height="15" fill="rgb(207,40,23)" fg:x="398" fg:w="4"/><text x="28.6178%" y="1375.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.29%)</title><rect x="28.3678%" y="1349" width="0.2851%" height="15" fill="rgb(223,111,35)" fg:x="398" fg:w="4"/><text x="28.6178%" y="1359.50"></text></g><g><title>ldpc::decoding::BMCDecoder&lt;_,_&gt;::bit_to_check (176 samples, 12.54%)</title><rect x="16.3222%" y="1621" width="12.5445%" height="15" fill="rgb(229,147,28)" fg:x="229" fg:w="176"/><text x="16.5722%" y="1631.50">ldpc::decoding::BMC..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (176 samples, 12.54%)</title><rect x="16.3222%" y="1605" width="12.5445%" height="15" fill="rgb(211,29,28)" fg:x="229" fg:w="176"/><text x="16.5722%" y="1615.50">core::iter::traits:..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (176 samples, 12.54%)</title><rect x="16.3222%" y="1589" width="12.5445%" height="15" fill="rgb(228,72,33)" fg:x="229" fg:w="176"/><text x="16.5722%" y="1599.50">&lt;core::iter::adapte..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (175 samples, 12.47%)</title><rect x="16.3934%" y="1573" width="12.4733%" height="15" fill="rgb(205,214,31)" fg:x="230" fg:w="175"/><text x="16.6434%" y="1583.50">core::iter::traits:..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (175 samples, 12.47%)</title><rect x="16.3934%" y="1557" width="12.4733%" height="15" fill="rgb(224,111,15)" fg:x="230" fg:w="175"/><text x="16.6434%" y="1567.50">&lt;core::iter::adapte..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (175 samples, 12.47%)</title><rect x="16.3934%" y="1541" width="12.4733%" height="15" fill="rgb(253,21,26)" fg:x="230" fg:w="175"/><text x="16.6434%" y="1551.50">core::iter::traits:..</text></g><g><title>ldpc::decoding::BMCDecoder&lt;_,_&gt;::bit_to_check::{{closure}} (175 samples, 12.47%)</title><rect x="16.3934%" y="1525" width="12.4733%" height="15" fill="rgb(245,139,43)" fg:x="230" fg:w="175"/><text x="16.6434%" y="1535.50">ldpc::decoding::BMC..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (80 samples, 5.70%)</title><rect x="23.1646%" y="1509" width="5.7021%" height="15" fill="rgb(252,170,7)" fg:x="325" fg:w="80"/><text x="23.4146%" y="1519.50">std::co..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (80 samples, 5.70%)</title><rect x="23.1646%" y="1493" width="5.7021%" height="15" fill="rgb(231,118,14)" fg:x="325" fg:w="80"/><text x="23.4146%" y="1503.50">hashbro..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (80 samples, 5.70%)</title><rect x="23.1646%" y="1477" width="5.7021%" height="15" fill="rgb(238,83,0)" fg:x="325" fg:w="80"/><text x="23.4146%" y="1487.50">hashbro..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (22 samples, 1.57%)</title><rect x="27.2986%" y="1461" width="1.5681%" height="15" fill="rgb(221,39,39)" fg:x="383" fg:w="22"/><text x="27.5486%" y="1471.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (18 samples, 1.28%)</title><rect x="27.5837%" y="1445" width="1.2830%" height="15" fill="rgb(222,119,46)" fg:x="387" fg:w="18"/><text x="27.8337%" y="1455.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (11 samples, 0.78%)</title><rect x="28.0827%" y="1429" width="0.7840%" height="15" fill="rgb(222,165,49)" fg:x="394" fg:w="11"/><text x="28.3327%" y="1439.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (11 samples, 0.78%)</title><rect x="28.0827%" y="1413" width="0.7840%" height="15" fill="rgb(219,113,52)" fg:x="394" fg:w="11"/><text x="28.3327%" y="1423.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (11 samples, 0.78%)</title><rect x="28.0827%" y="1397" width="0.7840%" height="15" fill="rgb(214,7,15)" fg:x="394" fg:w="11"/><text x="28.3327%" y="1407.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (3 samples, 0.21%)</title><rect x="28.6529%" y="1381" width="0.2138%" height="15" fill="rgb(235,32,4)" fg:x="402" fg:w="3"/><text x="28.9029%" y="1391.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (3 samples, 0.21%)</title><rect x="28.6529%" y="1365" width="0.2138%" height="15" fill="rgb(238,90,54)" fg:x="402" fg:w="3"/><text x="28.9029%" y="1375.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (3 samples, 0.21%)</title><rect x="28.6529%" y="1349" width="0.2138%" height="15" fill="rgb(213,208,19)" fg:x="402" fg:w="3"/><text x="28.9029%" y="1359.50"></text></g><g><title>core::core_arch::simd::i8x16::new (3 samples, 0.21%)</title><rect x="28.6529%" y="1333" width="0.2138%" height="15" fill="rgb(233,156,4)" fg:x="402" fg:w="3"/><text x="28.9029%" y="1343.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="29.0093%" y="1509" width="0.0713%" height="15" fill="rgb(207,194,5)" fg:x="407" fg:w="1"/><text x="29.2593%" y="1519.50"></text></g><g><title>&lt;f64 as core::iter::traits::accum::Product&gt;::product::{{closure}} (3 samples, 0.21%)</title><rect x="29.3656%" y="1413" width="0.2138%" height="15" fill="rgb(206,111,30)" fg:x="412" fg:w="3"/><text x="29.6156%" y="1423.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.29%)</title><rect x="29.9359%" y="1285" width="0.2851%" height="15" fill="rgb(243,70,54)" fg:x="420" fg:w="4"/><text x="30.1859%" y="1295.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.14%)</title><rect x="30.4348%" y="1269" width="0.1426%" height="15" fill="rgb(242,28,8)" fg:x="427" fg:w="2"/><text x="30.6848%" y="1279.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (17 samples, 1.21%)</title><rect x="29.9359%" y="1333" width="1.2117%" height="15" fill="rgb(219,106,18)" fg:x="420" fg:w="17"/><text x="30.1859%" y="1343.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (17 samples, 1.21%)</title><rect x="29.9359%" y="1317" width="1.2117%" height="15" fill="rgb(244,222,10)" fg:x="420" fg:w="17"/><text x="30.1859%" y="1327.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (17 samples, 1.21%)</title><rect x="29.9359%" y="1301" width="1.2117%" height="15" fill="rgb(236,179,52)" fg:x="420" fg:w="17"/><text x="30.1859%" y="1311.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (13 samples, 0.93%)</title><rect x="30.2210%" y="1285" width="0.9266%" height="15" fill="rgb(213,23,39)" fg:x="424" fg:w="13"/><text x="30.4710%" y="1295.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (8 samples, 0.57%)</title><rect x="30.5773%" y="1269" width="0.5702%" height="15" fill="rgb(238,48,10)" fg:x="429" fg:w="8"/><text x="30.8273%" y="1279.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (6 samples, 0.43%)</title><rect x="31.1475%" y="1333" width="0.4277%" height="15" fill="rgb(251,196,23)" fg:x="437" fg:w="6"/><text x="31.3975%" y="1343.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.07%)</title><rect x="31.5039%" y="1317" width="0.0713%" height="15" fill="rgb(250,152,24)" fg:x="442" fg:w="1"/><text x="31.7539%" y="1327.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.07%)</title><rect x="31.5039%" y="1301" width="0.0713%" height="15" fill="rgb(209,150,17)" fg:x="442" fg:w="1"/><text x="31.7539%" y="1311.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.07%)</title><rect x="31.5039%" y="1285" width="0.0713%" height="15" fill="rgb(234,202,34)" fg:x="442" fg:w="1"/><text x="31.7539%" y="1295.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.14%)</title><rect x="33.7135%" y="1237" width="0.1426%" height="15" fill="rgb(253,148,53)" fg:x="473" fg:w="2"/><text x="33.9635%" y="1247.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (13 samples, 0.93%)</title><rect x="33.1433%" y="1253" width="0.9266%" height="15" fill="rgb(218,129,16)" fg:x="465" fg:w="13"/><text x="33.3933%" y="1263.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.21%)</title><rect x="33.8560%" y="1237" width="0.2138%" height="15" fill="rgb(216,85,19)" fg:x="475" fg:w="3"/><text x="34.1060%" y="1247.50"></text></g><g><title>core::hash::sip::u8to64_le (3 samples, 0.21%)</title><rect x="34.0699%" y="1253" width="0.2138%" height="15" fill="rgb(235,228,7)" fg:x="478" fg:w="3"/><text x="34.3199%" y="1263.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (40 samples, 2.85%)</title><rect x="31.5752%" y="1333" width="2.8510%" height="15" fill="rgb(245,175,0)" fg:x="443" fg:w="40"/><text x="31.8252%" y="1343.50">co..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (40 samples, 2.85%)</title><rect x="31.5752%" y="1317" width="2.8510%" height="15" fill="rgb(208,168,36)" fg:x="443" fg:w="40"/><text x="31.8252%" y="1327.50">co..</text></g><g><title>core::hash::Hasher::write_usize (40 samples, 2.85%)</title><rect x="31.5752%" y="1301" width="2.8510%" height="15" fill="rgb(246,171,24)" fg:x="443" fg:w="40"/><text x="31.8252%" y="1311.50">co..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (38 samples, 2.71%)</title><rect x="31.7177%" y="1285" width="2.7085%" height="15" fill="rgb(215,142,24)" fg:x="445" fg:w="38"/><text x="31.9677%" y="1295.50">&lt;c..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (28 samples, 2.00%)</title><rect x="32.4305%" y="1269" width="1.9957%" height="15" fill="rgb(250,187,7)" fg:x="455" fg:w="28"/><text x="32.6805%" y="1279.50">&lt;..</text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.14%)</title><rect x="34.2837%" y="1253" width="0.1426%" height="15" fill="rgb(228,66,33)" fg:x="481" fg:w="2"/><text x="34.5337%" y="1263.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.36%)</title><rect x="34.8539%" y="1301" width="0.3564%" height="15" fill="rgb(234,215,21)" fg:x="489" fg:w="5"/><text x="35.1039%" y="1311.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.36%)</title><rect x="34.8539%" y="1285" width="0.3564%" height="15" fill="rgb(222,191,20)" fg:x="489" fg:w="5"/><text x="35.1039%" y="1295.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.36%)</title><rect x="34.8539%" y="1269" width="0.3564%" height="15" fill="rgb(245,79,54)" fg:x="489" fg:w="5"/><text x="35.1039%" y="1279.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (3 samples, 0.21%)</title><rect x="35.2103%" y="1301" width="0.2138%" height="15" fill="rgb(240,10,37)" fg:x="494" fg:w="3"/><text x="35.4603%" y="1311.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (A,B)&gt;::eq (3 samples, 0.21%)</title><rect x="35.2103%" y="1285" width="0.2138%" height="15" fill="rgb(214,192,32)" fg:x="494" fg:w="3"/><text x="35.4603%" y="1295.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (3 samples, 0.21%)</title><rect x="35.2103%" y="1269" width="0.2138%" height="15" fill="rgb(209,36,54)" fg:x="494" fg:w="3"/><text x="35.4603%" y="1279.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.07%)</title><rect x="35.4241%" y="1253" width="0.0713%" height="15" fill="rgb(220,10,11)" fg:x="497" fg:w="1"/><text x="35.6741%" y="1263.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.07%)</title><rect x="35.4954%" y="1253" width="0.0713%" height="15" fill="rgb(221,106,17)" fg:x="498" fg:w="1"/><text x="35.7454%" y="1263.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (5 samples, 0.36%)</title><rect x="35.5666%" y="1253" width="0.3564%" height="15" fill="rgb(251,142,44)" fg:x="499" fg:w="5"/><text x="35.8166%" y="1263.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (5 samples, 0.36%)</title><rect x="35.5666%" y="1237" width="0.3564%" height="15" fill="rgb(238,13,15)" fg:x="499" fg:w="5"/><text x="35.8166%" y="1247.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.36%)</title><rect x="35.5666%" y="1221" width="0.3564%" height="15" fill="rgb(208,107,27)" fg:x="499" fg:w="5"/><text x="35.8166%" y="1231.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (88 samples, 6.27%)</title><rect x="29.7220%" y="1397" width="6.2723%" height="15" fill="rgb(205,136,37)" fg:x="417" fg:w="88"/><text x="29.9720%" y="1407.50">&lt;std::co..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (88 samples, 6.27%)</title><rect x="29.7220%" y="1381" width="6.2723%" height="15" fill="rgb(250,205,27)" fg:x="417" fg:w="88"/><text x="29.9720%" y="1391.50">std::col..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (88 samples, 6.27%)</title><rect x="29.7220%" y="1365" width="6.2723%" height="15" fill="rgb(210,80,43)" fg:x="417" fg:w="88"/><text x="29.9720%" y="1375.50">hashbrow..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (88 samples, 6.27%)</title><rect x="29.7220%" y="1349" width="6.2723%" height="15" fill="rgb(247,160,36)" fg:x="417" fg:w="88"/><text x="29.9720%" y="1359.50">hashbrow..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (22 samples, 1.57%)</title><rect x="34.4262%" y="1333" width="1.5681%" height="15" fill="rgb(234,13,49)" fg:x="483" fg:w="22"/><text x="34.6762%" y="1343.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (19 samples, 1.35%)</title><rect x="34.6401%" y="1317" width="1.3542%" height="15" fill="rgb(234,122,0)" fg:x="486" fg:w="19"/><text x="34.8901%" y="1327.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (8 samples, 0.57%)</title><rect x="35.4241%" y="1301" width="0.5702%" height="15" fill="rgb(207,146,38)" fg:x="497" fg:w="8"/><text x="35.6741%" y="1311.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (8 samples, 0.57%)</title><rect x="35.4241%" y="1285" width="0.5702%" height="15" fill="rgb(207,177,25)" fg:x="497" fg:w="8"/><text x="35.6741%" y="1295.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (8 samples, 0.57%)</title><rect x="35.4241%" y="1269" width="0.5702%" height="15" fill="rgb(211,178,42)" fg:x="497" fg:w="8"/><text x="35.6741%" y="1279.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.07%)</title><rect x="35.9230%" y="1253" width="0.0713%" height="15" fill="rgb(230,69,54)" fg:x="504" fg:w="1"/><text x="36.1730%" y="1263.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.07%)</title><rect x="35.9230%" y="1237" width="0.0713%" height="15" fill="rgb(214,135,41)" fg:x="504" fg:w="1"/><text x="36.1730%" y="1247.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.07%)</title><rect x="35.9230%" y="1221" width="0.0713%" height="15" fill="rgb(237,67,25)" fg:x="504" fg:w="1"/><text x="36.1730%" y="1231.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.07%)</title><rect x="35.9230%" y="1205" width="0.0713%" height="15" fill="rgb(222,189,50)" fg:x="504" fg:w="1"/><text x="36.1730%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::product (215 samples, 15.32%)</title><rect x="29.0805%" y="1509" width="15.3243%" height="15" fill="rgb(245,148,34)" fg:x="408" fg:w="215"/><text x="29.3305%" y="1519.50">core::iter::traits::ite..</text></g><g><title>&lt;f64 as core::iter::traits::accum::Product&gt;::product (215 samples, 15.32%)</title><rect x="29.0805%" y="1493" width="15.3243%" height="15" fill="rgb(222,29,6)" fg:x="408" fg:w="215"/><text x="29.3305%" y="1503.50">&lt;f64 as core::iter::tra..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (212 samples, 15.11%)</title><rect x="29.2944%" y="1477" width="15.1105%" height="15" fill="rgb(221,189,43)" fg:x="411" fg:w="212"/><text x="29.5444%" y="1487.50">&lt;core::iter::adapters::..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (212 samples, 15.11%)</title><rect x="29.2944%" y="1461" width="15.1105%" height="15" fill="rgb(207,36,27)" fg:x="411" fg:w="212"/><text x="29.5444%" y="1471.50">core::iter::traits::ite..</text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (211 samples, 15.04%)</title><rect x="29.3656%" y="1445" width="15.0392%" height="15" fill="rgb(217,90,24)" fg:x="412" fg:w="211"/><text x="29.6156%" y="1455.50">core::iter::adapters::f..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (211 samples, 15.04%)</title><rect x="29.3656%" y="1429" width="15.0392%" height="15" fill="rgb(224,66,35)" fg:x="412" fg:w="211"/><text x="29.6156%" y="1439.50">core::iter::adapters::m..</text></g><g><title>ldpc::decoding::BMCDecoder&lt;_,_&gt;::check_to_bit::{{closure}}::{{closure}} (208 samples, 14.83%)</title><rect x="29.5795%" y="1413" width="14.8254%" height="15" fill="rgb(221,13,50)" fg:x="415" fg:w="208"/><text x="29.8295%" y="1423.50">ldpc::decoding::BMCDeco..</text></g><g><title>std::f64::&lt;impl f64&gt;::tanh (118 samples, 8.41%)</title><rect x="35.9943%" y="1397" width="8.4105%" height="15" fill="rgb(236,68,49)" fg:x="505" fg:w="118"/><text x="36.2443%" y="1407.50">std::f64::&lt;i..</text></g><g><title>tanhf32x (118 samples, 8.41%)</title><rect x="35.9943%" y="1381" width="8.4105%" height="15" fill="rgb(229,146,28)" fg:x="505" fg:w="118"/><text x="36.2443%" y="1391.50">tanhf32x</text></g><g><title>expm1f32x (92 samples, 6.56%)</title><rect x="37.8475%" y="1365" width="6.5574%" height="15" fill="rgb(225,31,38)" fg:x="531" fg:w="92"/><text x="38.0975%" y="1375.50">expm1f32x</text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.07%)</title><rect x="44.4048%" y="1509" width="0.0713%" height="15" fill="rgb(250,208,3)" fg:x="623" fg:w="1"/><text x="44.6548%" y="1519.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.07%)</title><rect x="44.4048%" y="1493" width="0.0713%" height="15" fill="rgb(246,54,23)" fg:x="623" fg:w="1"/><text x="44.6548%" y="1503.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.07%)</title><rect x="44.4048%" y="1477" width="0.0713%" height="15" fill="rgb(243,76,11)" fg:x="623" fg:w="1"/><text x="44.6548%" y="1487.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.07%)</title><rect x="44.4048%" y="1461" width="0.0713%" height="15" fill="rgb(245,21,50)" fg:x="623" fg:w="1"/><text x="44.6548%" y="1471.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.21%)</title><rect x="44.6900%" y="1413" width="0.2138%" height="15" fill="rgb(228,9,43)" fg:x="627" fg:w="3"/><text x="44.9400%" y="1423.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.21%)</title><rect x="44.6900%" y="1397" width="0.2138%" height="15" fill="rgb(208,100,47)" fg:x="627" fg:w="3"/><text x="44.9400%" y="1407.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.36%)</title><rect x="45.1176%" y="1397" width="0.3564%" height="15" fill="rgb(232,26,8)" fg:x="633" fg:w="5"/><text x="45.3676%" y="1407.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (20 samples, 1.43%)</title><rect x="44.5474%" y="1461" width="1.4255%" height="15" fill="rgb(216,166,38)" fg:x="625" fg:w="20"/><text x="44.7974%" y="1471.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (20 samples, 1.43%)</title><rect x="44.5474%" y="1445" width="1.4255%" height="15" fill="rgb(251,202,51)" fg:x="625" fg:w="20"/><text x="44.7974%" y="1455.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (20 samples, 1.43%)</title><rect x="44.5474%" y="1429" width="1.4255%" height="15" fill="rgb(254,216,34)" fg:x="625" fg:w="20"/><text x="44.7974%" y="1439.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (15 samples, 1.07%)</title><rect x="44.9038%" y="1413" width="1.0691%" height="15" fill="rgb(251,32,27)" fg:x="630" fg:w="15"/><text x="45.1538%" y="1423.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (7 samples, 0.50%)</title><rect x="45.4740%" y="1397" width="0.4989%" height="15" fill="rgb(208,127,28)" fg:x="638" fg:w="7"/><text x="45.7240%" y="1407.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (3 samples, 0.21%)</title><rect x="45.9729%" y="1461" width="0.2138%" height="15" fill="rgb(224,137,22)" fg:x="645" fg:w="3"/><text x="46.2229%" y="1471.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (2 samples, 0.14%)</title><rect x="46.0442%" y="1445" width="0.1426%" height="15" fill="rgb(254,70,32)" fg:x="646" fg:w="2"/><text x="46.2942%" y="1455.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (2 samples, 0.14%)</title><rect x="46.0442%" y="1429" width="0.1426%" height="15" fill="rgb(229,75,37)" fg:x="646" fg:w="2"/><text x="46.2942%" y="1439.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (2 samples, 0.14%)</title><rect x="46.0442%" y="1413" width="0.1426%" height="15" fill="rgb(252,64,23)" fg:x="646" fg:w="2"/><text x="46.2942%" y="1423.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.29%)</title><rect x="47.5410%" y="1365" width="0.2851%" height="15" fill="rgb(232,162,48)" fg:x="667" fg:w="4"/><text x="47.7910%" y="1375.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (16 samples, 1.14%)</title><rect x="47.0421%" y="1381" width="1.1404%" height="15" fill="rgb(246,160,12)" fg:x="660" fg:w="16"/><text x="47.2921%" y="1391.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (5 samples, 0.36%)</title><rect x="47.8261%" y="1365" width="0.3564%" height="15" fill="rgb(247,166,0)" fg:x="671" fg:w="5"/><text x="48.0761%" y="1375.50"></text></g><g><title>core::hash::sip::u8to64_le (3 samples, 0.21%)</title><rect x="48.1825%" y="1381" width="0.2138%" height="15" fill="rgb(249,219,21)" fg:x="676" fg:w="3"/><text x="48.4325%" y="1391.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (32 samples, 2.28%)</title><rect x="46.1867%" y="1461" width="2.2808%" height="15" fill="rgb(205,209,3)" fg:x="648" fg:w="32"/><text x="46.4367%" y="1471.50">c..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (32 samples, 2.28%)</title><rect x="46.1867%" y="1445" width="2.2808%" height="15" fill="rgb(243,44,1)" fg:x="648" fg:w="32"/><text x="46.4367%" y="1455.50">c..</text></g><g><title>core::hash::Hasher::write_usize (32 samples, 2.28%)</title><rect x="46.1867%" y="1429" width="2.2808%" height="15" fill="rgb(206,159,16)" fg:x="648" fg:w="32"/><text x="46.4367%" y="1439.50">c..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (30 samples, 2.14%)</title><rect x="46.3293%" y="1413" width="2.1383%" height="15" fill="rgb(244,77,30)" fg:x="650" fg:w="30"/><text x="46.5793%" y="1423.50">&lt;..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (28 samples, 2.00%)</title><rect x="46.4718%" y="1397" width="1.9957%" height="15" fill="rgb(218,69,12)" fg:x="652" fg:w="28"/><text x="46.7218%" y="1407.50">&lt;..</text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="48.3963%" y="1381" width="0.0713%" height="15" fill="rgb(212,87,7)" fg:x="679" fg:w="1"/><text x="48.6463%" y="1391.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.21%)</title><rect x="49.1091%" y="1429" width="0.2138%" height="15" fill="rgb(245,114,25)" fg:x="689" fg:w="3"/><text x="49.3591%" y="1439.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.21%)</title><rect x="49.1091%" y="1413" width="0.2138%" height="15" fill="rgb(210,61,42)" fg:x="689" fg:w="3"/><text x="49.3591%" y="1423.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.21%)</title><rect x="49.1091%" y="1397" width="0.2138%" height="15" fill="rgb(211,52,33)" fg:x="689" fg:w="3"/><text x="49.3591%" y="1407.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (6 samples, 0.43%)</title><rect x="49.3229%" y="1429" width="0.4277%" height="15" fill="rgb(234,58,33)" fg:x="692" fg:w="6"/><text x="49.5729%" y="1439.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (A,B)&gt;::eq (6 samples, 0.43%)</title><rect x="49.3229%" y="1413" width="0.4277%" height="15" fill="rgb(220,115,36)" fg:x="692" fg:w="6"/><text x="49.5729%" y="1423.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (6 samples, 0.43%)</title><rect x="49.3229%" y="1397" width="0.4277%" height="15" fill="rgb(243,153,54)" fg:x="692" fg:w="6"/><text x="49.5729%" y="1407.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (2 samples, 0.14%)</title><rect x="49.8218%" y="1381" width="0.1426%" height="15" fill="rgb(251,47,18)" fg:x="699" fg:w="2"/><text x="50.0718%" y="1391.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (83 samples, 5.92%)</title><rect x="44.4761%" y="1509" width="5.9159%" height="15" fill="rgb(242,102,42)" fg:x="624" fg:w="83"/><text x="44.7261%" y="1519.50">std::col..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (83 samples, 5.92%)</title><rect x="44.4761%" y="1493" width="5.9159%" height="15" fill="rgb(234,31,38)" fg:x="624" fg:w="83"/><text x="44.7261%" y="1503.50">hashbrow..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (83 samples, 5.92%)</title><rect x="44.4761%" y="1477" width="5.9159%" height="15" fill="rgb(221,117,51)" fg:x="624" fg:w="83"/><text x="44.7261%" y="1487.50">hashbrow..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (27 samples, 1.92%)</title><rect x="48.4676%" y="1461" width="1.9244%" height="15" fill="rgb(212,20,18)" fg:x="680" fg:w="27"/><text x="48.7176%" y="1471.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (22 samples, 1.57%)</title><rect x="48.8239%" y="1445" width="1.5681%" height="15" fill="rgb(245,133,36)" fg:x="685" fg:w="22"/><text x="49.0739%" y="1455.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (9 samples, 0.64%)</title><rect x="49.7505%" y="1429" width="0.6415%" height="15" fill="rgb(212,6,19)" fg:x="698" fg:w="9"/><text x="50.0005%" y="1439.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (9 samples, 0.64%)</title><rect x="49.7505%" y="1413" width="0.6415%" height="15" fill="rgb(218,1,36)" fg:x="698" fg:w="9"/><text x="50.0005%" y="1423.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (9 samples, 0.64%)</title><rect x="49.7505%" y="1397" width="0.6415%" height="15" fill="rgb(246,84,54)" fg:x="698" fg:w="9"/><text x="50.0005%" y="1407.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (6 samples, 0.43%)</title><rect x="49.9644%" y="1381" width="0.4277%" height="15" fill="rgb(242,110,6)" fg:x="701" fg:w="6"/><text x="50.2144%" y="1391.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (6 samples, 0.43%)</title><rect x="49.9644%" y="1365" width="0.4277%" height="15" fill="rgb(214,47,5)" fg:x="701" fg:w="6"/><text x="50.2144%" y="1375.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.43%)</title><rect x="49.9644%" y="1349" width="0.4277%" height="15" fill="rgb(218,159,25)" fg:x="701" fg:w="6"/><text x="50.2144%" y="1359.50"></text></g><g><title>[libm-2.33.so] (77 samples, 5.49%)</title><rect x="51.2473%" y="1477" width="5.4882%" height="15" fill="rgb(215,211,28)" fg:x="719" fg:w="77"/><text x="51.4973%" y="1487.50">[libm-2..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (395 samples, 28.15%)</title><rect x="28.8667%" y="1557" width="28.1540%" height="15" fill="rgb(238,59,32)" fg:x="405" fg:w="395"/><text x="29.1167%" y="1567.50">&lt;core::iter::adapters::enumerate::Enumerate&lt;I..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (395 samples, 28.15%)</title><rect x="28.8667%" y="1541" width="28.1540%" height="15" fill="rgb(226,82,3)" fg:x="405" fg:w="395"/><text x="29.1167%" y="1551.50">core::iter::traits::iterator::Iterator::for_e..</text></g><g><title>ldpc::decoding::BMCDecoder&lt;_,_&gt;::check_to_bit::{{closure}} (395 samples, 28.15%)</title><rect x="28.8667%" y="1525" width="28.1540%" height="15" fill="rgb(240,164,32)" fg:x="405" fg:w="395"/><text x="29.1167%" y="1535.50">ldpc::decoding::BMCDecoder&lt;_,_&gt;::check_to_bit..</text></g><g><title>std::f64::&lt;impl f64&gt;::atanh (93 samples, 6.63%)</title><rect x="50.3920%" y="1509" width="6.6287%" height="15" fill="rgb(232,46,7)" fg:x="707" fg:w="93"/><text x="50.6420%" y="1519.50">std::f64:..</text></g><g><title>std::f64::&lt;impl f64&gt;::ln_1p (81 samples, 5.77%)</title><rect x="51.2473%" y="1493" width="5.7733%" height="15" fill="rgb(229,129,53)" fg:x="719" fg:w="81"/><text x="51.4973%" y="1503.50">std::f6..</text></g><g><title>log1pf32x (4 samples, 0.29%)</title><rect x="56.7356%" y="1477" width="0.2851%" height="15" fill="rgb(234,188,29)" fg:x="796" fg:w="4"/><text x="56.9856%" y="1487.50"></text></g><g><title>ldpc::decoding::BMCDecoder&lt;_,_&gt;::check_to_bit (396 samples, 28.23%)</title><rect x="28.8667%" y="1621" width="28.2252%" height="15" fill="rgb(246,141,4)" fg:x="405" fg:w="396"/><text x="29.1167%" y="1631.50">ldpc::decoding::BMCDecoder&lt;_,_&gt;::check_to_bit</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (396 samples, 28.23%)</title><rect x="28.8667%" y="1605" width="28.2252%" height="15" fill="rgb(229,23,39)" fg:x="405" fg:w="396"/><text x="29.1167%" y="1615.50">core::iter::traits::iterator::Iterator::for_e..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (396 samples, 28.23%)</title><rect x="28.8667%" y="1589" width="28.2252%" height="15" fill="rgb(206,12,3)" fg:x="405" fg:w="396"/><text x="29.1167%" y="1599.50">&lt;core::iter::adapters::enumerate::Enumerate&lt;I..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (396 samples, 28.23%)</title><rect x="28.8667%" y="1573" width="28.2252%" height="15" fill="rgb(252,226,20)" fg:x="405" fg:w="396"/><text x="29.1167%" y="1583.50">core::iter::traits::iterator::Iterator::fold</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="57.0207%" y="1557" width="0.0713%" height="15" fill="rgb(216,123,35)" fg:x="800" fg:w="1"/><text x="57.2707%" y="1567.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.36%)</title><rect x="58.1611%" y="1605" width="0.3564%" height="15" fill="rgb(212,68,40)" fg:x="816" fg:w="5"/><text x="58.4111%" y="1615.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.21%)</title><rect x="58.5175%" y="1605" width="0.2138%" height="15" fill="rgb(254,125,32)" fg:x="821" fg:w="3"/><text x="58.7675%" y="1615.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="58.7313%" y="1493" width="0.1426%" height="15" fill="rgb(253,97,22)" fg:x="824" fg:w="2"/><text x="58.9813%" y="1503.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.14%)</title><rect x="58.7313%" y="1477" width="0.1426%" height="15" fill="rgb(241,101,14)" fg:x="824" fg:w="2"/><text x="58.9813%" y="1487.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.14%)</title><rect x="58.7313%" y="1461" width="0.1426%" height="15" fill="rgb(238,103,29)" fg:x="824" fg:w="2"/><text x="58.9813%" y="1471.50"></text></g><g><title>core::mem::replace (2 samples, 0.14%)</title><rect x="58.7313%" y="1445" width="0.1426%" height="15" fill="rgb(233,195,47)" fg:x="824" fg:w="2"/><text x="58.9813%" y="1455.50"></text></g><g><title>core::ptr::write (2 samples, 0.14%)</title><rect x="58.7313%" y="1429" width="0.1426%" height="15" fill="rgb(246,218,30)" fg:x="824" fg:w="2"/><text x="58.9813%" y="1439.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.43%)</title><rect x="58.7313%" y="1541" width="0.4277%" height="15" fill="rgb(219,145,47)" fg:x="824" fg:w="6"/><text x="58.9813%" y="1551.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.43%)</title><rect x="58.7313%" y="1525" width="0.4277%" height="15" fill="rgb(243,12,26)" fg:x="824" fg:w="6"/><text x="58.9813%" y="1535.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.43%)</title><rect x="58.7313%" y="1509" width="0.4277%" height="15" fill="rgb(214,87,16)" fg:x="824" fg:w="6"/><text x="58.9813%" y="1519.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.29%)</title><rect x="58.8738%" y="1493" width="0.2851%" height="15" fill="rgb(208,99,42)" fg:x="826" fg:w="4"/><text x="59.1238%" y="1503.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (4 samples, 0.29%)</title><rect x="58.8738%" y="1477" width="0.2851%" height="15" fill="rgb(253,99,2)" fg:x="826" fg:w="4"/><text x="59.1238%" y="1487.50"></text></g><g><title>ldpc::decoding::BMCDecoder&lt;_,_&gt;::init_state::{{closure}} (4 samples, 0.29%)</title><rect x="58.8738%" y="1461" width="0.2851%" height="15" fill="rgb(220,168,23)" fg:x="826" fg:w="4"/><text x="59.1238%" y="1471.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.07%)</title><rect x="59.1589%" y="1541" width="0.0713%" height="15" fill="rgb(242,38,24)" fg:x="830" fg:w="1"/><text x="59.4089%" y="1551.50"></text></g><g><title>core::array::collect_into_array_unchecked (8 samples, 0.57%)</title><rect x="58.7313%" y="1589" width="0.5702%" height="15" fill="rgb(225,182,9)" fg:x="824" fg:w="8"/><text x="58.9813%" y="1599.50"></text></g><g><title>core::array::collect_into_array_rslt_unchecked (8 samples, 0.57%)</title><rect x="58.7313%" y="1573" width="0.5702%" height="15" fill="rgb(243,178,37)" fg:x="824" fg:w="8"/><text x="58.9813%" y="1583.50"></text></g><g><title>core::array::collect_into_array (8 samples, 0.57%)</title><rect x="58.7313%" y="1557" width="0.5702%" height="15" fill="rgb(232,139,19)" fg:x="824" fg:w="8"/><text x="58.9813%" y="1567.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.07%)</title><rect x="59.2302%" y="1541" width="0.0713%" height="15" fill="rgb(225,201,24)" fg:x="831" fg:w="1"/><text x="59.4802%" y="1551.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::map (11 samples, 0.78%)</title><rect x="58.7313%" y="1605" width="0.7840%" height="15" fill="rgb(221,47,46)" fg:x="824" fg:w="11"/><text x="58.9813%" y="1615.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (3 samples, 0.21%)</title><rect x="59.3015%" y="1589" width="0.2138%" height="15" fill="rgb(249,23,13)" fg:x="832" fg:w="3"/><text x="59.5515%" y="1599.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.21%)</title><rect x="59.3015%" y="1573" width="0.2138%" height="15" fill="rgb(219,9,5)" fg:x="832" fg:w="3"/><text x="59.5515%" y="1583.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.36%)</title><rect x="62.5089%" y="1509" width="0.3564%" height="15" fill="rgb(254,171,16)" fg:x="877" fg:w="5"/><text x="62.7589%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (17 samples, 1.21%)</title><rect x="61.9387%" y="1525" width="1.2117%" height="15" fill="rgb(230,171,20)" fg:x="869" fg:w="17"/><text x="62.1887%" y="1535.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4 samples, 0.29%)</title><rect x="62.8653%" y="1509" width="0.2851%" height="15" fill="rgb(210,71,41)" fg:x="882" fg:w="4"/><text x="63.1153%" y="1519.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (13 samples, 0.93%)</title><rect x="63.9344%" y="1509" width="0.9266%" height="15" fill="rgb(206,173,20)" fg:x="897" fg:w="13"/><text x="64.1844%" y="1519.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (72 samples, 5.13%)</title><rect x="60.8696%" y="1573" width="5.1319%" height="15" fill="rgb(233,88,34)" fg:x="854" fg:w="72"/><text x="61.1196%" y="1583.50">&lt;std::..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (72 samples, 5.13%)</title><rect x="60.8696%" y="1557" width="5.1319%" height="15" fill="rgb(223,209,46)" fg:x="854" fg:w="72"/><text x="61.1196%" y="1567.50">&lt;core:..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (72 samples, 5.13%)</title><rect x="60.8696%" y="1541" width="5.1319%" height="15" fill="rgb(250,43,18)" fg:x="854" fg:w="72"/><text x="61.1196%" y="1551.50">&lt;core:..</text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (40 samples, 2.85%)</title><rect x="63.1504%" y="1525" width="2.8510%" height="15" fill="rgb(208,13,10)" fg:x="886" fg:w="40"/><text x="63.4004%" y="1535.50">&lt;c..</text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (16 samples, 1.14%)</title><rect x="64.8610%" y="1509" width="1.1404%" height="15" fill="rgb(212,200,36)" fg:x="910" fg:w="16"/><text x="65.1110%" y="1519.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (9 samples, 0.64%)</title><rect x="66.0014%" y="1573" width="0.6415%" height="15" fill="rgb(225,90,30)" fg:x="926" fg:w="9"/><text x="66.2514%" y="1583.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (7 samples, 0.50%)</title><rect x="66.1440%" y="1557" width="0.4989%" height="15" fill="rgb(236,182,39)" fg:x="928" fg:w="7"/><text x="66.3940%" y="1567.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (7 samples, 0.50%)</title><rect x="66.1440%" y="1541" width="0.4989%" height="15" fill="rgb(212,144,35)" fg:x="928" fg:w="7"/><text x="66.3940%" y="1551.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (7 samples, 0.50%)</title><rect x="66.1440%" y="1525" width="0.4989%" height="15" fill="rgb(228,63,44)" fg:x="928" fg:w="7"/><text x="66.3940%" y="1535.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.07%)</title><rect x="69.8503%" y="1477" width="0.0713%" height="15" fill="rgb(228,109,6)" fg:x="980" fg:w="1"/><text x="70.1003%" y="1487.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (18 samples, 1.28%)</title><rect x="68.9950%" y="1493" width="1.2830%" height="15" fill="rgb(238,117,24)" fg:x="968" fg:w="18"/><text x="69.2450%" y="1503.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (5 samples, 0.36%)</title><rect x="69.9216%" y="1477" width="0.3564%" height="15" fill="rgb(242,26,26)" fg:x="981" fg:w="5"/><text x="70.1716%" y="1487.50"></text></g><g><title>core::hash::sip::u8to64_le (4 samples, 0.29%)</title><rect x="70.2780%" y="1493" width="0.2851%" height="15" fill="rgb(221,92,48)" fg:x="986" fg:w="4"/><text x="70.5280%" y="1503.50"></text></g><g><title>hashbrown::map::make_insert_hash (141 samples, 10.05%)</title><rect x="60.8696%" y="1589" width="10.0499%" height="15" fill="rgb(209,209,32)" fg:x="854" fg:w="141"/><text x="61.1196%" y="1599.50">hashbrown::map:..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (60 samples, 4.28%)</title><rect x="66.6429%" y="1573" width="4.2766%" height="15" fill="rgb(221,70,22)" fg:x="935" fg:w="60"/><text x="66.8929%" y="1583.50">core:..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (60 samples, 4.28%)</title><rect x="66.6429%" y="1557" width="4.2766%" height="15" fill="rgb(248,145,5)" fg:x="935" fg:w="60"/><text x="66.8929%" y="1567.50">core:..</text></g><g><title>core::hash::Hasher::write_usize (60 samples, 4.28%)</title><rect x="66.6429%" y="1541" width="4.2766%" height="15" fill="rgb(226,116,26)" fg:x="935" fg:w="60"/><text x="66.8929%" y="1551.50">core:..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (51 samples, 3.64%)</title><rect x="67.2844%" y="1525" width="3.6351%" height="15" fill="rgb(244,5,17)" fg:x="944" fg:w="51"/><text x="67.5344%" y="1535.50">&lt;cor..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (42 samples, 2.99%)</title><rect x="67.9259%" y="1509" width="2.9936%" height="15" fill="rgb(252,159,33)" fg:x="953" fg:w="42"/><text x="68.1759%" y="1519.50">&lt;co..</text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.36%)</title><rect x="70.5631%" y="1493" width="0.3564%" height="15" fill="rgb(206,71,0)" fg:x="990" fg:w="5"/><text x="70.8131%" y="1503.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (3 samples, 0.21%)</title><rect x="70.9195%" y="1589" width="0.2138%" height="15" fill="rgb(233,118,54)" fg:x="995" fg:w="3"/><text x="71.1695%" y="1599.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (3 samples, 0.21%)</title><rect x="70.9195%" y="1573" width="0.2138%" height="15" fill="rgb(234,83,48)" fg:x="995" fg:w="3"/><text x="71.1695%" y="1583.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (3 samples, 0.21%)</title><rect x="70.9195%" y="1557" width="0.2138%" height="15" fill="rgb(228,3,54)" fg:x="995" fg:w="3"/><text x="71.1695%" y="1567.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.36%)</title><rect x="71.6322%" y="1557" width="0.3564%" height="15" fill="rgb(226,155,13)" fg:x="1005" fg:w="5"/><text x="71.8822%" y="1567.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.29%)</title><rect x="71.7035%" y="1541" width="0.2851%" height="15" fill="rgb(241,28,37)" fg:x="1006" fg:w="4"/><text x="71.9535%" y="1551.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.21%)</title><rect x="71.7748%" y="1525" width="0.2138%" height="15" fill="rgb(233,93,10)" fg:x="1007" fg:w="3"/><text x="72.0248%" y="1535.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (3 samples, 0.21%)</title><rect x="71.7748%" y="1509" width="0.2138%" height="15" fill="rgb(225,113,19)" fg:x="1007" fg:w="3"/><text x="72.0248%" y="1519.50"></text></g><g><title>hashbrown::raw::h2 (2 samples, 0.14%)</title><rect x="71.9886%" y="1509" width="0.1426%" height="15" fill="rgb(241,2,18)" fg:x="1010" fg:w="2"/><text x="72.2386%" y="1519.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (5 samples, 0.36%)</title><rect x="72.1311%" y="1509" width="0.3564%" height="15" fill="rgb(228,207,21)" fg:x="1012" fg:w="5"/><text x="72.3811%" y="1519.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (5 samples, 0.36%)</title><rect x="72.1311%" y="1493" width="0.3564%" height="15" fill="rgb(213,211,35)" fg:x="1012" fg:w="5"/><text x="72.3811%" y="1503.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.36%)</title><rect x="72.1311%" y="1477" width="0.3564%" height="15" fill="rgb(209,83,10)" fg:x="1012" fg:w="5"/><text x="72.3811%" y="1487.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (21 samples, 1.50%)</title><rect x="71.1333%" y="1589" width="1.4968%" height="15" fill="rgb(209,164,1)" fg:x="998" fg:w="21"/><text x="71.3833%" y="1599.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (21 samples, 1.50%)</title><rect x="71.1333%" y="1573" width="1.4968%" height="15" fill="rgb(213,184,43)" fg:x="998" fg:w="21"/><text x="71.3833%" y="1583.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (9 samples, 0.64%)</title><rect x="71.9886%" y="1557" width="0.6415%" height="15" fill="rgb(231,61,34)" fg:x="1010" fg:w="9"/><text x="72.2386%" y="1567.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (9 samples, 0.64%)</title><rect x="71.9886%" y="1541" width="0.6415%" height="15" fill="rgb(235,75,3)" fg:x="1010" fg:w="9"/><text x="72.2386%" y="1551.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (9 samples, 0.64%)</title><rect x="71.9886%" y="1525" width="0.6415%" height="15" fill="rgb(220,106,47)" fg:x="1010" fg:w="9"/><text x="72.2386%" y="1535.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.14%)</title><rect x="72.4875%" y="1509" width="0.1426%" height="15" fill="rgb(210,196,33)" fg:x="1017" fg:w="2"/><text x="72.7375%" y="1519.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.14%)</title><rect x="72.4875%" y="1493" width="0.1426%" height="15" fill="rgb(229,154,42)" fg:x="1017" fg:w="2"/><text x="72.7375%" y="1503.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.14%)</title><rect x="72.4875%" y="1477" width="0.1426%" height="15" fill="rgb(228,114,26)" fg:x="1017" fg:w="2"/><text x="72.7375%" y="1487.50"></text></g><g><title>core::core_arch::simd::i8x16::new (2 samples, 0.14%)</title><rect x="72.4875%" y="1461" width="0.1426%" height="15" fill="rgb(208,144,1)" fg:x="1017" fg:w="2"/><text x="72.7375%" y="1471.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (2 samples, 0.14%)</title><rect x="73.2003%" y="1573" width="0.1426%" height="15" fill="rgb(239,112,37)" fg:x="1027" fg:w="2"/><text x="73.4503%" y="1583.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.14%)</title><rect x="73.3428%" y="1573" width="0.1426%" height="15" fill="rgb(210,96,50)" fg:x="1029" fg:w="2"/><text x="73.5928%" y="1583.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (5 samples, 0.36%)</title><rect x="73.4854%" y="1573" width="0.3564%" height="15" fill="rgb(222,178,2)" fg:x="1031" fg:w="5"/><text x="73.7354%" y="1583.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (5 samples, 0.36%)</title><rect x="73.4854%" y="1557" width="0.3564%" height="15" fill="rgb(226,74,18)" fg:x="1031" fg:w="5"/><text x="73.7354%" y="1567.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.36%)</title><rect x="73.4854%" y="1541" width="0.3564%" height="15" fill="rgb(225,67,54)" fg:x="1031" fg:w="5"/><text x="73.7354%" y="1551.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (24 samples, 1.71%)</title><rect x="72.6301%" y="1589" width="1.7106%" height="15" fill="rgb(251,92,32)" fg:x="1019" fg:w="24"/><text x="72.8801%" y="1599.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (7 samples, 0.50%)</title><rect x="73.8418%" y="1573" width="0.4989%" height="15" fill="rgb(228,149,22)" fg:x="1036" fg:w="7"/><text x="74.0918%" y="1583.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (7 samples, 0.50%)</title><rect x="73.8418%" y="1557" width="0.4989%" height="15" fill="rgb(243,54,13)" fg:x="1036" fg:w="7"/><text x="74.0918%" y="1567.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (215 samples, 15.32%)</title><rect x="59.5153%" y="1605" width="15.3243%" height="15" fill="rgb(243,180,28)" fg:x="835" fg:w="215"/><text x="59.7653%" y="1615.50">std::collections::hash:..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (7 samples, 0.50%)</title><rect x="74.3407%" y="1589" width="0.4989%" height="15" fill="rgb(208,167,24)" fg:x="1043" fg:w="7"/><text x="74.5907%" y="1599.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (4 samples, 0.29%)</title><rect x="74.5545%" y="1573" width="0.2851%" height="15" fill="rgb(245,73,45)" fg:x="1046" fg:w="4"/><text x="74.8045%" y="1583.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (4 samples, 0.29%)</title><rect x="74.5545%" y="1557" width="0.2851%" height="15" fill="rgb(237,203,48)" fg:x="1046" fg:w="4"/><text x="74.8045%" y="1567.50"></text></g><g><title>ldpc::decoding::BMCDecoder&lt;_,_&gt;::init_state (251 samples, 17.89%)</title><rect x="57.0919%" y="1621" width="17.8902%" height="15" fill="rgb(211,197,16)" fg:x="801" fg:w="251"/><text x="57.3419%" y="1631.50">ldpc::decoding::BMCDecoder&lt;_..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V&gt;::with_capacity (2 samples, 0.14%)</title><rect x="74.8396%" y="1605" width="0.1426%" height="15" fill="rgb(243,99,51)" fg:x="1050" fg:w="2"/><text x="75.0896%" y="1615.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::with_capacity_and_hasher (2 samples, 0.14%)</title><rect x="74.8396%" y="1589" width="0.1426%" height="15" fill="rgb(215,123,29)" fg:x="1050" fg:w="2"/><text x="75.0896%" y="1599.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::with_capacity_and_hasher (2 samples, 0.14%)</title><rect x="74.8396%" y="1573" width="0.1426%" height="15" fill="rgb(239,186,37)" fg:x="1050" fg:w="2"/><text x="75.0896%" y="1583.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::with_capacity (2 samples, 0.14%)</title><rect x="74.8396%" y="1557" width="0.1426%" height="15" fill="rgb(252,136,39)" fg:x="1050" fg:w="2"/><text x="75.0896%" y="1567.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (2 samples, 0.14%)</title><rect x="74.8396%" y="1541" width="0.1426%" height="15" fill="rgb(223,213,32)" fg:x="1050" fg:w="2"/><text x="75.0896%" y="1551.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::fallible_with_capacity (2 samples, 0.14%)</title><rect x="74.8396%" y="1525" width="0.1426%" height="15" fill="rgb(233,115,5)" fg:x="1050" fg:w="2"/><text x="75.0896%" y="1535.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (2 samples, 0.14%)</title><rect x="74.8396%" y="1509" width="0.1426%" height="15" fill="rgb(207,226,44)" fg:x="1050" fg:w="2"/><text x="75.0896%" y="1519.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (2 samples, 0.14%)</title><rect x="74.8396%" y="1493" width="0.1426%" height="15" fill="rgb(208,126,0)" fg:x="1050" fg:w="2"/><text x="75.0896%" y="1503.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.14%)</title><rect x="74.8396%" y="1477" width="0.1426%" height="15" fill="rgb(244,66,21)" fg:x="1050" fg:w="2"/><text x="75.0896%" y="1487.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.14%)</title><rect x="74.8396%" y="1461" width="0.1426%" height="15" fill="rgb(222,97,12)" fg:x="1050" fg:w="2"/><text x="75.0896%" y="1471.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.14%)</title><rect x="74.8396%" y="1445" width="0.1426%" height="15" fill="rgb(219,213,19)" fg:x="1050" fg:w="2"/><text x="75.0896%" y="1455.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.14%)</title><rect x="74.8396%" y="1429" width="0.1426%" height="15" fill="rgb(252,169,30)" fg:x="1050" fg:w="2"/><text x="75.0896%" y="1439.50"></text></g><g><title>_int_malloc (1 samples, 0.07%)</title><rect x="74.9109%" y="1413" width="0.0713%" height="15" fill="rgb(206,32,51)" fg:x="1051" fg:w="1"/><text x="75.1609%" y="1423.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.21%)</title><rect x="75.7662%" y="1541" width="0.2138%" height="15" fill="rgb(250,172,42)" fg:x="1063" fg:w="3"/><text x="76.0162%" y="1551.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (3 samples, 0.21%)</title><rect x="75.7662%" y="1525" width="0.2138%" height="15" fill="rgb(209,34,43)" fg:x="1063" fg:w="3"/><text x="76.0162%" y="1535.50"></text></g><g><title>&lt;u8 as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (23 samples, 1.64%)</title><rect x="75.9800%" y="1525" width="1.6393%" height="15" fill="rgb(223,11,35)" fg:x="1066" fg:w="23"/><text x="76.2300%" y="1535.50"></text></g><g><title>ldpc::decoding::check_syndrome (134 samples, 9.55%)</title><rect x="74.9822%" y="1621" width="9.5510%" height="15" fill="rgb(251,219,26)" fg:x="1052" fg:w="134"/><text x="75.2322%" y="1631.50">ldpc::decoding..</text></g><g><title>core::iter::traits::iterator::Iterator::sum (127 samples, 9.05%)</title><rect x="75.4811%" y="1605" width="9.0520%" height="15" fill="rgb(231,119,3)" fg:x="1059" fg:w="127"/><text x="75.7311%" y="1615.50">core::iter::t..</text></g><g><title>&lt;u8 as core::iter::traits::accum::Sum&gt;::sum (127 samples, 9.05%)</title><rect x="75.4811%" y="1589" width="9.0520%" height="15" fill="rgb(216,97,11)" fg:x="1059" fg:w="127"/><text x="75.7311%" y="1599.50">&lt;u8 as core::..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (127 samples, 9.05%)</title><rect x="75.4811%" y="1573" width="9.0520%" height="15" fill="rgb(223,59,9)" fg:x="1059" fg:w="127"/><text x="75.7311%" y="1583.50">&lt;core::iter::..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (127 samples, 9.05%)</title><rect x="75.4811%" y="1557" width="9.0520%" height="15" fill="rgb(233,93,31)" fg:x="1059" fg:w="127"/><text x="75.7311%" y="1567.50">core::iter::t..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (120 samples, 8.55%)</title><rect x="75.9800%" y="1541" width="8.5531%" height="15" fill="rgb(239,81,33)" fg:x="1066" fg:w="120"/><text x="76.2300%" y="1551.50">core::iter::..</text></g><g><title>ldpc::decoding::check_syndrome::{{closure}} (97 samples, 6.91%)</title><rect x="77.6194%" y="1525" width="6.9138%" height="15" fill="rgb(213,120,34)" fg:x="1089" fg:w="97"/><text x="77.8694%" y="1535.50">ldpc::dec..</text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="84.5331%" y="1557" width="0.0713%" height="15" fill="rgb(243,49,53)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="1567.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="84.5331%" y="1541" width="0.0713%" height="15" fill="rgb(247,216,33)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="1551.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="84.5331%" y="1525" width="0.0713%" height="15" fill="rgb(226,26,14)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="1535.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="84.5331%" y="1509" width="0.0713%" height="15" fill="rgb(215,49,53)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="1519.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.07%)</title><rect x="84.5331%" y="1493" width="0.0713%" height="15" fill="rgb(245,162,40)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="1503.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (1 samples, 0.07%)</title><rect x="84.5331%" y="1477" width="0.0713%" height="15" fill="rgb(229,68,17)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="1487.50"></text></g><g><title>rayon_core::job::JobRef::execute (1 samples, 0.07%)</title><rect x="84.5331%" y="1461" width="0.0713%" height="15" fill="rgb(213,182,10)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="1471.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="84.5331%" y="1445" width="0.0713%" height="15" fill="rgb(245,125,30)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="1455.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="84.5331%" y="1429" width="0.0713%" height="15" fill="rgb(232,202,2)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="1439.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="84.5331%" y="1413" width="0.0713%" height="15" fill="rgb(237,140,51)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="1423.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="84.5331%" y="1397" width="0.0713%" height="15" fill="rgb(236,157,25)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="1407.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="84.5331%" y="1381" width="0.0713%" height="15" fill="rgb(219,209,0)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="1391.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (1 samples, 0.07%)</title><rect x="84.5331%" y="1365" width="0.0713%" height="15" fill="rgb(240,116,54)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="1375.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="84.5331%" y="1349" width="0.0713%" height="15" fill="rgb(216,10,36)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="1359.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="84.5331%" y="1333" width="0.0713%" height="15" fill="rgb(222,72,44)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="1343.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="84.5331%" y="1317" width="0.0713%" height="15" fill="rgb(232,159,9)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="1327.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="84.5331%" y="1301" width="0.0713%" height="15" fill="rgb(210,39,32)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="1311.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="84.5331%" y="1285" width="0.0713%" height="15" fill="rgb(216,194,45)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="1295.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="84.5331%" y="1269" width="0.0713%" height="15" fill="rgb(218,18,35)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="1279.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="84.5331%" y="1253" width="0.0713%" height="15" fill="rgb(207,83,51)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="1263.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="84.5331%" y="1237" width="0.0713%" height="15" fill="rgb(225,63,43)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="1247.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="84.5331%" y="1221" width="0.0713%" height="15" fill="rgb(207,57,36)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="1231.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="84.5331%" y="1205" width="0.0713%" height="15" fill="rgb(216,99,33)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="1215.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="84.5331%" y="1189" width="0.0713%" height="15" fill="rgb(225,42,16)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="1199.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="84.5331%" y="1173" width="0.0713%" height="15" fill="rgb(220,201,45)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="84.5331%" y="1157" width="0.0713%" height="15" fill="rgb(225,33,4)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="84.5331%" y="1141" width="0.0713%" height="15" fill="rgb(224,33,50)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="1151.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="84.5331%" y="1125" width="0.0713%" height="15" fill="rgb(246,198,51)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="1135.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="84.5331%" y="1109" width="0.0713%" height="15" fill="rgb(205,22,4)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="84.5331%" y="1093" width="0.0713%" height="15" fill="rgb(206,3,8)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="1103.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="84.5331%" y="1077" width="0.0713%" height="15" fill="rgb(251,23,15)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="84.5331%" y="1061" width="0.0713%" height="15" fill="rgb(252,88,28)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="1071.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="84.5331%" y="1045" width="0.0713%" height="15" fill="rgb(212,127,14)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="84.5331%" y="1029" width="0.0713%" height="15" fill="rgb(247,145,37)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="84.5331%" y="1013" width="0.0713%" height="15" fill="rgb(209,117,53)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="1023.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="84.5331%" y="997" width="0.0713%" height="15" fill="rgb(212,90,42)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="1007.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="84.5331%" y="981" width="0.0713%" height="15" fill="rgb(218,164,37)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="991.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="84.5331%" y="965" width="0.0713%" height="15" fill="rgb(246,65,34)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="975.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="84.5331%" y="949" width="0.0713%" height="15" fill="rgb(231,100,33)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="959.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="84.5331%" y="933" width="0.0713%" height="15" fill="rgb(228,126,14)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="943.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="84.5331%" y="917" width="0.0713%" height="15" fill="rgb(215,173,21)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="927.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="84.5331%" y="901" width="0.0713%" height="15" fill="rgb(210,6,40)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="911.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="84.5331%" y="885" width="0.0713%" height="15" fill="rgb(212,48,18)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="895.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="84.5331%" y="869" width="0.0713%" height="15" fill="rgb(230,214,11)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="879.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="84.5331%" y="853" width="0.0713%" height="15" fill="rgb(254,105,39)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="863.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="84.5331%" y="837" width="0.0713%" height="15" fill="rgb(245,158,5)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="847.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="84.5331%" y="821" width="0.0713%" height="15" fill="rgb(249,208,11)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="831.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="84.5331%" y="805" width="0.0713%" height="15" fill="rgb(210,39,28)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="815.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="84.5331%" y="789" width="0.0713%" height="15" fill="rgb(211,56,53)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="799.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="84.5331%" y="773" width="0.0713%" height="15" fill="rgb(226,201,30)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="783.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.07%)</title><rect x="84.5331%" y="757" width="0.0713%" height="15" fill="rgb(239,101,34)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="767.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="84.5331%" y="741" width="0.0713%" height="15" fill="rgb(226,209,5)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="751.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="84.5331%" y="725" width="0.0713%" height="15" fill="rgb(250,105,47)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="84.5331%" y="709" width="0.0713%" height="15" fill="rgb(230,72,3)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="719.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="84.5331%" y="693" width="0.0713%" height="15" fill="rgb(232,218,39)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="703.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="84.5331%" y="677" width="0.0713%" height="15" fill="rgb(248,166,6)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="84.5331%" y="661" width="0.0713%" height="15" fill="rgb(247,89,20)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="84.5331%" y="645" width="0.0713%" height="15" fill="rgb(248,130,54)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="84.5331%" y="629" width="0.0713%" height="15" fill="rgb(234,196,4)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="84.5331%" y="613" width="0.0713%" height="15" fill="rgb(250,143,31)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.07%)</title><rect x="84.5331%" y="597" width="0.0713%" height="15" fill="rgb(211,110,34)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="84.5331%" y="581" width="0.0713%" height="15" fill="rgb(215,124,48)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="84.5331%" y="565" width="0.0713%" height="15" fill="rgb(216,46,13)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.07%)</title><rect x="84.5331%" y="549" width="0.0713%" height="15" fill="rgb(205,184,25)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="84.5331%" y="533" width="0.0713%" height="15" fill="rgb(228,1,10)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="543.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="84.5331%" y="517" width="0.0713%" height="15" fill="rgb(213,116,27)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="527.50"></text></g><g><title>&lt;rand_distr::normal::Normal&lt;F&gt; as rand::distributions::distribution::Distribution&lt;F&gt;&gt;::sample (1 samples, 0.07%)</title><rect x="84.5331%" y="501" width="0.0713%" height="15" fill="rgb(241,95,50)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="511.50"></text></g><g><title>rand::rng::Rng::sample (1 samples, 0.07%)</title><rect x="84.5331%" y="485" width="0.0713%" height="15" fill="rgb(238,48,32)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="495.50"></text></g><g><title>rand_distr::utils::ziggurat (1 samples, 0.07%)</title><rect x="84.5331%" y="469" width="0.0713%" height="15" fill="rgb(235,113,49)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="479.50"></text></g><g><title>&lt;&amp;mut R as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="84.5331%" y="453" width="0.0713%" height="15" fill="rgb(205,127,43)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="463.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="84.5331%" y="437" width="0.0713%" height="15" fill="rgb(250,162,2)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="447.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="84.5331%" y="421" width="0.0713%" height="15" fill="rgb(220,13,41)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="431.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="84.5331%" y="405" width="0.0713%" height="15" fill="rgb(249,221,25)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="415.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (1 samples, 0.07%)</title><rect x="84.5331%" y="389" width="0.0713%" height="15" fill="rgb(215,208,19)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="399.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.07%)</title><rect x="84.5331%" y="373" width="0.0713%" height="15" fill="rgb(236,175,2)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="383.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.07%)</title><rect x="84.5331%" y="357" width="0.0713%" height="15" fill="rgb(241,52,2)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="367.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (1 samples, 0.07%)</title><rect x="84.5331%" y="341" width="0.0713%" height="15" fill="rgb(248,140,14)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="351.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (1 samples, 0.07%)</title><rect x="84.5331%" y="325" width="0.0713%" height="15" fill="rgb(253,22,42)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="335.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (1 samples, 0.07%)</title><rect x="84.5331%" y="309" width="0.0713%" height="15" fill="rgb(234,61,47)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="319.50"></text></g><g><title>rand_chacha::guts::round (1 samples, 0.07%)</title><rect x="84.5331%" y="293" width="0.0713%" height="15" fill="rgb(208,226,15)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="303.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (1 samples, 0.07%)</title><rect x="84.5331%" y="277" width="0.0713%" height="15" fill="rgb(217,221,4)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="287.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (1 samples, 0.07%)</title><rect x="84.5331%" y="261" width="0.0713%" height="15" fill="rgb(212,174,34)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="271.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (1 samples, 0.07%)</title><rect x="84.5331%" y="245" width="0.0713%" height="15" fill="rgb(253,83,4)" fg:x="1186" fg:w="1"/><text x="84.7831%" y="255.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (2 samples, 0.14%)</title><rect x="84.5331%" y="1621" width="0.1426%" height="15" fill="rgb(250,195,49)" fg:x="1186" fg:w="2"/><text x="84.7831%" y="1631.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (2 samples, 0.14%)</title><rect x="84.5331%" y="1605" width="0.1426%" height="15" fill="rgb(241,192,25)" fg:x="1186" fg:w="2"/><text x="84.7831%" y="1615.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 0.14%)</title><rect x="84.5331%" y="1589" width="0.1426%" height="15" fill="rgb(208,124,10)" fg:x="1186" fg:w="2"/><text x="84.7831%" y="1599.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2 samples, 0.14%)</title><rect x="84.5331%" y="1573" width="0.1426%" height="15" fill="rgb(222,33,0)" fg:x="1186" fg:w="2"/><text x="84.7831%" y="1583.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.07%)</title><rect x="84.6044%" y="1557" width="0.0713%" height="15" fill="rgb(234,209,28)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="1567.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (1 samples, 0.07%)</title><rect x="84.6044%" y="1541" width="0.0713%" height="15" fill="rgb(224,11,23)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="1551.50"></text></g><g><title>rayon_core::job::JobRef::execute (1 samples, 0.07%)</title><rect x="84.6044%" y="1525" width="0.0713%" height="15" fill="rgb(232,99,1)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="1535.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="84.6044%" y="1509" width="0.0713%" height="15" fill="rgb(237,95,45)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="1519.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="84.6044%" y="1493" width="0.0713%" height="15" fill="rgb(208,109,11)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="1503.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="84.6044%" y="1477" width="0.0713%" height="15" fill="rgb(216,190,48)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="1487.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="84.6044%" y="1461" width="0.0713%" height="15" fill="rgb(251,171,36)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="1471.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="84.6044%" y="1445" width="0.0713%" height="15" fill="rgb(230,62,22)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="1455.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (1 samples, 0.07%)</title><rect x="84.6044%" y="1429" width="0.0713%" height="15" fill="rgb(225,114,35)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="1439.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="84.6044%" y="1413" width="0.0713%" height="15" fill="rgb(215,118,42)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="1423.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="84.6044%" y="1397" width="0.0713%" height="15" fill="rgb(243,119,21)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="1407.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="84.6044%" y="1381" width="0.0713%" height="15" fill="rgb(252,177,53)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="1391.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="84.6044%" y="1365" width="0.0713%" height="15" fill="rgb(237,209,29)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="1375.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.07%)</title><rect x="84.6044%" y="1349" width="0.0713%" height="15" fill="rgb(212,65,23)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="1359.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (1 samples, 0.07%)</title><rect x="84.6044%" y="1333" width="0.0713%" height="15" fill="rgb(230,222,46)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="1343.50"></text></g><g><title>rayon_core::job::JobRef::execute (1 samples, 0.07%)</title><rect x="84.6044%" y="1317" width="0.0713%" height="15" fill="rgb(215,135,32)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="1327.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="84.6044%" y="1301" width="0.0713%" height="15" fill="rgb(246,101,22)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="1311.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="84.6044%" y="1285" width="0.0713%" height="15" fill="rgb(206,107,13)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="1295.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="84.6044%" y="1269" width="0.0713%" height="15" fill="rgb(250,100,44)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="1279.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="84.6044%" y="1253" width="0.0713%" height="15" fill="rgb(231,147,38)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="1263.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="84.6044%" y="1237" width="0.0713%" height="15" fill="rgb(229,8,40)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="1247.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (1 samples, 0.07%)</title><rect x="84.6044%" y="1221" width="0.0713%" height="15" fill="rgb(221,135,30)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="1231.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="84.6044%" y="1205" width="0.0713%" height="15" fill="rgb(249,193,18)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="1215.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="84.6044%" y="1189" width="0.0713%" height="15" fill="rgb(209,133,39)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="1199.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="84.6044%" y="1173" width="0.0713%" height="15" fill="rgb(232,100,14)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="84.6044%" y="1157" width="0.0713%" height="15" fill="rgb(224,185,1)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="84.6044%" y="1141" width="0.0713%" height="15" fill="rgb(223,139,8)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="1151.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="84.6044%" y="1125" width="0.0713%" height="15" fill="rgb(232,213,38)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="1135.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="84.6044%" y="1109" width="0.0713%" height="15" fill="rgb(207,94,22)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="84.6044%" y="1093" width="0.0713%" height="15" fill="rgb(219,183,54)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="1103.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.07%)</title><rect x="84.6044%" y="1077" width="0.0713%" height="15" fill="rgb(216,185,54)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="1087.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (1 samples, 0.07%)</title><rect x="84.6044%" y="1061" width="0.0713%" height="15" fill="rgb(254,217,39)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="1071.50"></text></g><g><title>rayon_core::job::JobRef::execute (1 samples, 0.07%)</title><rect x="84.6044%" y="1045" width="0.0713%" height="15" fill="rgb(240,178,23)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="1055.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="84.6044%" y="1029" width="0.0713%" height="15" fill="rgb(218,11,47)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="1039.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="84.6044%" y="1013" width="0.0713%" height="15" fill="rgb(218,51,51)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="1023.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="84.6044%" y="997" width="0.0713%" height="15" fill="rgb(238,126,27)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="1007.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="84.6044%" y="981" width="0.0713%" height="15" fill="rgb(249,202,22)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="991.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="84.6044%" y="965" width="0.0713%" height="15" fill="rgb(254,195,49)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="975.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (1 samples, 0.07%)</title><rect x="84.6044%" y="949" width="0.0713%" height="15" fill="rgb(208,123,14)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="959.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="84.6044%" y="933" width="0.0713%" height="15" fill="rgb(224,200,8)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="943.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="84.6044%" y="917" width="0.0713%" height="15" fill="rgb(217,61,36)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="927.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="84.6044%" y="901" width="0.0713%" height="15" fill="rgb(206,35,45)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="911.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="84.6044%" y="885" width="0.0713%" height="15" fill="rgb(217,65,33)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="895.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="84.6044%" y="869" width="0.0713%" height="15" fill="rgb(222,158,48)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="879.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="84.6044%" y="853" width="0.0713%" height="15" fill="rgb(254,2,54)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="863.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="84.6044%" y="837" width="0.0713%" height="15" fill="rgb(250,143,38)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="847.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="84.6044%" y="821" width="0.0713%" height="15" fill="rgb(248,25,0)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="831.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="84.6044%" y="805" width="0.0713%" height="15" fill="rgb(206,152,27)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="815.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="84.6044%" y="789" width="0.0713%" height="15" fill="rgb(240,77,30)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="799.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="84.6044%" y="773" width="0.0713%" height="15" fill="rgb(231,5,3)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="783.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="84.6044%" y="757" width="0.0713%" height="15" fill="rgb(207,226,32)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="767.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="84.6044%" y="741" width="0.0713%" height="15" fill="rgb(222,207,47)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="751.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="84.6044%" y="725" width="0.0713%" height="15" fill="rgb(229,115,45)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="735.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="84.6044%" y="709" width="0.0713%" height="15" fill="rgb(224,191,6)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="719.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.07%)</title><rect x="84.6044%" y="693" width="0.0713%" height="15" fill="rgb(230,227,24)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="703.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="84.6044%" y="677" width="0.0713%" height="15" fill="rgb(228,80,19)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="687.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="84.6044%" y="661" width="0.0713%" height="15" fill="rgb(247,229,0)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="84.6044%" y="645" width="0.0713%" height="15" fill="rgb(237,194,15)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="655.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="84.6044%" y="629" width="0.0713%" height="15" fill="rgb(219,203,20)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="639.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="84.6044%" y="613" width="0.0713%" height="15" fill="rgb(234,128,8)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="84.6044%" y="597" width="0.0713%" height="15" fill="rgb(248,202,8)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="84.6044%" y="581" width="0.0713%" height="15" fill="rgb(206,104,37)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="84.6044%" y="565" width="0.0713%" height="15" fill="rgb(223,8,27)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="84.6044%" y="549" width="0.0713%" height="15" fill="rgb(216,217,28)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.07%)</title><rect x="84.6044%" y="533" width="0.0713%" height="15" fill="rgb(249,199,1)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="84.6044%" y="517" width="0.0713%" height="15" fill="rgb(240,85,17)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="84.6044%" y="501" width="0.0713%" height="15" fill="rgb(206,108,45)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.07%)</title><rect x="84.6044%" y="485" width="0.0713%" height="15" fill="rgb(245,210,41)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="84.6044%" y="469" width="0.0713%" height="15" fill="rgb(206,13,37)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="479.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="84.6044%" y="453" width="0.0713%" height="15" fill="rgb(250,61,18)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="463.50"></text></g><g><title>&lt;rand_distr::normal::Normal&lt;F&gt; as rand::distributions::distribution::Distribution&lt;F&gt;&gt;::sample (1 samples, 0.07%)</title><rect x="84.6044%" y="437" width="0.0713%" height="15" fill="rgb(235,172,48)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="447.50"></text></g><g><title>rand::rng::Rng::sample (1 samples, 0.07%)</title><rect x="84.6044%" y="421" width="0.0713%" height="15" fill="rgb(249,201,17)" fg:x="1187" fg:w="1"/><text x="84.8544%" y="431.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.07%)</title><rect x="84.6757%" y="1605" width="0.0713%" height="15" fill="rgb(219,208,6)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="1615.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (1 samples, 0.07%)</title><rect x="84.6757%" y="1589" width="0.0713%" height="15" fill="rgb(248,31,23)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="1599.50"></text></g><g><title>rayon_core::job::JobRef::execute (1 samples, 0.07%)</title><rect x="84.6757%" y="1573" width="0.0713%" height="15" fill="rgb(245,15,42)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="1583.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="84.6757%" y="1557" width="0.0713%" height="15" fill="rgb(222,217,39)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="1567.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="84.6757%" y="1541" width="0.0713%" height="15" fill="rgb(210,219,27)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="1551.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="84.6757%" y="1525" width="0.0713%" height="15" fill="rgb(252,166,36)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="1535.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="84.6757%" y="1509" width="0.0713%" height="15" fill="rgb(245,132,34)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="1519.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="84.6757%" y="1493" width="0.0713%" height="15" fill="rgb(236,54,3)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="1503.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (1 samples, 0.07%)</title><rect x="84.6757%" y="1477" width="0.0713%" height="15" fill="rgb(241,173,43)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="1487.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="84.6757%" y="1461" width="0.0713%" height="15" fill="rgb(215,190,9)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="1471.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="84.6757%" y="1445" width="0.0713%" height="15" fill="rgb(242,101,16)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="1455.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="84.6757%" y="1429" width="0.0713%" height="15" fill="rgb(223,190,21)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="1439.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="84.6757%" y="1413" width="0.0713%" height="15" fill="rgb(215,228,25)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="1423.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="84.6757%" y="1397" width="0.0713%" height="15" fill="rgb(225,36,22)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="1407.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="84.6757%" y="1381" width="0.0713%" height="15" fill="rgb(251,106,46)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="1391.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="84.6757%" y="1365" width="0.0713%" height="15" fill="rgb(208,90,1)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="1375.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="84.6757%" y="1349" width="0.0713%" height="15" fill="rgb(243,10,4)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="1359.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="84.6757%" y="1333" width="0.0713%" height="15" fill="rgb(212,137,27)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="1343.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="84.6757%" y="1317" width="0.0713%" height="15" fill="rgb(231,220,49)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="1327.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="84.6757%" y="1301" width="0.0713%" height="15" fill="rgb(237,96,20)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="1311.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="84.6757%" y="1285" width="0.0713%" height="15" fill="rgb(239,229,30)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="1295.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="84.6757%" y="1269" width="0.0713%" height="15" fill="rgb(219,65,33)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="1279.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.07%)</title><rect x="84.6757%" y="1253" width="0.0713%" height="15" fill="rgb(243,134,7)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="1263.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (1 samples, 0.07%)</title><rect x="84.6757%" y="1237" width="0.0713%" height="15" fill="rgb(216,177,54)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="1247.50"></text></g><g><title>rayon_core::job::JobRef::execute (1 samples, 0.07%)</title><rect x="84.6757%" y="1221" width="0.0713%" height="15" fill="rgb(211,160,20)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="1231.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="84.6757%" y="1205" width="0.0713%" height="15" fill="rgb(239,85,39)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="1215.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="84.6757%" y="1189" width="0.0713%" height="15" fill="rgb(232,125,22)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="1199.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="84.6757%" y="1173" width="0.0713%" height="15" fill="rgb(244,57,34)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="1183.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="84.6757%" y="1157" width="0.0713%" height="15" fill="rgb(214,203,32)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="1167.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="84.6757%" y="1141" width="0.0713%" height="15" fill="rgb(207,58,43)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="1151.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (1 samples, 0.07%)</title><rect x="84.6757%" y="1125" width="0.0713%" height="15" fill="rgb(215,193,15)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="84.6757%" y="1109" width="0.0713%" height="15" fill="rgb(232,15,44)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="1119.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="84.6757%" y="1093" width="0.0713%" height="15" fill="rgb(212,3,48)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="1103.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="84.6757%" y="1077" width="0.0713%" height="15" fill="rgb(218,128,7)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="1087.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="84.6757%" y="1061" width="0.0713%" height="15" fill="rgb(226,216,39)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="1071.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="84.6757%" y="1045" width="0.0713%" height="15" fill="rgb(243,47,51)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="1055.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="84.6757%" y="1029" width="0.0713%" height="15" fill="rgb(241,183,40)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="1039.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="84.6757%" y="1013" width="0.0713%" height="15" fill="rgb(231,217,32)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="84.6757%" y="997" width="0.0713%" height="15" fill="rgb(229,61,38)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="1007.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="84.6757%" y="981" width="0.0713%" height="15" fill="rgb(225,210,5)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="991.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="84.6757%" y="965" width="0.0713%" height="15" fill="rgb(231,79,45)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="975.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="84.6757%" y="949" width="0.0713%" height="15" fill="rgb(224,100,7)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="959.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="84.6757%" y="933" width="0.0713%" height="15" fill="rgb(241,198,18)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="943.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="84.6757%" y="917" width="0.0713%" height="15" fill="rgb(252,97,53)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="927.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="84.6757%" y="901" width="0.0713%" height="15" fill="rgb(220,88,7)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="911.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="84.6757%" y="885" width="0.0713%" height="15" fill="rgb(213,176,14)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="895.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="84.6757%" y="869" width="0.0713%" height="15" fill="rgb(246,73,7)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="879.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="84.6757%" y="853" width="0.0713%" height="15" fill="rgb(245,64,36)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="863.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="84.6757%" y="837" width="0.0713%" height="15" fill="rgb(245,80,10)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="847.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="84.6757%" y="821" width="0.0713%" height="15" fill="rgb(232,107,50)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="831.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="84.6757%" y="805" width="0.0713%" height="15" fill="rgb(253,3,0)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="815.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="84.6757%" y="789" width="0.0713%" height="15" fill="rgb(212,99,53)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="799.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="84.6757%" y="773" width="0.0713%" height="15" fill="rgb(249,111,54)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="783.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="84.6757%" y="757" width="0.0713%" height="15" fill="rgb(249,55,30)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="767.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="84.6757%" y="741" width="0.0713%" height="15" fill="rgb(237,47,42)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="751.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="84.6757%" y="725" width="0.0713%" height="15" fill="rgb(211,20,18)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="735.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="84.6757%" y="709" width="0.0713%" height="15" fill="rgb(231,203,46)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="719.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="84.6757%" y="693" width="0.0713%" height="15" fill="rgb(237,142,3)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="703.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="84.6757%" y="677" width="0.0713%" height="15" fill="rgb(241,107,1)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="687.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="84.6757%" y="661" width="0.0713%" height="15" fill="rgb(229,83,13)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="671.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="84.6757%" y="645" width="0.0713%" height="15" fill="rgb(241,91,40)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="655.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="84.6757%" y="629" width="0.0713%" height="15" fill="rgb(225,3,45)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="639.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="84.6757%" y="613" width="0.0713%" height="15" fill="rgb(244,223,14)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="623.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="84.6757%" y="597" width="0.0713%" height="15" fill="rgb(224,124,37)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="607.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="84.6757%" y="581" width="0.0713%" height="15" fill="rgb(251,171,30)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="591.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="84.6757%" y="565" width="0.0713%" height="15" fill="rgb(236,46,54)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="575.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="84.6757%" y="549" width="0.0713%" height="15" fill="rgb(245,213,5)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="559.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="84.6757%" y="533" width="0.0713%" height="15" fill="rgb(230,144,27)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="543.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.07%)</title><rect x="84.6757%" y="517" width="0.0713%" height="15" fill="rgb(220,86,6)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="527.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="84.6757%" y="501" width="0.0713%" height="15" fill="rgb(240,20,13)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="511.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="84.6757%" y="485" width="0.0713%" height="15" fill="rgb(217,89,34)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="84.6757%" y="469" width="0.0713%" height="15" fill="rgb(229,13,5)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="479.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="84.6757%" y="453" width="0.0713%" height="15" fill="rgb(244,67,35)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="463.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="84.6757%" y="437" width="0.0713%" height="15" fill="rgb(221,40,2)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.07%)</title><rect x="84.6757%" y="421" width="0.0713%" height="15" fill="rgb(237,157,21)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="84.6757%" y="405" width="0.0713%" height="15" fill="rgb(222,94,11)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="415.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.07%)</title><rect x="84.6757%" y="389" width="0.0713%" height="15" fill="rgb(249,113,6)" fg:x="1188" fg:w="1"/><text x="84.9257%" y="399.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="84.7470%" y="1397" width="0.0713%" height="15" fill="rgb(238,137,36)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="1407.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="84.7470%" y="1381" width="0.0713%" height="15" fill="rgb(210,102,26)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="1391.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="84.7470%" y="1365" width="0.0713%" height="15" fill="rgb(218,30,30)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="1375.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="84.7470%" y="1349" width="0.0713%" height="15" fill="rgb(214,67,26)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="1359.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.07%)</title><rect x="84.7470%" y="1333" width="0.0713%" height="15" fill="rgb(251,9,53)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="1343.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (1 samples, 0.07%)</title><rect x="84.7470%" y="1317" width="0.0713%" height="15" fill="rgb(228,204,25)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="1327.50"></text></g><g><title>rayon_core::job::JobRef::execute (1 samples, 0.07%)</title><rect x="84.7470%" y="1301" width="0.0713%" height="15" fill="rgb(207,153,8)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="1311.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="84.7470%" y="1285" width="0.0713%" height="15" fill="rgb(242,9,16)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="1295.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="84.7470%" y="1269" width="0.0713%" height="15" fill="rgb(217,211,10)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="1279.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="84.7470%" y="1253" width="0.0713%" height="15" fill="rgb(219,228,52)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="1263.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="84.7470%" y="1237" width="0.0713%" height="15" fill="rgb(231,92,29)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="1247.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="84.7470%" y="1221" width="0.0713%" height="15" fill="rgb(232,8,23)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="1231.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (1 samples, 0.07%)</title><rect x="84.7470%" y="1205" width="0.0713%" height="15" fill="rgb(216,211,34)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="84.7470%" y="1189" width="0.0713%" height="15" fill="rgb(236,151,0)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="1199.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="84.7470%" y="1173" width="0.0713%" height="15" fill="rgb(209,168,3)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="1183.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="84.7470%" y="1157" width="0.0713%" height="15" fill="rgb(208,129,28)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="84.7470%" y="1141" width="0.0713%" height="15" fill="rgb(229,78,22)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="1151.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="84.7470%" y="1125" width="0.0713%" height="15" fill="rgb(228,187,13)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="1135.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="84.7470%" y="1109" width="0.0713%" height="15" fill="rgb(240,119,24)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="1119.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="84.7470%" y="1093" width="0.0713%" height="15" fill="rgb(209,194,42)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="1103.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="84.7470%" y="1077" width="0.0713%" height="15" fill="rgb(247,200,46)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="1087.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="84.7470%" y="1061" width="0.0713%" height="15" fill="rgb(218,76,16)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="84.7470%" y="1045" width="0.0713%" height="15" fill="rgb(225,21,48)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="1055.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="84.7470%" y="1029" width="0.0713%" height="15" fill="rgb(239,223,50)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="1039.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="84.7470%" y="1013" width="0.0713%" height="15" fill="rgb(244,45,21)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="1023.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="84.7470%" y="997" width="0.0713%" height="15" fill="rgb(232,33,43)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="1007.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="84.7470%" y="981" width="0.0713%" height="15" fill="rgb(209,8,3)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="991.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="84.7470%" y="965" width="0.0713%" height="15" fill="rgb(214,25,53)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="975.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="84.7470%" y="949" width="0.0713%" height="15" fill="rgb(254,186,54)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="959.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="84.7470%" y="933" width="0.0713%" height="15" fill="rgb(208,174,49)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="943.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="84.7470%" y="917" width="0.0713%" height="15" fill="rgb(233,191,51)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="927.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="84.7470%" y="901" width="0.0713%" height="15" fill="rgb(222,134,10)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="911.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="84.7470%" y="885" width="0.0713%" height="15" fill="rgb(230,226,20)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="895.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="84.7470%" y="869" width="0.0713%" height="15" fill="rgb(251,111,25)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="879.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="84.7470%" y="853" width="0.0713%" height="15" fill="rgb(224,40,46)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="863.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="84.7470%" y="837" width="0.0713%" height="15" fill="rgb(236,108,47)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="847.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="84.7470%" y="821" width="0.0713%" height="15" fill="rgb(234,93,0)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="831.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="84.7470%" y="805" width="0.0713%" height="15" fill="rgb(224,213,32)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="815.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="84.7470%" y="789" width="0.0713%" height="15" fill="rgb(251,11,48)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="799.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="84.7470%" y="773" width="0.0713%" height="15" fill="rgb(236,173,5)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="783.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="84.7470%" y="757" width="0.0713%" height="15" fill="rgb(230,95,12)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="767.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="84.7470%" y="741" width="0.0713%" height="15" fill="rgb(232,209,1)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="751.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="84.7470%" y="725" width="0.0713%" height="15" fill="rgb(232,6,1)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="735.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="84.7470%" y="709" width="0.0713%" height="15" fill="rgb(210,224,50)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="719.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="84.7470%" y="693" width="0.0713%" height="15" fill="rgb(228,127,35)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="703.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="84.7470%" y="677" width="0.0713%" height="15" fill="rgb(245,102,45)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="687.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.07%)</title><rect x="84.7470%" y="661" width="0.0713%" height="15" fill="rgb(214,1,49)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="671.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="84.7470%" y="645" width="0.0713%" height="15" fill="rgb(226,163,40)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="655.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="84.7470%" y="629" width="0.0713%" height="15" fill="rgb(239,212,28)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="84.7470%" y="613" width="0.0713%" height="15" fill="rgb(220,20,13)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="623.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="84.7470%" y="597" width="0.0713%" height="15" fill="rgb(210,164,35)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="607.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="84.7470%" y="581" width="0.0713%" height="15" fill="rgb(248,109,41)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="84.7470%" y="565" width="0.0713%" height="15" fill="rgb(238,23,50)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="84.7470%" y="549" width="0.0713%" height="15" fill="rgb(211,48,49)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="84.7470%" y="533" width="0.0713%" height="15" fill="rgb(223,36,21)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="84.7470%" y="517" width="0.0713%" height="15" fill="rgb(207,123,46)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.07%)</title><rect x="84.7470%" y="501" width="0.0713%" height="15" fill="rgb(240,218,32)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="84.7470%" y="485" width="0.0713%" height="15" fill="rgb(252,5,43)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="84.7470%" y="469" width="0.0713%" height="15" fill="rgb(252,84,19)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.07%)</title><rect x="84.7470%" y="453" width="0.0713%" height="15" fill="rgb(243,152,39)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="84.7470%" y="437" width="0.0713%" height="15" fill="rgb(234,160,15)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="447.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="84.7470%" y="421" width="0.0713%" height="15" fill="rgb(237,34,20)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="431.50"></text></g><g><title>&lt;rand_distr::normal::Normal&lt;F&gt; as rand::distributions::distribution::Distribution&lt;F&gt;&gt;::sample (1 samples, 0.07%)</title><rect x="84.7470%" y="405" width="0.0713%" height="15" fill="rgb(229,97,13)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="415.50"></text></g><g><title>rand::rng::Rng::sample (1 samples, 0.07%)</title><rect x="84.7470%" y="389" width="0.0713%" height="15" fill="rgb(234,71,50)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="399.50"></text></g><g><title>rand_distr::utils::ziggurat (1 samples, 0.07%)</title><rect x="84.7470%" y="373" width="0.0713%" height="15" fill="rgb(253,155,4)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="383.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::abs (1 samples, 0.07%)</title><rect x="84.7470%" y="357" width="0.0713%" height="15" fill="rgb(222,185,37)" fg:x="1189" fg:w="1"/><text x="84.9970%" y="367.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="84.8182%" y="1045" width="0.0713%" height="15" fill="rgb(251,177,13)" fg:x="1190" fg:w="1"/><text x="85.0682%" y="1055.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="84.8182%" y="1029" width="0.0713%" height="15" fill="rgb(250,179,40)" fg:x="1190" fg:w="1"/><text x="85.0682%" y="1039.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="84.8182%" y="1013" width="0.0713%" height="15" fill="rgb(242,44,2)" fg:x="1190" fg:w="1"/><text x="85.0682%" y="1023.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="84.8182%" y="997" width="0.0713%" height="15" fill="rgb(216,177,13)" fg:x="1190" fg:w="1"/><text x="85.0682%" y="1007.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="84.8182%" y="981" width="0.0713%" height="15" fill="rgb(216,106,43)" fg:x="1190" fg:w="1"/><text x="85.0682%" y="991.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="84.8182%" y="965" width="0.0713%" height="15" fill="rgb(216,183,2)" fg:x="1190" fg:w="1"/><text x="85.0682%" y="975.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="84.8182%" y="949" width="0.0713%" height="15" fill="rgb(249,75,3)" fg:x="1190" fg:w="1"/><text x="85.0682%" y="959.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="84.8182%" y="933" width="0.0713%" height="15" fill="rgb(219,67,39)" fg:x="1190" fg:w="1"/><text x="85.0682%" y="943.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="84.8182%" y="917" width="0.0713%" height="15" fill="rgb(253,228,2)" fg:x="1190" fg:w="1"/><text x="85.0682%" y="927.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="84.8182%" y="901" width="0.0713%" height="15" fill="rgb(235,138,27)" fg:x="1190" fg:w="1"/><text x="85.0682%" y="911.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="84.8182%" y="885" width="0.0713%" height="15" fill="rgb(236,97,51)" fg:x="1190" fg:w="1"/><text x="85.0682%" y="895.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="84.8182%" y="869" width="0.0713%" height="15" fill="rgb(240,80,30)" fg:x="1190" fg:w="1"/><text x="85.0682%" y="879.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="84.8182%" y="853" width="0.0713%" height="15" fill="rgb(230,178,19)" fg:x="1190" fg:w="1"/><text x="85.0682%" y="863.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="84.8182%" y="837" width="0.0713%" height="15" fill="rgb(210,190,27)" fg:x="1190" fg:w="1"/><text x="85.0682%" y="847.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="84.8182%" y="821" width="0.0713%" height="15" fill="rgb(222,107,31)" fg:x="1190" fg:w="1"/><text x="85.0682%" y="831.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="84.8182%" y="805" width="0.0713%" height="15" fill="rgb(216,127,34)" fg:x="1190" fg:w="1"/><text x="85.0682%" y="815.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="84.8182%" y="789" width="0.0713%" height="15" fill="rgb(234,116,52)" fg:x="1190" fg:w="1"/><text x="85.0682%" y="799.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="84.8182%" y="773" width="0.0713%" height="15" fill="rgb(222,124,15)" fg:x="1190" fg:w="1"/><text x="85.0682%" y="783.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="84.8182%" y="757" width="0.0713%" height="15" fill="rgb(231,179,28)" fg:x="1190" fg:w="1"/><text x="85.0682%" y="767.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.07%)</title><rect x="84.8182%" y="741" width="0.0713%" height="15" fill="rgb(226,93,45)" fg:x="1190" fg:w="1"/><text x="85.0682%" y="751.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="84.8182%" y="725" width="0.0713%" height="15" fill="rgb(215,8,51)" fg:x="1190" fg:w="1"/><text x="85.0682%" y="735.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="84.8182%" y="709" width="0.0713%" height="15" fill="rgb(223,106,5)" fg:x="1190" fg:w="1"/><text x="85.0682%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="84.8182%" y="693" width="0.0713%" height="15" fill="rgb(250,191,5)" fg:x="1190" fg:w="1"/><text x="85.0682%" y="703.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="84.8182%" y="677" width="0.0713%" height="15" fill="rgb(242,132,44)" fg:x="1190" fg:w="1"/><text x="85.0682%" y="687.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="84.8182%" y="661" width="0.0713%" height="15" fill="rgb(251,152,29)" fg:x="1190" fg:w="1"/><text x="85.0682%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="84.8182%" y="645" width="0.0713%" height="15" fill="rgb(218,179,5)" fg:x="1190" fg:w="1"/><text x="85.0682%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="84.8182%" y="629" width="0.0713%" height="15" fill="rgb(227,67,19)" fg:x="1190" fg:w="1"/><text x="85.0682%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="84.8182%" y="613" width="0.0713%" height="15" fill="rgb(233,119,31)" fg:x="1190" fg:w="1"/><text x="85.0682%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="84.8182%" y="597" width="0.0713%" height="15" fill="rgb(241,120,22)" fg:x="1190" fg:w="1"/><text x="85.0682%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.07%)</title><rect x="84.8182%" y="581" width="0.0713%" height="15" fill="rgb(224,102,30)" fg:x="1190" fg:w="1"/><text x="85.0682%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="84.8182%" y="565" width="0.0713%" height="15" fill="rgb(210,164,37)" fg:x="1190" fg:w="1"/><text x="85.0682%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.07%)</title><rect x="84.8182%" y="549" width="0.0713%" height="15" fill="rgb(226,191,16)" fg:x="1190" fg:w="1"/><text x="85.0682%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.07%)</title><rect x="84.8182%" y="533" width="0.0713%" height="15" fill="rgb(214,40,45)" fg:x="1190" fg:w="1"/><text x="85.0682%" y="543.50"></text></g><g><title>&lt;ldpc::channel::BinaryMemorylessChannel as ldpc::channel::Channel&gt;::transmit::{{closure}} (1 samples, 0.07%)</title><rect x="84.8182%" y="517" width="0.0713%" height="15" fill="rgb(244,29,26)" fg:x="1190" fg:w="1"/><text x="85.0682%" y="527.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="84.8895%" y="901" width="0.0713%" height="15" fill="rgb(216,16,5)" fg:x="1191" fg:w="1"/><text x="85.1395%" y="911.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="84.8895%" y="885" width="0.0713%" height="15" fill="rgb(249,76,35)" fg:x="1191" fg:w="1"/><text x="85.1395%" y="895.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="84.8895%" y="869" width="0.0713%" height="15" fill="rgb(207,11,44)" fg:x="1191" fg:w="1"/><text x="85.1395%" y="879.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="84.8895%" y="853" width="0.0713%" height="15" fill="rgb(228,190,49)" fg:x="1191" fg:w="1"/><text x="85.1395%" y="863.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="84.8895%" y="837" width="0.0713%" height="15" fill="rgb(214,173,12)" fg:x="1191" fg:w="1"/><text x="85.1395%" y="847.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="84.8895%" y="821" width="0.0713%" height="15" fill="rgb(218,26,35)" fg:x="1191" fg:w="1"/><text x="85.1395%" y="831.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="84.8895%" y="805" width="0.0713%" height="15" fill="rgb(220,200,19)" fg:x="1191" fg:w="1"/><text x="85.1395%" y="815.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="84.8895%" y="789" width="0.0713%" height="15" fill="rgb(239,95,49)" fg:x="1191" fg:w="1"/><text x="85.1395%" y="799.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="84.8895%" y="773" width="0.0713%" height="15" fill="rgb(235,85,53)" fg:x="1191" fg:w="1"/><text x="85.1395%" y="783.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="84.8895%" y="757" width="0.0713%" height="15" fill="rgb(233,133,31)" fg:x="1191" fg:w="1"/><text x="85.1395%" y="767.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="84.8895%" y="741" width="0.0713%" height="15" fill="rgb(218,25,20)" fg:x="1191" fg:w="1"/><text x="85.1395%" y="751.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="84.8895%" y="725" width="0.0713%" height="15" fill="rgb(252,210,38)" fg:x="1191" fg:w="1"/><text x="85.1395%" y="735.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="84.8895%" y="709" width="0.0713%" height="15" fill="rgb(242,134,21)" fg:x="1191" fg:w="1"/><text x="85.1395%" y="719.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="84.8895%" y="693" width="0.0713%" height="15" fill="rgb(213,28,48)" fg:x="1191" fg:w="1"/><text x="85.1395%" y="703.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="84.8895%" y="677" width="0.0713%" height="15" fill="rgb(250,196,2)" fg:x="1191" fg:w="1"/><text x="85.1395%" y="687.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="84.8895%" y="661" width="0.0713%" height="15" fill="rgb(227,5,17)" fg:x="1191" fg:w="1"/><text x="85.1395%" y="671.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="84.8895%" y="645" width="0.0713%" height="15" fill="rgb(221,226,24)" fg:x="1191" fg:w="1"/><text x="85.1395%" y="655.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="84.8895%" y="629" width="0.0713%" height="15" fill="rgb(211,5,48)" fg:x="1191" fg:w="1"/><text x="85.1395%" y="639.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="84.8895%" y="613" width="0.0713%" height="15" fill="rgb(219,150,6)" fg:x="1191" fg:w="1"/><text x="85.1395%" y="623.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="84.8895%" y="597" width="0.0713%" height="15" fill="rgb(251,46,16)" fg:x="1191" fg:w="1"/><text x="85.1395%" y="607.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.07%)</title><rect x="84.8895%" y="581" width="0.0713%" height="15" fill="rgb(220,204,40)" fg:x="1191" fg:w="1"/><text x="85.1395%" y="591.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="84.8895%" y="565" width="0.0713%" height="15" fill="rgb(211,85,2)" fg:x="1191" fg:w="1"/><text x="85.1395%" y="575.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="84.8895%" y="549" width="0.0713%" height="15" fill="rgb(229,17,7)" fg:x="1191" fg:w="1"/><text x="85.1395%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="84.8895%" y="533" width="0.0713%" height="15" fill="rgb(239,72,28)" fg:x="1191" fg:w="1"/><text x="85.1395%" y="543.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="84.8895%" y="517" width="0.0713%" height="15" fill="rgb(230,47,54)" fg:x="1191" fg:w="1"/><text x="85.1395%" y="527.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="84.8895%" y="501" width="0.0713%" height="15" fill="rgb(214,50,8)" fg:x="1191" fg:w="1"/><text x="85.1395%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="84.8895%" y="485" width="0.0713%" height="15" fill="rgb(216,198,43)" fg:x="1191" fg:w="1"/><text x="85.1395%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="84.8895%" y="469" width="0.0713%" height="15" fill="rgb(234,20,35)" fg:x="1191" fg:w="1"/><text x="85.1395%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="84.8895%" y="453" width="0.0713%" height="15" fill="rgb(254,45,19)" fg:x="1191" fg:w="1"/><text x="85.1395%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="84.8895%" y="437" width="0.0713%" height="15" fill="rgb(219,14,44)" fg:x="1191" fg:w="1"/><text x="85.1395%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.07%)</title><rect x="84.8895%" y="421" width="0.0713%" height="15" fill="rgb(217,220,26)" fg:x="1191" fg:w="1"/><text x="85.1395%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="84.8895%" y="405" width="0.0713%" height="15" fill="rgb(213,158,28)" fg:x="1191" fg:w="1"/><text x="85.1395%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="84.8895%" y="389" width="0.0713%" height="15" fill="rgb(252,51,52)" fg:x="1191" fg:w="1"/><text x="85.1395%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.07%)</title><rect x="84.8895%" y="373" width="0.0713%" height="15" fill="rgb(246,89,16)" fg:x="1191" fg:w="1"/><text x="85.1395%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="84.8895%" y="357" width="0.0713%" height="15" fill="rgb(216,158,49)" fg:x="1191" fg:w="1"/><text x="85.1395%" y="367.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="84.8895%" y="341" width="0.0713%" height="15" fill="rgb(236,107,19)" fg:x="1191" fg:w="1"/><text x="85.1395%" y="351.50"></text></g><g><title>&lt;rand_distr::normal::Normal&lt;F&gt; as rand::distributions::distribution::Distribution&lt;F&gt;&gt;::sample (1 samples, 0.07%)</title><rect x="84.8895%" y="325" width="0.0713%" height="15" fill="rgb(228,185,30)" fg:x="1191" fg:w="1"/><text x="85.1395%" y="335.50"></text></g><g><title>rand::rng::Rng::sample (1 samples, 0.07%)</title><rect x="84.8895%" y="309" width="0.0713%" height="15" fill="rgb(246,134,8)" fg:x="1191" fg:w="1"/><text x="85.1395%" y="319.50"></text></g><g><title>rand_distr::utils::ziggurat (1 samples, 0.07%)</title><rect x="84.8895%" y="293" width="0.0713%" height="15" fill="rgb(214,143,50)" fg:x="1191" fg:w="1"/><text x="85.1395%" y="303.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="84.9608%" y="757" width="0.0713%" height="15" fill="rgb(228,75,8)" fg:x="1192" fg:w="1"/><text x="85.2108%" y="767.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="84.9608%" y="741" width="0.0713%" height="15" fill="rgb(207,175,4)" fg:x="1192" fg:w="1"/><text x="85.2108%" y="751.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="84.9608%" y="725" width="0.0713%" height="15" fill="rgb(205,108,24)" fg:x="1192" fg:w="1"/><text x="85.2108%" y="735.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="84.9608%" y="709" width="0.0713%" height="15" fill="rgb(244,120,49)" fg:x="1192" fg:w="1"/><text x="85.2108%" y="719.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="84.9608%" y="693" width="0.0713%" height="15" fill="rgb(223,47,38)" fg:x="1192" fg:w="1"/><text x="85.2108%" y="703.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="84.9608%" y="677" width="0.0713%" height="15" fill="rgb(229,179,11)" fg:x="1192" fg:w="1"/><text x="85.2108%" y="687.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="84.9608%" y="661" width="0.0713%" height="15" fill="rgb(231,122,1)" fg:x="1192" fg:w="1"/><text x="85.2108%" y="671.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="84.9608%" y="645" width="0.0713%" height="15" fill="rgb(245,119,9)" fg:x="1192" fg:w="1"/><text x="85.2108%" y="655.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="84.9608%" y="629" width="0.0713%" height="15" fill="rgb(241,163,25)" fg:x="1192" fg:w="1"/><text x="85.2108%" y="639.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="84.9608%" y="613" width="0.0713%" height="15" fill="rgb(217,214,3)" fg:x="1192" fg:w="1"/><text x="85.2108%" y="623.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="84.9608%" y="597" width="0.0713%" height="15" fill="rgb(240,86,28)" fg:x="1192" fg:w="1"/><text x="85.2108%" y="607.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.07%)</title><rect x="84.9608%" y="581" width="0.0713%" height="15" fill="rgb(215,47,9)" fg:x="1192" fg:w="1"/><text x="85.2108%" y="591.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="84.9608%" y="565" width="0.0713%" height="15" fill="rgb(252,25,45)" fg:x="1192" fg:w="1"/><text x="85.2108%" y="575.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="84.9608%" y="549" width="0.0713%" height="15" fill="rgb(251,164,9)" fg:x="1192" fg:w="1"/><text x="85.2108%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="84.9608%" y="533" width="0.0713%" height="15" fill="rgb(233,194,0)" fg:x="1192" fg:w="1"/><text x="85.2108%" y="543.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="84.9608%" y="517" width="0.0713%" height="15" fill="rgb(249,111,24)" fg:x="1192" fg:w="1"/><text x="85.2108%" y="527.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="84.9608%" y="501" width="0.0713%" height="15" fill="rgb(250,223,3)" fg:x="1192" fg:w="1"/><text x="85.2108%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="84.9608%" y="485" width="0.0713%" height="15" fill="rgb(236,178,37)" fg:x="1192" fg:w="1"/><text x="85.2108%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="84.9608%" y="469" width="0.0713%" height="15" fill="rgb(241,158,50)" fg:x="1192" fg:w="1"/><text x="85.2108%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="84.9608%" y="453" width="0.0713%" height="15" fill="rgb(213,121,41)" fg:x="1192" fg:w="1"/><text x="85.2108%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="84.9608%" y="437" width="0.0713%" height="15" fill="rgb(240,92,3)" fg:x="1192" fg:w="1"/><text x="85.2108%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.07%)</title><rect x="84.9608%" y="421" width="0.0713%" height="15" fill="rgb(205,123,3)" fg:x="1192" fg:w="1"/><text x="85.2108%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="84.9608%" y="405" width="0.0713%" height="15" fill="rgb(205,97,47)" fg:x="1192" fg:w="1"/><text x="85.2108%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="84.9608%" y="389" width="0.0713%" height="15" fill="rgb(247,152,14)" fg:x="1192" fg:w="1"/><text x="85.2108%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.07%)</title><rect x="84.9608%" y="373" width="0.0713%" height="15" fill="rgb(248,195,53)" fg:x="1192" fg:w="1"/><text x="85.2108%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="84.9608%" y="357" width="0.0713%" height="15" fill="rgb(226,201,16)" fg:x="1192" fg:w="1"/><text x="85.2108%" y="367.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="84.9608%" y="341" width="0.0713%" height="15" fill="rgb(205,98,0)" fg:x="1192" fg:w="1"/><text x="85.2108%" y="351.50"></text></g><g><title>&lt;rand_distr::normal::Normal&lt;F&gt; as rand::distributions::distribution::Distribution&lt;F&gt;&gt;::sample (1 samples, 0.07%)</title><rect x="84.9608%" y="325" width="0.0713%" height="15" fill="rgb(214,191,48)" fg:x="1192" fg:w="1"/><text x="85.2108%" y="335.50"></text></g><g><title>rand::rng::Rng::sample (1 samples, 0.07%)</title><rect x="84.9608%" y="309" width="0.0713%" height="15" fill="rgb(237,112,39)" fg:x="1192" fg:w="1"/><text x="85.2108%" y="319.50"></text></g><g><title>rand_distr::utils::ziggurat (1 samples, 0.07%)</title><rect x="84.9608%" y="293" width="0.0713%" height="15" fill="rgb(247,203,27)" fg:x="1192" fg:w="1"/><text x="85.2108%" y="303.50"></text></g><g><title>&lt;u64 as rand::distributions::float::IntoFloat&gt;::into_float_with_exponent (1 samples, 0.07%)</title><rect x="84.9608%" y="277" width="0.0713%" height="15" fill="rgb(235,124,28)" fg:x="1192" fg:w="1"/><text x="85.2108%" y="287.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::from_bits (1 samples, 0.07%)</title><rect x="84.9608%" y="261" width="0.0713%" height="15" fill="rgb(208,207,46)" fg:x="1192" fg:w="1"/><text x="85.2108%" y="271.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (5 samples, 0.36%)</title><rect x="84.7470%" y="1461" width="0.3564%" height="15" fill="rgb(234,176,4)" fg:x="1189" fg:w="5"/><text x="84.9970%" y="1471.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.36%)</title><rect x="84.7470%" y="1445" width="0.3564%" height="15" fill="rgb(230,133,28)" fg:x="1189" fg:w="5"/><text x="84.9970%" y="1455.50"></text></g><g><title>rayon_core::join::join_context (5 samples, 0.36%)</title><rect x="84.7470%" y="1429" width="0.3564%" height="15" fill="rgb(211,137,40)" fg:x="1189" fg:w="5"/><text x="84.9970%" y="1439.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5 samples, 0.36%)</title><rect x="84.7470%" y="1413" width="0.3564%" height="15" fill="rgb(254,35,13)" fg:x="1189" fg:w="5"/><text x="84.9970%" y="1423.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (4 samples, 0.29%)</title><rect x="84.8182%" y="1397" width="0.2851%" height="15" fill="rgb(225,49,51)" fg:x="1190" fg:w="4"/><text x="85.0682%" y="1407.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (4 samples, 0.29%)</title><rect x="84.8182%" y="1381" width="0.2851%" height="15" fill="rgb(251,10,15)" fg:x="1190" fg:w="4"/><text x="85.0682%" y="1391.50"></text></g><g><title>rayon_core::job::JobRef::execute (4 samples, 0.29%)</title><rect x="84.8182%" y="1365" width="0.2851%" height="15" fill="rgb(228,207,15)" fg:x="1190" fg:w="4"/><text x="85.0682%" y="1375.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.29%)</title><rect x="84.8182%" y="1349" width="0.2851%" height="15" fill="rgb(241,99,19)" fg:x="1190" fg:w="4"/><text x="85.0682%" y="1359.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.29%)</title><rect x="84.8182%" y="1333" width="0.2851%" height="15" fill="rgb(207,104,49)" fg:x="1190" fg:w="4"/><text x="85.0682%" y="1343.50"></text></g><g><title>std::panicking::try (4 samples, 0.29%)</title><rect x="84.8182%" y="1317" width="0.2851%" height="15" fill="rgb(234,99,18)" fg:x="1190" fg:w="4"/><text x="85.0682%" y="1327.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.29%)</title><rect x="84.8182%" y="1301" width="0.2851%" height="15" fill="rgb(213,191,49)" fg:x="1190" fg:w="4"/><text x="85.0682%" y="1311.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.29%)</title><rect x="84.8182%" y="1285" width="0.2851%" height="15" fill="rgb(210,226,19)" fg:x="1190" fg:w="4"/><text x="85.0682%" y="1295.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (4 samples, 0.29%)</title><rect x="84.8182%" y="1269" width="0.2851%" height="15" fill="rgb(229,97,18)" fg:x="1190" fg:w="4"/><text x="85.0682%" y="1279.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 0.29%)</title><rect x="84.8182%" y="1253" width="0.2851%" height="15" fill="rgb(211,167,15)" fg:x="1190" fg:w="4"/><text x="85.0682%" y="1263.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.29%)</title><rect x="84.8182%" y="1237" width="0.2851%" height="15" fill="rgb(210,169,34)" fg:x="1190" fg:w="4"/><text x="85.0682%" y="1247.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.29%)</title><rect x="84.8182%" y="1221" width="0.2851%" height="15" fill="rgb(241,121,31)" fg:x="1190" fg:w="4"/><text x="85.0682%" y="1231.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.29%)</title><rect x="84.8182%" y="1205" width="0.2851%" height="15" fill="rgb(232,40,11)" fg:x="1190" fg:w="4"/><text x="85.0682%" y="1215.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.29%)</title><rect x="84.8182%" y="1189" width="0.2851%" height="15" fill="rgb(205,86,26)" fg:x="1190" fg:w="4"/><text x="85.0682%" y="1199.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.29%)</title><rect x="84.8182%" y="1173" width="0.2851%" height="15" fill="rgb(231,126,28)" fg:x="1190" fg:w="4"/><text x="85.0682%" y="1183.50"></text></g><g><title>std::panicking::try (4 samples, 0.29%)</title><rect x="84.8182%" y="1157" width="0.2851%" height="15" fill="rgb(219,221,18)" fg:x="1190" fg:w="4"/><text x="85.0682%" y="1167.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.29%)</title><rect x="84.8182%" y="1141" width="0.2851%" height="15" fill="rgb(211,40,0)" fg:x="1190" fg:w="4"/><text x="85.0682%" y="1151.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.29%)</title><rect x="84.8182%" y="1125" width="0.2851%" height="15" fill="rgb(239,85,43)" fg:x="1190" fg:w="4"/><text x="85.0682%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (4 samples, 0.29%)</title><rect x="84.8182%" y="1109" width="0.2851%" height="15" fill="rgb(231,55,21)" fg:x="1190" fg:w="4"/><text x="85.0682%" y="1119.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.29%)</title><rect x="84.8182%" y="1093" width="0.2851%" height="15" fill="rgb(225,184,43)" fg:x="1190" fg:w="4"/><text x="85.0682%" y="1103.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.29%)</title><rect x="84.8182%" y="1077" width="0.2851%" height="15" fill="rgb(251,158,41)" fg:x="1190" fg:w="4"/><text x="85.0682%" y="1087.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.29%)</title><rect x="84.8182%" y="1061" width="0.2851%" height="15" fill="rgb(234,159,37)" fg:x="1190" fg:w="4"/><text x="85.0682%" y="1071.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (3 samples, 0.21%)</title><rect x="84.8895%" y="1045" width="0.2138%" height="15" fill="rgb(216,204,22)" fg:x="1191" fg:w="3"/><text x="85.1395%" y="1055.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.21%)</title><rect x="84.8895%" y="1029" width="0.2138%" height="15" fill="rgb(214,17,3)" fg:x="1191" fg:w="3"/><text x="85.1395%" y="1039.50"></text></g><g><title>std::panicking::try (3 samples, 0.21%)</title><rect x="84.8895%" y="1013" width="0.2138%" height="15" fill="rgb(212,111,17)" fg:x="1191" fg:w="3"/><text x="85.1395%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.21%)</title><rect x="84.8895%" y="997" width="0.2138%" height="15" fill="rgb(221,157,24)" fg:x="1191" fg:w="3"/><text x="85.1395%" y="1007.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.21%)</title><rect x="84.8895%" y="981" width="0.2138%" height="15" fill="rgb(252,16,13)" fg:x="1191" fg:w="3"/><text x="85.1395%" y="991.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (3 samples, 0.21%)</title><rect x="84.8895%" y="965" width="0.2138%" height="15" fill="rgb(221,62,2)" fg:x="1191" fg:w="3"/><text x="85.1395%" y="975.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (3 samples, 0.21%)</title><rect x="84.8895%" y="949" width="0.2138%" height="15" fill="rgb(247,87,22)" fg:x="1191" fg:w="3"/><text x="85.1395%" y="959.50"></text></g><g><title>rayon_core::join::join_context (3 samples, 0.21%)</title><rect x="84.8895%" y="933" width="0.2138%" height="15" fill="rgb(215,73,9)" fg:x="1191" fg:w="3"/><text x="85.1395%" y="943.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3 samples, 0.21%)</title><rect x="84.8895%" y="917" width="0.2138%" height="15" fill="rgb(207,175,33)" fg:x="1191" fg:w="3"/><text x="85.1395%" y="927.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (2 samples, 0.14%)</title><rect x="84.9608%" y="901" width="0.1426%" height="15" fill="rgb(243,129,54)" fg:x="1192" fg:w="2"/><text x="85.2108%" y="911.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.14%)</title><rect x="84.9608%" y="885" width="0.1426%" height="15" fill="rgb(227,119,45)" fg:x="1192" fg:w="2"/><text x="85.2108%" y="895.50"></text></g><g><title>std::panicking::try (2 samples, 0.14%)</title><rect x="84.9608%" y="869" width="0.1426%" height="15" fill="rgb(205,109,36)" fg:x="1192" fg:w="2"/><text x="85.2108%" y="879.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.14%)</title><rect x="84.9608%" y="853" width="0.1426%" height="15" fill="rgb(205,6,39)" fg:x="1192" fg:w="2"/><text x="85.2108%" y="863.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.14%)</title><rect x="84.9608%" y="837" width="0.1426%" height="15" fill="rgb(221,32,16)" fg:x="1192" fg:w="2"/><text x="85.2108%" y="847.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (2 samples, 0.14%)</title><rect x="84.9608%" y="821" width="0.1426%" height="15" fill="rgb(228,144,50)" fg:x="1192" fg:w="2"/><text x="85.2108%" y="831.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (2 samples, 0.14%)</title><rect x="84.9608%" y="805" width="0.1426%" height="15" fill="rgb(229,201,53)" fg:x="1192" fg:w="2"/><text x="85.2108%" y="815.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 0.14%)</title><rect x="84.9608%" y="789" width="0.1426%" height="15" fill="rgb(249,153,27)" fg:x="1192" fg:w="2"/><text x="85.2108%" y="799.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2 samples, 0.14%)</title><rect x="84.9608%" y="773" width="0.1426%" height="15" fill="rgb(227,106,25)" fg:x="1192" fg:w="2"/><text x="85.2108%" y="783.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="85.0321%" y="757" width="0.0713%" height="15" fill="rgb(230,65,29)" fg:x="1193" fg:w="1"/><text x="85.2821%" y="767.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="85.0321%" y="741" width="0.0713%" height="15" fill="rgb(221,57,46)" fg:x="1193" fg:w="1"/><text x="85.2821%" y="751.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="85.0321%" y="725" width="0.0713%" height="15" fill="rgb(229,161,17)" fg:x="1193" fg:w="1"/><text x="85.2821%" y="735.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="85.0321%" y="709" width="0.0713%" height="15" fill="rgb(222,213,11)" fg:x="1193" fg:w="1"/><text x="85.2821%" y="719.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="85.0321%" y="693" width="0.0713%" height="15" fill="rgb(235,35,13)" fg:x="1193" fg:w="1"/><text x="85.2821%" y="703.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="85.0321%" y="677" width="0.0713%" height="15" fill="rgb(233,158,34)" fg:x="1193" fg:w="1"/><text x="85.2821%" y="687.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="85.0321%" y="661" width="0.0713%" height="15" fill="rgb(215,151,48)" fg:x="1193" fg:w="1"/><text x="85.2821%" y="671.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="85.0321%" y="645" width="0.0713%" height="15" fill="rgb(229,84,14)" fg:x="1193" fg:w="1"/><text x="85.2821%" y="655.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="85.0321%" y="629" width="0.0713%" height="15" fill="rgb(229,68,14)" fg:x="1193" fg:w="1"/><text x="85.2821%" y="639.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="85.0321%" y="613" width="0.0713%" height="15" fill="rgb(243,106,26)" fg:x="1193" fg:w="1"/><text x="85.2821%" y="623.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="85.0321%" y="597" width="0.0713%" height="15" fill="rgb(206,45,38)" fg:x="1193" fg:w="1"/><text x="85.2821%" y="607.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.07%)</title><rect x="85.0321%" y="581" width="0.0713%" height="15" fill="rgb(226,6,15)" fg:x="1193" fg:w="1"/><text x="85.2821%" y="591.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="85.0321%" y="565" width="0.0713%" height="15" fill="rgb(232,22,54)" fg:x="1193" fg:w="1"/><text x="85.2821%" y="575.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="85.0321%" y="549" width="0.0713%" height="15" fill="rgb(229,222,32)" fg:x="1193" fg:w="1"/><text x="85.2821%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="85.0321%" y="533" width="0.0713%" height="15" fill="rgb(228,62,29)" fg:x="1193" fg:w="1"/><text x="85.2821%" y="543.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="85.0321%" y="517" width="0.0713%" height="15" fill="rgb(251,103,34)" fg:x="1193" fg:w="1"/><text x="85.2821%" y="527.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="85.0321%" y="501" width="0.0713%" height="15" fill="rgb(233,12,30)" fg:x="1193" fg:w="1"/><text x="85.2821%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="85.0321%" y="485" width="0.0713%" height="15" fill="rgb(238,52,0)" fg:x="1193" fg:w="1"/><text x="85.2821%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="85.0321%" y="469" width="0.0713%" height="15" fill="rgb(223,98,5)" fg:x="1193" fg:w="1"/><text x="85.2821%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="85.0321%" y="453" width="0.0713%" height="15" fill="rgb(228,75,37)" fg:x="1193" fg:w="1"/><text x="85.2821%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="85.0321%" y="437" width="0.0713%" height="15" fill="rgb(205,115,49)" fg:x="1193" fg:w="1"/><text x="85.2821%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.07%)</title><rect x="85.0321%" y="421" width="0.0713%" height="15" fill="rgb(250,154,43)" fg:x="1193" fg:w="1"/><text x="85.2821%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="85.0321%" y="405" width="0.0713%" height="15" fill="rgb(226,43,29)" fg:x="1193" fg:w="1"/><text x="85.2821%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="85.0321%" y="389" width="0.0713%" height="15" fill="rgb(249,228,39)" fg:x="1193" fg:w="1"/><text x="85.2821%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.07%)</title><rect x="85.0321%" y="373" width="0.0713%" height="15" fill="rgb(216,79,43)" fg:x="1193" fg:w="1"/><text x="85.2821%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="85.0321%" y="357" width="0.0713%" height="15" fill="rgb(228,95,12)" fg:x="1193" fg:w="1"/><text x="85.2821%" y="367.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="85.0321%" y="341" width="0.0713%" height="15" fill="rgb(249,221,15)" fg:x="1193" fg:w="1"/><text x="85.2821%" y="351.50"></text></g><g><title>&lt;rand_distr::normal::Normal&lt;F&gt; as rand::distributions::distribution::Distribution&lt;F&gt;&gt;::sample (1 samples, 0.07%)</title><rect x="85.0321%" y="325" width="0.0713%" height="15" fill="rgb(233,34,13)" fg:x="1193" fg:w="1"/><text x="85.2821%" y="335.50"></text></g><g><title>rand::rng::Rng::sample (1 samples, 0.07%)</title><rect x="85.0321%" y="309" width="0.0713%" height="15" fill="rgb(214,103,39)" fg:x="1193" fg:w="1"/><text x="85.2821%" y="319.50"></text></g><g><title>rand_distr::utils::ziggurat (1 samples, 0.07%)</title><rect x="85.0321%" y="293" width="0.0713%" height="15" fill="rgb(251,126,39)" fg:x="1193" fg:w="1"/><text x="85.2821%" y="303.50"></text></g><g><title>&lt;&amp;mut R as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="85.0321%" y="277" width="0.0713%" height="15" fill="rgb(214,216,36)" fg:x="1193" fg:w="1"/><text x="85.2821%" y="287.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="85.0321%" y="261" width="0.0713%" height="15" fill="rgb(220,221,8)" fg:x="1193" fg:w="1"/><text x="85.2821%" y="271.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="85.0321%" y="245" width="0.0713%" height="15" fill="rgb(240,216,3)" fg:x="1193" fg:w="1"/><text x="85.2821%" y="255.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="85.0321%" y="229" width="0.0713%" height="15" fill="rgb(232,218,17)" fg:x="1193" fg:w="1"/><text x="85.2821%" y="239.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (1 samples, 0.07%)</title><rect x="85.0321%" y="213" width="0.0713%" height="15" fill="rgb(229,163,45)" fg:x="1193" fg:w="1"/><text x="85.2821%" y="223.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.07%)</title><rect x="85.0321%" y="197" width="0.0713%" height="15" fill="rgb(231,110,42)" fg:x="1193" fg:w="1"/><text x="85.2821%" y="207.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.07%)</title><rect x="85.0321%" y="181" width="0.0713%" height="15" fill="rgb(208,170,48)" fg:x="1193" fg:w="1"/><text x="85.2821%" y="191.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (1 samples, 0.07%)</title><rect x="85.0321%" y="165" width="0.0713%" height="15" fill="rgb(239,116,25)" fg:x="1193" fg:w="1"/><text x="85.2821%" y="175.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (1 samples, 0.07%)</title><rect x="85.0321%" y="149" width="0.0713%" height="15" fill="rgb(219,200,50)" fg:x="1193" fg:w="1"/><text x="85.2821%" y="159.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (1 samples, 0.07%)</title><rect x="85.0321%" y="133" width="0.0713%" height="15" fill="rgb(245,200,0)" fg:x="1193" fg:w="1"/><text x="85.2821%" y="143.50"></text></g><g><title>rand_chacha::guts::round (1 samples, 0.07%)</title><rect x="85.0321%" y="117" width="0.0713%" height="15" fill="rgb(245,119,33)" fg:x="1193" fg:w="1"/><text x="85.2821%" y="127.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (1 samples, 0.07%)</title><rect x="85.0321%" y="101" width="0.0713%" height="15" fill="rgb(231,125,12)" fg:x="1193" fg:w="1"/><text x="85.2821%" y="111.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (1 samples, 0.07%)</title><rect x="85.0321%" y="85" width="0.0713%" height="15" fill="rgb(216,96,41)" fg:x="1193" fg:w="1"/><text x="85.2821%" y="95.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (1 samples, 0.07%)</title><rect x="85.0321%" y="69" width="0.0713%" height="15" fill="rgb(248,43,45)" fg:x="1193" fg:w="1"/><text x="85.2821%" y="79.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="85.1033%" y="1109" width="0.0713%" height="15" fill="rgb(217,222,7)" fg:x="1194" fg:w="1"/><text x="85.3533%" y="1119.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="85.1033%" y="1093" width="0.0713%" height="15" fill="rgb(233,28,6)" fg:x="1194" fg:w="1"/><text x="85.3533%" y="1103.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="85.1033%" y="1077" width="0.0713%" height="15" fill="rgb(231,218,15)" fg:x="1194" fg:w="1"/><text x="85.3533%" y="1087.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="85.1033%" y="1061" width="0.0713%" height="15" fill="rgb(226,171,48)" fg:x="1194" fg:w="1"/><text x="85.3533%" y="1071.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="85.1033%" y="1045" width="0.0713%" height="15" fill="rgb(235,201,9)" fg:x="1194" fg:w="1"/><text x="85.3533%" y="1055.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="85.1033%" y="1029" width="0.0713%" height="15" fill="rgb(217,80,15)" fg:x="1194" fg:w="1"/><text x="85.3533%" y="1039.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="85.1033%" y="1013" width="0.0713%" height="15" fill="rgb(219,152,8)" fg:x="1194" fg:w="1"/><text x="85.3533%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="85.1033%" y="997" width="0.0713%" height="15" fill="rgb(243,107,38)" fg:x="1194" fg:w="1"/><text x="85.3533%" y="1007.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="85.1033%" y="981" width="0.0713%" height="15" fill="rgb(231,17,5)" fg:x="1194" fg:w="1"/><text x="85.3533%" y="991.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="85.1033%" y="965" width="0.0713%" height="15" fill="rgb(209,25,54)" fg:x="1194" fg:w="1"/><text x="85.3533%" y="975.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="85.1033%" y="949" width="0.0713%" height="15" fill="rgb(219,0,2)" fg:x="1194" fg:w="1"/><text x="85.3533%" y="959.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="85.1033%" y="933" width="0.0713%" height="15" fill="rgb(246,9,5)" fg:x="1194" fg:w="1"/><text x="85.3533%" y="943.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="85.1033%" y="917" width="0.0713%" height="15" fill="rgb(226,159,4)" fg:x="1194" fg:w="1"/><text x="85.3533%" y="927.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="85.1033%" y="901" width="0.0713%" height="15" fill="rgb(219,175,34)" fg:x="1194" fg:w="1"/><text x="85.3533%" y="911.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="85.1033%" y="885" width="0.0713%" height="15" fill="rgb(236,10,46)" fg:x="1194" fg:w="1"/><text x="85.3533%" y="895.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="85.1033%" y="869" width="0.0713%" height="15" fill="rgb(240,211,16)" fg:x="1194" fg:w="1"/><text x="85.3533%" y="879.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="85.1033%" y="853" width="0.0713%" height="15" fill="rgb(205,3,43)" fg:x="1194" fg:w="1"/><text x="85.3533%" y="863.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="85.1033%" y="837" width="0.0713%" height="15" fill="rgb(245,7,22)" fg:x="1194" fg:w="1"/><text x="85.3533%" y="847.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="85.1033%" y="821" width="0.0713%" height="15" fill="rgb(239,132,32)" fg:x="1194" fg:w="1"/><text x="85.3533%" y="831.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="85.1033%" y="805" width="0.0713%" height="15" fill="rgb(228,202,34)" fg:x="1194" fg:w="1"/><text x="85.3533%" y="815.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="85.1033%" y="789" width="0.0713%" height="15" fill="rgb(254,200,22)" fg:x="1194" fg:w="1"/><text x="85.3533%" y="799.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="85.1033%" y="773" width="0.0713%" height="15" fill="rgb(219,10,39)" fg:x="1194" fg:w="1"/><text x="85.3533%" y="783.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="85.1033%" y="757" width="0.0713%" height="15" fill="rgb(226,210,39)" fg:x="1194" fg:w="1"/><text x="85.3533%" y="767.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="85.1033%" y="741" width="0.0713%" height="15" fill="rgb(208,219,16)" fg:x="1194" fg:w="1"/><text x="85.3533%" y="751.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="85.1033%" y="725" width="0.0713%" height="15" fill="rgb(216,158,51)" fg:x="1194" fg:w="1"/><text x="85.3533%" y="735.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="85.1033%" y="709" width="0.0713%" height="15" fill="rgb(233,14,44)" fg:x="1194" fg:w="1"/><text x="85.3533%" y="719.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="85.1033%" y="693" width="0.0713%" height="15" fill="rgb(237,97,39)" fg:x="1194" fg:w="1"/><text x="85.3533%" y="703.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="85.1033%" y="677" width="0.0713%" height="15" fill="rgb(218,198,43)" fg:x="1194" fg:w="1"/><text x="85.3533%" y="687.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.07%)</title><rect x="85.1033%" y="661" width="0.0713%" height="15" fill="rgb(231,104,20)" fg:x="1194" fg:w="1"/><text x="85.3533%" y="671.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="85.1033%" y="645" width="0.0713%" height="15" fill="rgb(254,36,13)" fg:x="1194" fg:w="1"/><text x="85.3533%" y="655.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="85.1033%" y="629" width="0.0713%" height="15" fill="rgb(248,14,50)" fg:x="1194" fg:w="1"/><text x="85.3533%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="85.1033%" y="613" width="0.0713%" height="15" fill="rgb(217,107,29)" fg:x="1194" fg:w="1"/><text x="85.3533%" y="623.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="85.1033%" y="597" width="0.0713%" height="15" fill="rgb(251,169,33)" fg:x="1194" fg:w="1"/><text x="85.3533%" y="607.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="85.1033%" y="581" width="0.0713%" height="15" fill="rgb(217,108,32)" fg:x="1194" fg:w="1"/><text x="85.3533%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="85.1033%" y="565" width="0.0713%" height="15" fill="rgb(219,66,42)" fg:x="1194" fg:w="1"/><text x="85.3533%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="85.1033%" y="549" width="0.0713%" height="15" fill="rgb(206,180,7)" fg:x="1194" fg:w="1"/><text x="85.3533%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="85.1033%" y="533" width="0.0713%" height="15" fill="rgb(208,226,31)" fg:x="1194" fg:w="1"/><text x="85.3533%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="85.1033%" y="517" width="0.0713%" height="15" fill="rgb(218,26,49)" fg:x="1194" fg:w="1"/><text x="85.3533%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.07%)</title><rect x="85.1033%" y="501" width="0.0713%" height="15" fill="rgb(233,197,48)" fg:x="1194" fg:w="1"/><text x="85.3533%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="85.1033%" y="485" width="0.0713%" height="15" fill="rgb(252,181,51)" fg:x="1194" fg:w="1"/><text x="85.3533%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.07%)</title><rect x="85.1033%" y="469" width="0.0713%" height="15" fill="rgb(253,90,19)" fg:x="1194" fg:w="1"/><text x="85.3533%" y="479.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.07%)</title><rect x="85.1033%" y="453" width="0.0713%" height="15" fill="rgb(215,171,30)" fg:x="1194" fg:w="1"/><text x="85.3533%" y="463.50"></text></g><g><title>&lt;ldpc::channel::BinaryMemorylessChannel as ldpc::channel::Channel&gt;::transmit::{{closure}} (1 samples, 0.07%)</title><rect x="85.1033%" y="437" width="0.0713%" height="15" fill="rgb(214,222,9)" fg:x="1194" fg:w="1"/><text x="85.3533%" y="447.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="85.1746%" y="837" width="0.0713%" height="15" fill="rgb(223,3,22)" fg:x="1195" fg:w="1"/><text x="85.4246%" y="847.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="85.1746%" y="821" width="0.0713%" height="15" fill="rgb(225,196,46)" fg:x="1195" fg:w="1"/><text x="85.4246%" y="831.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="85.1746%" y="805" width="0.0713%" height="15" fill="rgb(209,110,37)" fg:x="1195" fg:w="1"/><text x="85.4246%" y="815.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="85.1746%" y="789" width="0.0713%" height="15" fill="rgb(249,89,12)" fg:x="1195" fg:w="1"/><text x="85.4246%" y="799.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="85.1746%" y="773" width="0.0713%" height="15" fill="rgb(226,27,33)" fg:x="1195" fg:w="1"/><text x="85.4246%" y="783.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="85.1746%" y="757" width="0.0713%" height="15" fill="rgb(213,82,22)" fg:x="1195" fg:w="1"/><text x="85.4246%" y="767.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="85.1746%" y="741" width="0.0713%" height="15" fill="rgb(248,140,0)" fg:x="1195" fg:w="1"/><text x="85.4246%" y="751.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="85.1746%" y="725" width="0.0713%" height="15" fill="rgb(228,106,3)" fg:x="1195" fg:w="1"/><text x="85.4246%" y="735.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="85.1746%" y="709" width="0.0713%" height="15" fill="rgb(209,23,37)" fg:x="1195" fg:w="1"/><text x="85.4246%" y="719.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="85.1746%" y="693" width="0.0713%" height="15" fill="rgb(241,93,50)" fg:x="1195" fg:w="1"/><text x="85.4246%" y="703.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="85.1746%" y="677" width="0.0713%" height="15" fill="rgb(253,46,43)" fg:x="1195" fg:w="1"/><text x="85.4246%" y="687.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.07%)</title><rect x="85.1746%" y="661" width="0.0713%" height="15" fill="rgb(226,206,43)" fg:x="1195" fg:w="1"/><text x="85.4246%" y="671.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="85.1746%" y="645" width="0.0713%" height="15" fill="rgb(217,54,7)" fg:x="1195" fg:w="1"/><text x="85.4246%" y="655.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="85.1746%" y="629" width="0.0713%" height="15" fill="rgb(223,5,52)" fg:x="1195" fg:w="1"/><text x="85.4246%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="85.1746%" y="613" width="0.0713%" height="15" fill="rgb(206,52,46)" fg:x="1195" fg:w="1"/><text x="85.4246%" y="623.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="85.1746%" y="597" width="0.0713%" height="15" fill="rgb(253,136,11)" fg:x="1195" fg:w="1"/><text x="85.4246%" y="607.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="85.1746%" y="581" width="0.0713%" height="15" fill="rgb(208,106,33)" fg:x="1195" fg:w="1"/><text x="85.4246%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="85.1746%" y="565" width="0.0713%" height="15" fill="rgb(206,54,4)" fg:x="1195" fg:w="1"/><text x="85.4246%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="85.1746%" y="549" width="0.0713%" height="15" fill="rgb(213,3,15)" fg:x="1195" fg:w="1"/><text x="85.4246%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="85.1746%" y="533" width="0.0713%" height="15" fill="rgb(252,211,39)" fg:x="1195" fg:w="1"/><text x="85.4246%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="85.1746%" y="517" width="0.0713%" height="15" fill="rgb(223,6,36)" fg:x="1195" fg:w="1"/><text x="85.4246%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.07%)</title><rect x="85.1746%" y="501" width="0.0713%" height="15" fill="rgb(252,169,45)" fg:x="1195" fg:w="1"/><text x="85.4246%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="85.1746%" y="485" width="0.0713%" height="15" fill="rgb(212,48,26)" fg:x="1195" fg:w="1"/><text x="85.4246%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="85.1746%" y="469" width="0.0713%" height="15" fill="rgb(251,102,48)" fg:x="1195" fg:w="1"/><text x="85.4246%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.07%)</title><rect x="85.1746%" y="453" width="0.0713%" height="15" fill="rgb(243,208,16)" fg:x="1195" fg:w="1"/><text x="85.4246%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="85.1746%" y="437" width="0.0713%" height="15" fill="rgb(219,96,24)" fg:x="1195" fg:w="1"/><text x="85.4246%" y="447.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="85.1746%" y="421" width="0.0713%" height="15" fill="rgb(219,33,29)" fg:x="1195" fg:w="1"/><text x="85.4246%" y="431.50"></text></g><g><title>&lt;rand_distr::normal::Normal&lt;F&gt; as rand::distributions::distribution::Distribution&lt;F&gt;&gt;::sample (1 samples, 0.07%)</title><rect x="85.1746%" y="405" width="0.0713%" height="15" fill="rgb(223,176,5)" fg:x="1195" fg:w="1"/><text x="85.4246%" y="415.50"></text></g><g><title>rand_distr::normal::Normal&lt;F&gt;::from_zscore (1 samples, 0.07%)</title><rect x="85.1746%" y="389" width="0.0713%" height="15" fill="rgb(228,140,14)" fg:x="1195" fg:w="1"/><text x="85.4246%" y="399.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (1 samples, 0.07%)</title><rect x="85.1746%" y="373" width="0.0713%" height="15" fill="rgb(217,179,31)" fg:x="1195" fg:w="1"/><text x="85.4246%" y="383.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (2 samples, 0.14%)</title><rect x="85.1746%" y="965" width="0.1426%" height="15" fill="rgb(230,9,30)" fg:x="1195" fg:w="2"/><text x="85.4246%" y="975.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (2 samples, 0.14%)</title><rect x="85.1746%" y="949" width="0.1426%" height="15" fill="rgb(230,136,20)" fg:x="1195" fg:w="2"/><text x="85.4246%" y="959.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 0.14%)</title><rect x="85.1746%" y="933" width="0.1426%" height="15" fill="rgb(215,210,22)" fg:x="1195" fg:w="2"/><text x="85.4246%" y="943.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2 samples, 0.14%)</title><rect x="85.1746%" y="917" width="0.1426%" height="15" fill="rgb(218,43,5)" fg:x="1195" fg:w="2"/><text x="85.4246%" y="927.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (2 samples, 0.14%)</title><rect x="85.1746%" y="901" width="0.1426%" height="15" fill="rgb(216,11,5)" fg:x="1195" fg:w="2"/><text x="85.4246%" y="911.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (2 samples, 0.14%)</title><rect x="85.1746%" y="885" width="0.1426%" height="15" fill="rgb(209,82,29)" fg:x="1195" fg:w="2"/><text x="85.4246%" y="895.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 0.14%)</title><rect x="85.1746%" y="869" width="0.1426%" height="15" fill="rgb(244,115,12)" fg:x="1195" fg:w="2"/><text x="85.4246%" y="879.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2 samples, 0.14%)</title><rect x="85.1746%" y="853" width="0.1426%" height="15" fill="rgb(222,82,18)" fg:x="1195" fg:w="2"/><text x="85.4246%" y="863.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="85.2459%" y="837" width="0.0713%" height="15" fill="rgb(249,227,8)" fg:x="1196" fg:w="1"/><text x="85.4959%" y="847.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="85.2459%" y="821" width="0.0713%" height="15" fill="rgb(253,141,45)" fg:x="1196" fg:w="1"/><text x="85.4959%" y="831.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="85.2459%" y="805" width="0.0713%" height="15" fill="rgb(234,184,4)" fg:x="1196" fg:w="1"/><text x="85.4959%" y="815.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="85.2459%" y="789" width="0.0713%" height="15" fill="rgb(218,194,23)" fg:x="1196" fg:w="1"/><text x="85.4959%" y="799.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="85.2459%" y="773" width="0.0713%" height="15" fill="rgb(235,66,41)" fg:x="1196" fg:w="1"/><text x="85.4959%" y="783.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="85.2459%" y="757" width="0.0713%" height="15" fill="rgb(245,217,1)" fg:x="1196" fg:w="1"/><text x="85.4959%" y="767.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="85.2459%" y="741" width="0.0713%" height="15" fill="rgb(229,91,1)" fg:x="1196" fg:w="1"/><text x="85.4959%" y="751.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="85.2459%" y="725" width="0.0713%" height="15" fill="rgb(207,101,30)" fg:x="1196" fg:w="1"/><text x="85.4959%" y="735.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="85.2459%" y="709" width="0.0713%" height="15" fill="rgb(223,82,49)" fg:x="1196" fg:w="1"/><text x="85.4959%" y="719.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="85.2459%" y="693" width="0.0713%" height="15" fill="rgb(218,167,17)" fg:x="1196" fg:w="1"/><text x="85.4959%" y="703.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="85.2459%" y="677" width="0.0713%" height="15" fill="rgb(208,103,14)" fg:x="1196" fg:w="1"/><text x="85.4959%" y="687.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="85.2459%" y="661" width="0.0713%" height="15" fill="rgb(238,20,8)" fg:x="1196" fg:w="1"/><text x="85.4959%" y="671.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="85.2459%" y="645" width="0.0713%" height="15" fill="rgb(218,80,54)" fg:x="1196" fg:w="1"/><text x="85.4959%" y="655.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="85.2459%" y="629" width="0.0713%" height="15" fill="rgb(240,144,17)" fg:x="1196" fg:w="1"/><text x="85.4959%" y="639.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="85.2459%" y="613" width="0.0713%" height="15" fill="rgb(245,27,50)" fg:x="1196" fg:w="1"/><text x="85.4959%" y="623.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="85.2459%" y="597" width="0.0713%" height="15" fill="rgb(251,51,7)" fg:x="1196" fg:w="1"/><text x="85.4959%" y="607.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.07%)</title><rect x="85.2459%" y="581" width="0.0713%" height="15" fill="rgb(245,217,29)" fg:x="1196" fg:w="1"/><text x="85.4959%" y="591.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="85.2459%" y="565" width="0.0713%" height="15" fill="rgb(221,176,29)" fg:x="1196" fg:w="1"/><text x="85.4959%" y="575.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="85.2459%" y="549" width="0.0713%" height="15" fill="rgb(212,180,24)" fg:x="1196" fg:w="1"/><text x="85.4959%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="85.2459%" y="533" width="0.0713%" height="15" fill="rgb(254,24,2)" fg:x="1196" fg:w="1"/><text x="85.4959%" y="543.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="85.2459%" y="517" width="0.0713%" height="15" fill="rgb(230,100,2)" fg:x="1196" fg:w="1"/><text x="85.4959%" y="527.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="85.2459%" y="501" width="0.0713%" height="15" fill="rgb(219,142,25)" fg:x="1196" fg:w="1"/><text x="85.4959%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="85.2459%" y="485" width="0.0713%" height="15" fill="rgb(240,73,43)" fg:x="1196" fg:w="1"/><text x="85.4959%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="85.2459%" y="469" width="0.0713%" height="15" fill="rgb(214,114,15)" fg:x="1196" fg:w="1"/><text x="85.4959%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="85.2459%" y="453" width="0.0713%" height="15" fill="rgb(207,130,4)" fg:x="1196" fg:w="1"/><text x="85.4959%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="85.2459%" y="437" width="0.0713%" height="15" fill="rgb(221,25,40)" fg:x="1196" fg:w="1"/><text x="85.4959%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.07%)</title><rect x="85.2459%" y="421" width="0.0713%" height="15" fill="rgb(241,184,7)" fg:x="1196" fg:w="1"/><text x="85.4959%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="85.2459%" y="405" width="0.0713%" height="15" fill="rgb(235,159,4)" fg:x="1196" fg:w="1"/><text x="85.4959%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="85.2459%" y="389" width="0.0713%" height="15" fill="rgb(214,87,48)" fg:x="1196" fg:w="1"/><text x="85.4959%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.07%)</title><rect x="85.2459%" y="373" width="0.0713%" height="15" fill="rgb(246,198,24)" fg:x="1196" fg:w="1"/><text x="85.4959%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="85.2459%" y="357" width="0.0713%" height="15" fill="rgb(209,66,40)" fg:x="1196" fg:w="1"/><text x="85.4959%" y="367.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="85.2459%" y="341" width="0.0713%" height="15" fill="rgb(233,147,39)" fg:x="1196" fg:w="1"/><text x="85.4959%" y="351.50"></text></g><g><title>&lt;rand_distr::normal::Normal&lt;F&gt; as rand::distributions::distribution::Distribution&lt;F&gt;&gt;::sample (1 samples, 0.07%)</title><rect x="85.2459%" y="325" width="0.0713%" height="15" fill="rgb(231,145,52)" fg:x="1196" fg:w="1"/><text x="85.4959%" y="335.50"></text></g><g><title>rand::rng::Rng::sample (1 samples, 0.07%)</title><rect x="85.2459%" y="309" width="0.0713%" height="15" fill="rgb(206,20,26)" fg:x="1196" fg:w="1"/><text x="85.4959%" y="319.50"></text></g><g><title>rand_distr::utils::ziggurat (1 samples, 0.07%)</title><rect x="85.2459%" y="293" width="0.0713%" height="15" fill="rgb(238,220,4)" fg:x="1196" fg:w="1"/><text x="85.4959%" y="303.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.07%)</title><rect x="85.2459%" y="277" width="0.0713%" height="15" fill="rgb(252,195,42)" fg:x="1196" fg:w="1"/><text x="85.4959%" y="287.50"></text></g><g><title>&lt;rand_distr::normal::StandardNormal as rand::distributions::distribution::Distribution&lt;f64&gt;&gt;::sample::zero_case (1 samples, 0.07%)</title><rect x="85.2459%" y="261" width="0.0713%" height="15" fill="rgb(209,10,6)" fg:x="1196" fg:w="1"/><text x="85.4959%" y="271.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::ln (1 samples, 0.07%)</title><rect x="85.2459%" y="245" width="0.0713%" height="15" fill="rgb(229,3,52)" fg:x="1196" fg:w="1"/><text x="85.4959%" y="255.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::log_wrapper (1 samples, 0.07%)</title><rect x="85.2459%" y="229" width="0.0713%" height="15" fill="rgb(253,49,37)" fg:x="1196" fg:w="1"/><text x="85.4959%" y="239.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::ln::{{closure}} (1 samples, 0.07%)</title><rect x="85.2459%" y="213" width="0.0713%" height="15" fill="rgb(240,103,49)" fg:x="1196" fg:w="1"/><text x="85.4959%" y="223.50"></text></g><g><title>log (1 samples, 0.07%)</title><rect x="85.2459%" y="197" width="0.0713%" height="15" fill="rgb(250,182,30)" fg:x="1196" fg:w="1"/><text x="85.4959%" y="207.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (10 samples, 0.71%)</title><rect x="84.6757%" y="1621" width="0.7128%" height="15" fill="rgb(248,8,30)" fg:x="1188" fg:w="10"/><text x="84.9257%" y="1631.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (9 samples, 0.64%)</title><rect x="84.7470%" y="1605" width="0.6415%" height="15" fill="rgb(237,120,30)" fg:x="1189" fg:w="9"/><text x="84.9970%" y="1615.50"></text></g><g><title>std::panic::catch_unwind (9 samples, 0.64%)</title><rect x="84.7470%" y="1589" width="0.6415%" height="15" fill="rgb(221,146,34)" fg:x="1189" fg:w="9"/><text x="84.9970%" y="1599.50"></text></g><g><title>std::panicking::try (9 samples, 0.64%)</title><rect x="84.7470%" y="1573" width="0.6415%" height="15" fill="rgb(242,55,13)" fg:x="1189" fg:w="9"/><text x="84.9970%" y="1583.50"></text></g><g><title>std::panicking::try::do_call (9 samples, 0.64%)</title><rect x="84.7470%" y="1557" width="0.6415%" height="15" fill="rgb(242,112,31)" fg:x="1189" fg:w="9"/><text x="84.9970%" y="1567.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (9 samples, 0.64%)</title><rect x="84.7470%" y="1541" width="0.6415%" height="15" fill="rgb(249,192,27)" fg:x="1189" fg:w="9"/><text x="84.9970%" y="1551.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (9 samples, 0.64%)</title><rect x="84.7470%" y="1525" width="0.6415%" height="15" fill="rgb(208,204,44)" fg:x="1189" fg:w="9"/><text x="84.9970%" y="1535.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (9 samples, 0.64%)</title><rect x="84.7470%" y="1509" width="0.6415%" height="15" fill="rgb(208,93,54)" fg:x="1189" fg:w="9"/><text x="84.9970%" y="1519.50"></text></g><g><title>rayon_core::join::join_context (9 samples, 0.64%)</title><rect x="84.7470%" y="1493" width="0.6415%" height="15" fill="rgb(242,1,31)" fg:x="1189" fg:w="9"/><text x="84.9970%" y="1503.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (9 samples, 0.64%)</title><rect x="84.7470%" y="1477" width="0.6415%" height="15" fill="rgb(241,83,25)" fg:x="1189" fg:w="9"/><text x="84.9970%" y="1487.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.29%)</title><rect x="85.1033%" y="1461" width="0.2851%" height="15" fill="rgb(205,169,50)" fg:x="1194" fg:w="4"/><text x="85.3533%" y="1471.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.29%)</title><rect x="85.1033%" y="1445" width="0.2851%" height="15" fill="rgb(239,186,37)" fg:x="1194" fg:w="4"/><text x="85.3533%" y="1455.50"></text></g><g><title>std::panicking::try (4 samples, 0.29%)</title><rect x="85.1033%" y="1429" width="0.2851%" height="15" fill="rgb(205,221,10)" fg:x="1194" fg:w="4"/><text x="85.3533%" y="1439.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.29%)</title><rect x="85.1033%" y="1413" width="0.2851%" height="15" fill="rgb(218,196,15)" fg:x="1194" fg:w="4"/><text x="85.3533%" y="1423.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.29%)</title><rect x="85.1033%" y="1397" width="0.2851%" height="15" fill="rgb(218,196,35)" fg:x="1194" fg:w="4"/><text x="85.3533%" y="1407.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (4 samples, 0.29%)</title><rect x="85.1033%" y="1381" width="0.2851%" height="15" fill="rgb(233,63,24)" fg:x="1194" fg:w="4"/><text x="85.3533%" y="1391.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.29%)</title><rect x="85.1033%" y="1365" width="0.2851%" height="15" fill="rgb(225,8,4)" fg:x="1194" fg:w="4"/><text x="85.3533%" y="1375.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.29%)</title><rect x="85.1033%" y="1349" width="0.2851%" height="15" fill="rgb(234,105,35)" fg:x="1194" fg:w="4"/><text x="85.3533%" y="1359.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.29%)</title><rect x="85.1033%" y="1333" width="0.2851%" height="15" fill="rgb(236,21,32)" fg:x="1194" fg:w="4"/><text x="85.3533%" y="1343.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (4 samples, 0.29%)</title><rect x="85.1033%" y="1317" width="0.2851%" height="15" fill="rgb(228,109,6)" fg:x="1194" fg:w="4"/><text x="85.3533%" y="1327.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (4 samples, 0.29%)</title><rect x="85.1033%" y="1301" width="0.2851%" height="15" fill="rgb(229,215,31)" fg:x="1194" fg:w="4"/><text x="85.3533%" y="1311.50"></text></g><g><title>rayon_core::job::JobRef::execute (4 samples, 0.29%)</title><rect x="85.1033%" y="1285" width="0.2851%" height="15" fill="rgb(221,52,54)" fg:x="1194" fg:w="4"/><text x="85.3533%" y="1295.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.29%)</title><rect x="85.1033%" y="1269" width="0.2851%" height="15" fill="rgb(252,129,43)" fg:x="1194" fg:w="4"/><text x="85.3533%" y="1279.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.29%)</title><rect x="85.1033%" y="1253" width="0.2851%" height="15" fill="rgb(248,183,27)" fg:x="1194" fg:w="4"/><text x="85.3533%" y="1263.50"></text></g><g><title>std::panicking::try (4 samples, 0.29%)</title><rect x="85.1033%" y="1237" width="0.2851%" height="15" fill="rgb(250,0,22)" fg:x="1194" fg:w="4"/><text x="85.3533%" y="1247.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.29%)</title><rect x="85.1033%" y="1221" width="0.2851%" height="15" fill="rgb(213,166,10)" fg:x="1194" fg:w="4"/><text x="85.3533%" y="1231.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.29%)</title><rect x="85.1033%" y="1205" width="0.2851%" height="15" fill="rgb(207,163,36)" fg:x="1194" fg:w="4"/><text x="85.3533%" y="1215.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (4 samples, 0.29%)</title><rect x="85.1033%" y="1189" width="0.2851%" height="15" fill="rgb(208,122,22)" fg:x="1194" fg:w="4"/><text x="85.3533%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 0.29%)</title><rect x="85.1033%" y="1173" width="0.2851%" height="15" fill="rgb(207,104,49)" fg:x="1194" fg:w="4"/><text x="85.3533%" y="1183.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.29%)</title><rect x="85.1033%" y="1157" width="0.2851%" height="15" fill="rgb(248,211,50)" fg:x="1194" fg:w="4"/><text x="85.3533%" y="1167.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.29%)</title><rect x="85.1033%" y="1141" width="0.2851%" height="15" fill="rgb(217,13,45)" fg:x="1194" fg:w="4"/><text x="85.3533%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.29%)</title><rect x="85.1033%" y="1125" width="0.2851%" height="15" fill="rgb(211,216,49)" fg:x="1194" fg:w="4"/><text x="85.3533%" y="1135.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (3 samples, 0.21%)</title><rect x="85.1746%" y="1109" width="0.2138%" height="15" fill="rgb(221,58,53)" fg:x="1195" fg:w="3"/><text x="85.4246%" y="1119.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.21%)</title><rect x="85.1746%" y="1093" width="0.2138%" height="15" fill="rgb(220,112,41)" fg:x="1195" fg:w="3"/><text x="85.4246%" y="1103.50"></text></g><g><title>std::panicking::try (3 samples, 0.21%)</title><rect x="85.1746%" y="1077" width="0.2138%" height="15" fill="rgb(236,38,28)" fg:x="1195" fg:w="3"/><text x="85.4246%" y="1087.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.21%)</title><rect x="85.1746%" y="1061" width="0.2138%" height="15" fill="rgb(227,195,22)" fg:x="1195" fg:w="3"/><text x="85.4246%" y="1071.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.21%)</title><rect x="85.1746%" y="1045" width="0.2138%" height="15" fill="rgb(214,55,33)" fg:x="1195" fg:w="3"/><text x="85.4246%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (3 samples, 0.21%)</title><rect x="85.1746%" y="1029" width="0.2138%" height="15" fill="rgb(248,80,13)" fg:x="1195" fg:w="3"/><text x="85.4246%" y="1039.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (3 samples, 0.21%)</title><rect x="85.1746%" y="1013" width="0.2138%" height="15" fill="rgb(238,52,6)" fg:x="1195" fg:w="3"/><text x="85.4246%" y="1023.50"></text></g><g><title>rayon_core::join::join_context (3 samples, 0.21%)</title><rect x="85.1746%" y="997" width="0.2138%" height="15" fill="rgb(224,198,47)" fg:x="1195" fg:w="3"/><text x="85.4246%" y="1007.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3 samples, 0.21%)</title><rect x="85.1746%" y="981" width="0.2138%" height="15" fill="rgb(233,171,20)" fg:x="1195" fg:w="3"/><text x="85.4246%" y="991.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="85.3172%" y="965" width="0.0713%" height="15" fill="rgb(241,30,25)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="975.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="85.3172%" y="949" width="0.0713%" height="15" fill="rgb(207,171,38)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="959.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="85.3172%" y="933" width="0.0713%" height="15" fill="rgb(234,70,1)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="943.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="85.3172%" y="917" width="0.0713%" height="15" fill="rgb(232,178,18)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="927.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="85.3172%" y="901" width="0.0713%" height="15" fill="rgb(241,78,40)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="911.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="85.3172%" y="885" width="0.0713%" height="15" fill="rgb(222,35,25)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="895.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="85.3172%" y="869" width="0.0713%" height="15" fill="rgb(207,92,16)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="879.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="85.3172%" y="853" width="0.0713%" height="15" fill="rgb(216,59,51)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="863.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="85.3172%" y="837" width="0.0713%" height="15" fill="rgb(213,80,28)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="847.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="85.3172%" y="821" width="0.0713%" height="15" fill="rgb(220,93,7)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="831.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="85.3172%" y="805" width="0.0713%" height="15" fill="rgb(225,24,44)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="815.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="85.3172%" y="789" width="0.0713%" height="15" fill="rgb(243,74,40)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="799.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="85.3172%" y="773" width="0.0713%" height="15" fill="rgb(228,39,7)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="783.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="85.3172%" y="757" width="0.0713%" height="15" fill="rgb(227,79,8)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="767.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="85.3172%" y="741" width="0.0713%" height="15" fill="rgb(236,58,11)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="85.3172%" y="725" width="0.0713%" height="15" fill="rgb(249,63,35)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="735.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="85.3172%" y="709" width="0.0713%" height="15" fill="rgb(252,114,16)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="719.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="85.3172%" y="693" width="0.0713%" height="15" fill="rgb(254,151,24)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="703.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="85.3172%" y="677" width="0.0713%" height="15" fill="rgb(253,54,39)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="687.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="85.3172%" y="661" width="0.0713%" height="15" fill="rgb(243,25,45)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="671.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="85.3172%" y="645" width="0.0713%" height="15" fill="rgb(234,134,9)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="655.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="85.3172%" y="629" width="0.0713%" height="15" fill="rgb(227,166,31)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="639.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="85.3172%" y="613" width="0.0713%" height="15" fill="rgb(245,143,41)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="623.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="85.3172%" y="597" width="0.0713%" height="15" fill="rgb(238,181,32)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="607.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="85.3172%" y="581" width="0.0713%" height="15" fill="rgb(224,113,18)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="591.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="85.3172%" y="565" width="0.0713%" height="15" fill="rgb(240,229,28)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="575.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="85.3172%" y="549" width="0.0713%" height="15" fill="rgb(250,185,3)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="559.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="85.3172%" y="533" width="0.0713%" height="15" fill="rgb(212,59,25)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="543.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="85.3172%" y="517" width="0.0713%" height="15" fill="rgb(221,87,20)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="527.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.07%)</title><rect x="85.3172%" y="501" width="0.0713%" height="15" fill="rgb(213,74,28)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="511.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="85.3172%" y="485" width="0.0713%" height="15" fill="rgb(224,132,34)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="495.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="85.3172%" y="469" width="0.0713%" height="15" fill="rgb(222,101,24)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="85.3172%" y="453" width="0.0713%" height="15" fill="rgb(254,142,4)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="463.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="85.3172%" y="437" width="0.0713%" height="15" fill="rgb(230,229,49)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="447.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="85.3172%" y="421" width="0.0713%" height="15" fill="rgb(238,70,47)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="85.3172%" y="405" width="0.0713%" height="15" fill="rgb(231,160,17)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="85.3172%" y="389" width="0.0713%" height="15" fill="rgb(218,68,53)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="85.3172%" y="373" width="0.0713%" height="15" fill="rgb(236,111,10)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="85.3172%" y="357" width="0.0713%" height="15" fill="rgb(224,34,41)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.07%)</title><rect x="85.3172%" y="341" width="0.0713%" height="15" fill="rgb(241,118,19)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="85.3172%" y="325" width="0.0713%" height="15" fill="rgb(238,129,25)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="85.3172%" y="309" width="0.0713%" height="15" fill="rgb(238,22,31)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.07%)</title><rect x="85.3172%" y="293" width="0.0713%" height="15" fill="rgb(222,174,48)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="85.3172%" y="277" width="0.0713%" height="15" fill="rgb(206,152,40)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="287.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="85.3172%" y="261" width="0.0713%" height="15" fill="rgb(218,99,54)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="271.50"></text></g><g><title>&lt;rand_distr::normal::Normal&lt;F&gt; as rand::distributions::distribution::Distribution&lt;F&gt;&gt;::sample (1 samples, 0.07%)</title><rect x="85.3172%" y="245" width="0.0713%" height="15" fill="rgb(220,174,26)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="255.50"></text></g><g><title>rand::rng::Rng::sample (1 samples, 0.07%)</title><rect x="85.3172%" y="229" width="0.0713%" height="15" fill="rgb(245,116,9)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="239.50"></text></g><g><title>rand_distr::utils::ziggurat (1 samples, 0.07%)</title><rect x="85.3172%" y="213" width="0.0713%" height="15" fill="rgb(209,72,35)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="223.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.07%)</title><rect x="85.3172%" y="197" width="0.0713%" height="15" fill="rgb(226,126,21)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="207.50"></text></g><g><title>&lt;rand_distr::normal::StandardNormal as rand::distributions::distribution::Distribution&lt;f64&gt;&gt;::sample::pdf (1 samples, 0.07%)</title><rect x="85.3172%" y="181" width="0.0713%" height="15" fill="rgb(227,192,1)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="191.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (1 samples, 0.07%)</title><rect x="85.3172%" y="165" width="0.0713%" height="15" fill="rgb(237,180,29)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="175.50"></text></g><g><title>exp (1 samples, 0.07%)</title><rect x="85.3172%" y="149" width="0.0713%" height="15" fill="rgb(230,197,35)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="159.50"></text></g><g><title>[libm-2.33.so] (1 samples, 0.07%)</title><rect x="85.3172%" y="133" width="0.0713%" height="15" fill="rgb(246,193,31)" fg:x="1197" fg:w="1"/><text x="85.5672%" y="143.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="85.3885%" y="677" width="0.0713%" height="15" fill="rgb(241,36,4)" fg:x="1198" fg:w="1"/><text x="85.6385%" y="687.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="85.3885%" y="661" width="0.0713%" height="15" fill="rgb(241,130,17)" fg:x="1198" fg:w="1"/><text x="85.6385%" y="671.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.07%)</title><rect x="85.3885%" y="645" width="0.0713%" height="15" fill="rgb(206,137,32)" fg:x="1198" fg:w="1"/><text x="85.6385%" y="655.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="85.3885%" y="629" width="0.0713%" height="15" fill="rgb(237,228,51)" fg:x="1198" fg:w="1"/><text x="85.6385%" y="639.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="85.3885%" y="613" width="0.0713%" height="15" fill="rgb(243,6,42)" fg:x="1198" fg:w="1"/><text x="85.6385%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="85.3885%" y="597" width="0.0713%" height="15" fill="rgb(251,74,28)" fg:x="1198" fg:w="1"/><text x="85.6385%" y="607.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="85.3885%" y="581" width="0.0713%" height="15" fill="rgb(218,20,49)" fg:x="1198" fg:w="1"/><text x="85.6385%" y="591.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="85.3885%" y="565" width="0.0713%" height="15" fill="rgb(238,28,14)" fg:x="1198" fg:w="1"/><text x="85.6385%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="85.3885%" y="549" width="0.0713%" height="15" fill="rgb(229,40,46)" fg:x="1198" fg:w="1"/><text x="85.6385%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="85.3885%" y="533" width="0.0713%" height="15" fill="rgb(244,195,20)" fg:x="1198" fg:w="1"/><text x="85.6385%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="85.3885%" y="517" width="0.0713%" height="15" fill="rgb(253,56,35)" fg:x="1198" fg:w="1"/><text x="85.6385%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="85.3885%" y="501" width="0.0713%" height="15" fill="rgb(210,149,44)" fg:x="1198" fg:w="1"/><text x="85.6385%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.07%)</title><rect x="85.3885%" y="485" width="0.0713%" height="15" fill="rgb(240,135,12)" fg:x="1198" fg:w="1"/><text x="85.6385%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="85.3885%" y="469" width="0.0713%" height="15" fill="rgb(251,24,50)" fg:x="1198" fg:w="1"/><text x="85.6385%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="85.3885%" y="453" width="0.0713%" height="15" fill="rgb(243,200,47)" fg:x="1198" fg:w="1"/><text x="85.6385%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.07%)</title><rect x="85.3885%" y="437" width="0.0713%" height="15" fill="rgb(224,166,26)" fg:x="1198" fg:w="1"/><text x="85.6385%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="85.3885%" y="421" width="0.0713%" height="15" fill="rgb(233,0,47)" fg:x="1198" fg:w="1"/><text x="85.6385%" y="431.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="85.3885%" y="405" width="0.0713%" height="15" fill="rgb(253,80,5)" fg:x="1198" fg:w="1"/><text x="85.6385%" y="415.50"></text></g><g><title>&lt;rand_distr::normal::Normal&lt;F&gt; as rand::distributions::distribution::Distribution&lt;F&gt;&gt;::sample (1 samples, 0.07%)</title><rect x="85.3885%" y="389" width="0.0713%" height="15" fill="rgb(214,133,25)" fg:x="1198" fg:w="1"/><text x="85.6385%" y="399.50"></text></g><g><title>rand::rng::Rng::sample (1 samples, 0.07%)</title><rect x="85.3885%" y="373" width="0.0713%" height="15" fill="rgb(209,27,14)" fg:x="1198" fg:w="1"/><text x="85.6385%" y="383.50"></text></g><g><title>rand_distr::utils::ziggurat (1 samples, 0.07%)</title><rect x="85.3885%" y="357" width="0.0713%" height="15" fill="rgb(219,102,51)" fg:x="1198" fg:w="1"/><text x="85.6385%" y="367.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.07%)</title><rect x="85.3885%" y="341" width="0.0713%" height="15" fill="rgb(237,18,16)" fg:x="1198" fg:w="1"/><text x="85.6385%" y="351.50"></text></g><g><title>&lt;rand_distr::normal::StandardNormal as rand::distributions::distribution::Distribution&lt;f64&gt;&gt;::sample::pdf (1 samples, 0.07%)</title><rect x="85.3885%" y="325" width="0.0713%" height="15" fill="rgb(241,85,17)" fg:x="1198" fg:w="1"/><text x="85.6385%" y="335.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (1 samples, 0.07%)</title><rect x="85.3885%" y="309" width="0.0713%" height="15" fill="rgb(236,90,42)" fg:x="1198" fg:w="1"/><text x="85.6385%" y="319.50"></text></g><g><title>exp (1 samples, 0.07%)</title><rect x="85.3885%" y="293" width="0.0713%" height="15" fill="rgb(249,57,21)" fg:x="1198" fg:w="1"/><text x="85.6385%" y="303.50"></text></g><g><title>[libm-2.33.so] (1 samples, 0.07%)</title><rect x="85.3885%" y="277" width="0.0713%" height="15" fill="rgb(243,12,36)" fg:x="1198" fg:w="1"/><text x="85.6385%" y="287.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (2 samples, 0.14%)</title><rect x="85.3885%" y="885" width="0.1426%" height="15" fill="rgb(253,128,47)" fg:x="1198" fg:w="2"/><text x="85.6385%" y="895.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (2 samples, 0.14%)</title><rect x="85.3885%" y="869" width="0.1426%" height="15" fill="rgb(207,33,20)" fg:x="1198" fg:w="2"/><text x="85.6385%" y="879.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 0.14%)</title><rect x="85.3885%" y="853" width="0.1426%" height="15" fill="rgb(233,215,35)" fg:x="1198" fg:w="2"/><text x="85.6385%" y="863.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2 samples, 0.14%)</title><rect x="85.3885%" y="837" width="0.1426%" height="15" fill="rgb(249,188,52)" fg:x="1198" fg:w="2"/><text x="85.6385%" y="847.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (2 samples, 0.14%)</title><rect x="85.3885%" y="821" width="0.1426%" height="15" fill="rgb(225,12,32)" fg:x="1198" fg:w="2"/><text x="85.6385%" y="831.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.14%)</title><rect x="85.3885%" y="805" width="0.1426%" height="15" fill="rgb(247,98,14)" fg:x="1198" fg:w="2"/><text x="85.6385%" y="815.50"></text></g><g><title>std::panicking::try (2 samples, 0.14%)</title><rect x="85.3885%" y="789" width="0.1426%" height="15" fill="rgb(247,219,48)" fg:x="1198" fg:w="2"/><text x="85.6385%" y="799.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.14%)</title><rect x="85.3885%" y="773" width="0.1426%" height="15" fill="rgb(253,60,48)" fg:x="1198" fg:w="2"/><text x="85.6385%" y="783.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.14%)</title><rect x="85.3885%" y="757" width="0.1426%" height="15" fill="rgb(245,15,52)" fg:x="1198" fg:w="2"/><text x="85.6385%" y="767.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (2 samples, 0.14%)</title><rect x="85.3885%" y="741" width="0.1426%" height="15" fill="rgb(220,133,28)" fg:x="1198" fg:w="2"/><text x="85.6385%" y="751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (2 samples, 0.14%)</title><rect x="85.3885%" y="725" width="0.1426%" height="15" fill="rgb(217,180,4)" fg:x="1198" fg:w="2"/><text x="85.6385%" y="735.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 0.14%)</title><rect x="85.3885%" y="709" width="0.1426%" height="15" fill="rgb(251,24,1)" fg:x="1198" fg:w="2"/><text x="85.6385%" y="719.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2 samples, 0.14%)</title><rect x="85.3885%" y="693" width="0.1426%" height="15" fill="rgb(212,185,49)" fg:x="1198" fg:w="2"/><text x="85.6385%" y="703.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="85.4597%" y="677" width="0.0713%" height="15" fill="rgb(215,175,22)" fg:x="1199" fg:w="1"/><text x="85.7097%" y="687.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="85.4597%" y="661" width="0.0713%" height="15" fill="rgb(250,205,14)" fg:x="1199" fg:w="1"/><text x="85.7097%" y="671.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="85.4597%" y="645" width="0.0713%" height="15" fill="rgb(225,211,22)" fg:x="1199" fg:w="1"/><text x="85.7097%" y="655.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="85.4597%" y="629" width="0.0713%" height="15" fill="rgb(251,179,42)" fg:x="1199" fg:w="1"/><text x="85.7097%" y="639.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="85.4597%" y="613" width="0.0713%" height="15" fill="rgb(208,216,51)" fg:x="1199" fg:w="1"/><text x="85.7097%" y="623.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="85.4597%" y="597" width="0.0713%" height="15" fill="rgb(235,36,11)" fg:x="1199" fg:w="1"/><text x="85.7097%" y="607.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="85.4597%" y="581" width="0.0713%" height="15" fill="rgb(213,189,28)" fg:x="1199" fg:w="1"/><text x="85.7097%" y="591.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.07%)</title><rect x="85.4597%" y="565" width="0.0713%" height="15" fill="rgb(227,203,42)" fg:x="1199" fg:w="1"/><text x="85.7097%" y="575.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="85.4597%" y="549" width="0.0713%" height="15" fill="rgb(244,72,36)" fg:x="1199" fg:w="1"/><text x="85.7097%" y="559.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="85.4597%" y="533" width="0.0713%" height="15" fill="rgb(213,53,17)" fg:x="1199" fg:w="1"/><text x="85.7097%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="85.4597%" y="517" width="0.0713%" height="15" fill="rgb(207,167,3)" fg:x="1199" fg:w="1"/><text x="85.7097%" y="527.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="85.4597%" y="501" width="0.0713%" height="15" fill="rgb(216,98,30)" fg:x="1199" fg:w="1"/><text x="85.7097%" y="511.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="85.4597%" y="485" width="0.0713%" height="15" fill="rgb(236,123,15)" fg:x="1199" fg:w="1"/><text x="85.7097%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="85.4597%" y="469" width="0.0713%" height="15" fill="rgb(248,81,50)" fg:x="1199" fg:w="1"/><text x="85.7097%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="85.4597%" y="453" width="0.0713%" height="15" fill="rgb(214,120,4)" fg:x="1199" fg:w="1"/><text x="85.7097%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="85.4597%" y="437" width="0.0713%" height="15" fill="rgb(208,179,34)" fg:x="1199" fg:w="1"/><text x="85.7097%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="85.4597%" y="421" width="0.0713%" height="15" fill="rgb(227,140,7)" fg:x="1199" fg:w="1"/><text x="85.7097%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.07%)</title><rect x="85.4597%" y="405" width="0.0713%" height="15" fill="rgb(214,22,6)" fg:x="1199" fg:w="1"/><text x="85.7097%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="85.4597%" y="389" width="0.0713%" height="15" fill="rgb(207,137,27)" fg:x="1199" fg:w="1"/><text x="85.7097%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="85.4597%" y="373" width="0.0713%" height="15" fill="rgb(210,8,46)" fg:x="1199" fg:w="1"/><text x="85.7097%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.07%)</title><rect x="85.4597%" y="357" width="0.0713%" height="15" fill="rgb(240,16,54)" fg:x="1199" fg:w="1"/><text x="85.7097%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="85.4597%" y="341" width="0.0713%" height="15" fill="rgb(211,209,29)" fg:x="1199" fg:w="1"/><text x="85.7097%" y="351.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="85.4597%" y="325" width="0.0713%" height="15" fill="rgb(226,228,24)" fg:x="1199" fg:w="1"/><text x="85.7097%" y="335.50"></text></g><g><title>&lt;rand_distr::normal::Normal&lt;F&gt; as rand::distributions::distribution::Distribution&lt;F&gt;&gt;::sample (1 samples, 0.07%)</title><rect x="85.4597%" y="309" width="0.0713%" height="15" fill="rgb(222,84,9)" fg:x="1199" fg:w="1"/><text x="85.7097%" y="319.50"></text></g><g><title>rand::rng::Rng::sample (1 samples, 0.07%)</title><rect x="85.4597%" y="293" width="0.0713%" height="15" fill="rgb(234,203,30)" fg:x="1199" fg:w="1"/><text x="85.7097%" y="303.50"></text></g><g><title>rand_distr::utils::ziggurat (1 samples, 0.07%)</title><rect x="85.4597%" y="277" width="0.0713%" height="15" fill="rgb(238,109,14)" fg:x="1199" fg:w="1"/><text x="85.7097%" y="287.50"></text></g><g><title>&lt;&amp;mut R as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="85.4597%" y="261" width="0.0713%" height="15" fill="rgb(233,206,34)" fg:x="1199" fg:w="1"/><text x="85.7097%" y="271.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="85.4597%" y="245" width="0.0713%" height="15" fill="rgb(220,167,47)" fg:x="1199" fg:w="1"/><text x="85.7097%" y="255.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="85.4597%" y="229" width="0.0713%" height="15" fill="rgb(238,105,10)" fg:x="1199" fg:w="1"/><text x="85.7097%" y="239.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="85.4597%" y="213" width="0.0713%" height="15" fill="rgb(213,227,17)" fg:x="1199" fg:w="1"/><text x="85.7097%" y="223.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (1 samples, 0.07%)</title><rect x="85.4597%" y="197" width="0.0713%" height="15" fill="rgb(217,132,38)" fg:x="1199" fg:w="1"/><text x="85.7097%" y="207.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.07%)</title><rect x="85.4597%" y="181" width="0.0713%" height="15" fill="rgb(242,146,4)" fg:x="1199" fg:w="1"/><text x="85.7097%" y="191.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.07%)</title><rect x="85.4597%" y="165" width="0.0713%" height="15" fill="rgb(212,61,9)" fg:x="1199" fg:w="1"/><text x="85.7097%" y="175.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (1 samples, 0.07%)</title><rect x="85.4597%" y="149" width="0.0713%" height="15" fill="rgb(247,126,22)" fg:x="1199" fg:w="1"/><text x="85.7097%" y="159.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (1 samples, 0.07%)</title><rect x="85.4597%" y="133" width="0.0713%" height="15" fill="rgb(220,196,2)" fg:x="1199" fg:w="1"/><text x="85.7097%" y="143.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (1 samples, 0.07%)</title><rect x="85.4597%" y="117" width="0.0713%" height="15" fill="rgb(208,46,4)" fg:x="1199" fg:w="1"/><text x="85.7097%" y="127.50"></text></g><g><title>rand_chacha::guts::round (1 samples, 0.07%)</title><rect x="85.4597%" y="101" width="0.0713%" height="15" fill="rgb(252,104,46)" fg:x="1199" fg:w="1"/><text x="85.7097%" y="111.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::arith::AddAssign&gt;::add_assign (1 samples, 0.07%)</title><rect x="85.4597%" y="85" width="0.0713%" height="15" fill="rgb(237,152,48)" fg:x="1199" fg:w="1"/><text x="85.7097%" y="95.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::AddAssign&gt;::add_assign (1 samples, 0.07%)</title><rect x="85.4597%" y="69" width="0.0713%" height="15" fill="rgb(221,59,37)" fg:x="1199" fg:w="1"/><text x="85.7097%" y="79.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (1 samples, 0.07%)</title><rect x="85.4597%" y="53" width="0.0713%" height="15" fill="rgb(209,202,51)" fg:x="1199" fg:w="1"/><text x="85.7097%" y="63.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.07%)</title><rect x="85.4597%" y="37" width="0.0713%" height="15" fill="rgb(228,81,30)" fg:x="1199" fg:w="1"/><text x="85.7097%" y="47.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (3 samples, 0.21%)</title><rect x="85.3885%" y="1589" width="0.2138%" height="15" fill="rgb(227,42,39)" fg:x="1198" fg:w="3"/><text x="85.6385%" y="1599.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (3 samples, 0.21%)</title><rect x="85.3885%" y="1573" width="0.2138%" height="15" fill="rgb(221,26,2)" fg:x="1198" fg:w="3"/><text x="85.6385%" y="1583.50"></text></g><g><title>rayon_core::job::JobRef::execute (3 samples, 0.21%)</title><rect x="85.3885%" y="1557" width="0.2138%" height="15" fill="rgb(254,61,31)" fg:x="1198" fg:w="3"/><text x="85.6385%" y="1567.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (3 samples, 0.21%)</title><rect x="85.3885%" y="1541" width="0.2138%" height="15" fill="rgb(222,173,38)" fg:x="1198" fg:w="3"/><text x="85.6385%" y="1551.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.21%)</title><rect x="85.3885%" y="1525" width="0.2138%" height="15" fill="rgb(218,50,12)" fg:x="1198" fg:w="3"/><text x="85.6385%" y="1535.50"></text></g><g><title>std::panicking::try (3 samples, 0.21%)</title><rect x="85.3885%" y="1509" width="0.2138%" height="15" fill="rgb(223,88,40)" fg:x="1198" fg:w="3"/><text x="85.6385%" y="1519.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.21%)</title><rect x="85.3885%" y="1493" width="0.2138%" height="15" fill="rgb(237,54,19)" fg:x="1198" fg:w="3"/><text x="85.6385%" y="1503.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.21%)</title><rect x="85.3885%" y="1477" width="0.2138%" height="15" fill="rgb(251,129,25)" fg:x="1198" fg:w="3"/><text x="85.6385%" y="1487.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (3 samples, 0.21%)</title><rect x="85.3885%" y="1461" width="0.2138%" height="15" fill="rgb(238,97,19)" fg:x="1198" fg:w="3"/><text x="85.6385%" y="1471.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (3 samples, 0.21%)</title><rect x="85.3885%" y="1445" width="0.2138%" height="15" fill="rgb(240,169,18)" fg:x="1198" fg:w="3"/><text x="85.6385%" y="1455.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (3 samples, 0.21%)</title><rect x="85.3885%" y="1429" width="0.2138%" height="15" fill="rgb(230,187,49)" fg:x="1198" fg:w="3"/><text x="85.6385%" y="1439.50"></text></g><g><title>rayon_core::join::join_context (3 samples, 0.21%)</title><rect x="85.3885%" y="1413" width="0.2138%" height="15" fill="rgb(209,44,26)" fg:x="1198" fg:w="3"/><text x="85.6385%" y="1423.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3 samples, 0.21%)</title><rect x="85.3885%" y="1397" width="0.2138%" height="15" fill="rgb(244,0,6)" fg:x="1198" fg:w="3"/><text x="85.6385%" y="1407.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (3 samples, 0.21%)</title><rect x="85.3885%" y="1381" width="0.2138%" height="15" fill="rgb(248,18,21)" fg:x="1198" fg:w="3"/><text x="85.6385%" y="1391.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (3 samples, 0.21%)</title><rect x="85.3885%" y="1365" width="0.2138%" height="15" fill="rgb(245,180,19)" fg:x="1198" fg:w="3"/><text x="85.6385%" y="1375.50"></text></g><g><title>rayon_core::job::JobRef::execute (3 samples, 0.21%)</title><rect x="85.3885%" y="1349" width="0.2138%" height="15" fill="rgb(252,118,36)" fg:x="1198" fg:w="3"/><text x="85.6385%" y="1359.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (3 samples, 0.21%)</title><rect x="85.3885%" y="1333" width="0.2138%" height="15" fill="rgb(210,224,19)" fg:x="1198" fg:w="3"/><text x="85.6385%" y="1343.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.21%)</title><rect x="85.3885%" y="1317" width="0.2138%" height="15" fill="rgb(218,30,24)" fg:x="1198" fg:w="3"/><text x="85.6385%" y="1327.50"></text></g><g><title>std::panicking::try (3 samples, 0.21%)</title><rect x="85.3885%" y="1301" width="0.2138%" height="15" fill="rgb(219,75,50)" fg:x="1198" fg:w="3"/><text x="85.6385%" y="1311.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.21%)</title><rect x="85.3885%" y="1285" width="0.2138%" height="15" fill="rgb(234,72,50)" fg:x="1198" fg:w="3"/><text x="85.6385%" y="1295.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.21%)</title><rect x="85.3885%" y="1269" width="0.2138%" height="15" fill="rgb(219,100,48)" fg:x="1198" fg:w="3"/><text x="85.6385%" y="1279.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (3 samples, 0.21%)</title><rect x="85.3885%" y="1253" width="0.2138%" height="15" fill="rgb(253,5,41)" fg:x="1198" fg:w="3"/><text x="85.6385%" y="1263.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (3 samples, 0.21%)</title><rect x="85.3885%" y="1237" width="0.2138%" height="15" fill="rgb(247,181,11)" fg:x="1198" fg:w="3"/><text x="85.6385%" y="1247.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (3 samples, 0.21%)</title><rect x="85.3885%" y="1221" width="0.2138%" height="15" fill="rgb(222,223,25)" fg:x="1198" fg:w="3"/><text x="85.6385%" y="1231.50"></text></g><g><title>rayon_core::join::join_context (3 samples, 0.21%)</title><rect x="85.3885%" y="1205" width="0.2138%" height="15" fill="rgb(214,198,28)" fg:x="1198" fg:w="3"/><text x="85.6385%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3 samples, 0.21%)</title><rect x="85.3885%" y="1189" width="0.2138%" height="15" fill="rgb(230,46,43)" fg:x="1198" fg:w="3"/><text x="85.6385%" y="1199.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (3 samples, 0.21%)</title><rect x="85.3885%" y="1173" width="0.2138%" height="15" fill="rgb(233,65,53)" fg:x="1198" fg:w="3"/><text x="85.6385%" y="1183.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.21%)</title><rect x="85.3885%" y="1157" width="0.2138%" height="15" fill="rgb(221,121,27)" fg:x="1198" fg:w="3"/><text x="85.6385%" y="1167.50"></text></g><g><title>std::panicking::try (3 samples, 0.21%)</title><rect x="85.3885%" y="1141" width="0.2138%" height="15" fill="rgb(247,70,47)" fg:x="1198" fg:w="3"/><text x="85.6385%" y="1151.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.21%)</title><rect x="85.3885%" y="1125" width="0.2138%" height="15" fill="rgb(228,85,35)" fg:x="1198" fg:w="3"/><text x="85.6385%" y="1135.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.21%)</title><rect x="85.3885%" y="1109" width="0.2138%" height="15" fill="rgb(209,50,18)" fg:x="1198" fg:w="3"/><text x="85.6385%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (3 samples, 0.21%)</title><rect x="85.3885%" y="1093" width="0.2138%" height="15" fill="rgb(250,19,35)" fg:x="1198" fg:w="3"/><text x="85.6385%" y="1103.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (3 samples, 0.21%)</title><rect x="85.3885%" y="1077" width="0.2138%" height="15" fill="rgb(253,107,29)" fg:x="1198" fg:w="3"/><text x="85.6385%" y="1087.50"></text></g><g><title>rayon_core::join::join_context (3 samples, 0.21%)</title><rect x="85.3885%" y="1061" width="0.2138%" height="15" fill="rgb(252,179,29)" fg:x="1198" fg:w="3"/><text x="85.6385%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3 samples, 0.21%)</title><rect x="85.3885%" y="1045" width="0.2138%" height="15" fill="rgb(238,194,6)" fg:x="1198" fg:w="3"/><text x="85.6385%" y="1055.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (3 samples, 0.21%)</title><rect x="85.3885%" y="1029" width="0.2138%" height="15" fill="rgb(238,164,29)" fg:x="1198" fg:w="3"/><text x="85.6385%" y="1039.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.21%)</title><rect x="85.3885%" y="1013" width="0.2138%" height="15" fill="rgb(224,25,9)" fg:x="1198" fg:w="3"/><text x="85.6385%" y="1023.50"></text></g><g><title>std::panicking::try (3 samples, 0.21%)</title><rect x="85.3885%" y="997" width="0.2138%" height="15" fill="rgb(244,153,23)" fg:x="1198" fg:w="3"/><text x="85.6385%" y="1007.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.21%)</title><rect x="85.3885%" y="981" width="0.2138%" height="15" fill="rgb(212,203,14)" fg:x="1198" fg:w="3"/><text x="85.6385%" y="991.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.21%)</title><rect x="85.3885%" y="965" width="0.2138%" height="15" fill="rgb(220,164,20)" fg:x="1198" fg:w="3"/><text x="85.6385%" y="975.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (3 samples, 0.21%)</title><rect x="85.3885%" y="949" width="0.2138%" height="15" fill="rgb(222,203,48)" fg:x="1198" fg:w="3"/><text x="85.6385%" y="959.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (3 samples, 0.21%)</title><rect x="85.3885%" y="933" width="0.2138%" height="15" fill="rgb(215,159,22)" fg:x="1198" fg:w="3"/><text x="85.6385%" y="943.50"></text></g><g><title>rayon_core::join::join_context (3 samples, 0.21%)</title><rect x="85.3885%" y="917" width="0.2138%" height="15" fill="rgb(216,183,47)" fg:x="1198" fg:w="3"/><text x="85.6385%" y="927.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3 samples, 0.21%)</title><rect x="85.3885%" y="901" width="0.2138%" height="15" fill="rgb(229,195,25)" fg:x="1198" fg:w="3"/><text x="85.6385%" y="911.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="85.5310%" y="885" width="0.0713%" height="15" fill="rgb(224,132,51)" fg:x="1200" fg:w="1"/><text x="85.7810%" y="895.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="85.5310%" y="869" width="0.0713%" height="15" fill="rgb(240,63,7)" fg:x="1200" fg:w="1"/><text x="85.7810%" y="879.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="85.5310%" y="853" width="0.0713%" height="15" fill="rgb(249,182,41)" fg:x="1200" fg:w="1"/><text x="85.7810%" y="863.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="85.5310%" y="837" width="0.0713%" height="15" fill="rgb(243,47,26)" fg:x="1200" fg:w="1"/><text x="85.7810%" y="847.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="85.5310%" y="821" width="0.0713%" height="15" fill="rgb(233,48,2)" fg:x="1200" fg:w="1"/><text x="85.7810%" y="831.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="85.5310%" y="805" width="0.0713%" height="15" fill="rgb(244,165,34)" fg:x="1200" fg:w="1"/><text x="85.7810%" y="815.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="85.5310%" y="789" width="0.0713%" height="15" fill="rgb(207,89,7)" fg:x="1200" fg:w="1"/><text x="85.7810%" y="799.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="85.5310%" y="773" width="0.0713%" height="15" fill="rgb(244,117,36)" fg:x="1200" fg:w="1"/><text x="85.7810%" y="783.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="85.5310%" y="757" width="0.0713%" height="15" fill="rgb(226,144,34)" fg:x="1200" fg:w="1"/><text x="85.7810%" y="767.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="85.5310%" y="741" width="0.0713%" height="15" fill="rgb(213,23,19)" fg:x="1200" fg:w="1"/><text x="85.7810%" y="751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="85.5310%" y="725" width="0.0713%" height="15" fill="rgb(217,75,12)" fg:x="1200" fg:w="1"/><text x="85.7810%" y="735.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="85.5310%" y="709" width="0.0713%" height="15" fill="rgb(224,159,17)" fg:x="1200" fg:w="1"/><text x="85.7810%" y="719.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="85.5310%" y="693" width="0.0713%" height="15" fill="rgb(217,118,1)" fg:x="1200" fg:w="1"/><text x="85.7810%" y="703.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="85.5310%" y="677" width="0.0713%" height="15" fill="rgb(232,180,48)" fg:x="1200" fg:w="1"/><text x="85.7810%" y="687.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="85.5310%" y="661" width="0.0713%" height="15" fill="rgb(230,27,33)" fg:x="1200" fg:w="1"/><text x="85.7810%" y="671.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="85.5310%" y="645" width="0.0713%" height="15" fill="rgb(205,31,21)" fg:x="1200" fg:w="1"/><text x="85.7810%" y="655.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="85.5310%" y="629" width="0.0713%" height="15" fill="rgb(253,59,4)" fg:x="1200" fg:w="1"/><text x="85.7810%" y="639.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="85.5310%" y="613" width="0.0713%" height="15" fill="rgb(224,201,9)" fg:x="1200" fg:w="1"/><text x="85.7810%" y="623.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="85.5310%" y="597" width="0.0713%" height="15" fill="rgb(229,206,30)" fg:x="1200" fg:w="1"/><text x="85.7810%" y="607.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="85.5310%" y="581" width="0.0713%" height="15" fill="rgb(212,67,47)" fg:x="1200" fg:w="1"/><text x="85.7810%" y="591.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.07%)</title><rect x="85.5310%" y="565" width="0.0713%" height="15" fill="rgb(211,96,50)" fg:x="1200" fg:w="1"/><text x="85.7810%" y="575.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="85.5310%" y="549" width="0.0713%" height="15" fill="rgb(252,114,18)" fg:x="1200" fg:w="1"/><text x="85.7810%" y="559.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="85.5310%" y="533" width="0.0713%" height="15" fill="rgb(223,58,37)" fg:x="1200" fg:w="1"/><text x="85.7810%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="85.5310%" y="517" width="0.0713%" height="15" fill="rgb(237,70,4)" fg:x="1200" fg:w="1"/><text x="85.7810%" y="527.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="85.5310%" y="501" width="0.0713%" height="15" fill="rgb(244,85,46)" fg:x="1200" fg:w="1"/><text x="85.7810%" y="511.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="85.5310%" y="485" width="0.0713%" height="15" fill="rgb(223,39,52)" fg:x="1200" fg:w="1"/><text x="85.7810%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="85.5310%" y="469" width="0.0713%" height="15" fill="rgb(218,200,14)" fg:x="1200" fg:w="1"/><text x="85.7810%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="85.5310%" y="453" width="0.0713%" height="15" fill="rgb(208,171,16)" fg:x="1200" fg:w="1"/><text x="85.7810%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="85.5310%" y="437" width="0.0713%" height="15" fill="rgb(234,200,18)" fg:x="1200" fg:w="1"/><text x="85.7810%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="85.5310%" y="421" width="0.0713%" height="15" fill="rgb(228,45,11)" fg:x="1200" fg:w="1"/><text x="85.7810%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.07%)</title><rect x="85.5310%" y="405" width="0.0713%" height="15" fill="rgb(237,182,11)" fg:x="1200" fg:w="1"/><text x="85.7810%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="85.5310%" y="389" width="0.0713%" height="15" fill="rgb(241,175,49)" fg:x="1200" fg:w="1"/><text x="85.7810%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="85.5310%" y="373" width="0.0713%" height="15" fill="rgb(247,38,35)" fg:x="1200" fg:w="1"/><text x="85.7810%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.07%)</title><rect x="85.5310%" y="357" width="0.0713%" height="15" fill="rgb(228,39,49)" fg:x="1200" fg:w="1"/><text x="85.7810%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="85.5310%" y="341" width="0.0713%" height="15" fill="rgb(226,101,26)" fg:x="1200" fg:w="1"/><text x="85.7810%" y="351.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="85.5310%" y="325" width="0.0713%" height="15" fill="rgb(206,141,19)" fg:x="1200" fg:w="1"/><text x="85.7810%" y="335.50"></text></g><g><title>&lt;rand_distr::normal::Normal&lt;F&gt; as rand::distributions::distribution::Distribution&lt;F&gt;&gt;::sample (1 samples, 0.07%)</title><rect x="85.5310%" y="309" width="0.0713%" height="15" fill="rgb(211,200,13)" fg:x="1200" fg:w="1"/><text x="85.7810%" y="319.50"></text></g><g><title>rand::rng::Rng::sample (1 samples, 0.07%)</title><rect x="85.5310%" y="293" width="0.0713%" height="15" fill="rgb(241,121,6)" fg:x="1200" fg:w="1"/><text x="85.7810%" y="303.50"></text></g><g><title>rand_distr::utils::ziggurat (1 samples, 0.07%)</title><rect x="85.5310%" y="277" width="0.0713%" height="15" fill="rgb(234,221,29)" fg:x="1200" fg:w="1"/><text x="85.7810%" y="287.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="85.6023%" y="1237" width="0.0713%" height="15" fill="rgb(229,136,5)" fg:x="1201" fg:w="1"/><text x="85.8523%" y="1247.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="85.6023%" y="1221" width="0.0713%" height="15" fill="rgb(238,36,11)" fg:x="1201" fg:w="1"/><text x="85.8523%" y="1231.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="85.6023%" y="1205" width="0.0713%" height="15" fill="rgb(251,55,41)" fg:x="1201" fg:w="1"/><text x="85.8523%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="85.6023%" y="1189" width="0.0713%" height="15" fill="rgb(242,34,40)" fg:x="1201" fg:w="1"/><text x="85.8523%" y="1199.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="85.6023%" y="1173" width="0.0713%" height="15" fill="rgb(215,42,17)" fg:x="1201" fg:w="1"/><text x="85.8523%" y="1183.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="85.6023%" y="1157" width="0.0713%" height="15" fill="rgb(207,44,46)" fg:x="1201" fg:w="1"/><text x="85.8523%" y="1167.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="85.6023%" y="1141" width="0.0713%" height="15" fill="rgb(211,206,28)" fg:x="1201" fg:w="1"/><text x="85.8523%" y="1151.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="85.6023%" y="1125" width="0.0713%" height="15" fill="rgb(237,167,16)" fg:x="1201" fg:w="1"/><text x="85.8523%" y="1135.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="85.6023%" y="1109" width="0.0713%" height="15" fill="rgb(233,66,6)" fg:x="1201" fg:w="1"/><text x="85.8523%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="85.6023%" y="1093" width="0.0713%" height="15" fill="rgb(246,123,29)" fg:x="1201" fg:w="1"/><text x="85.8523%" y="1103.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="85.6023%" y="1077" width="0.0713%" height="15" fill="rgb(209,62,40)" fg:x="1201" fg:w="1"/><text x="85.8523%" y="1087.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="85.6023%" y="1061" width="0.0713%" height="15" fill="rgb(218,4,25)" fg:x="1201" fg:w="1"/><text x="85.8523%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="85.6023%" y="1045" width="0.0713%" height="15" fill="rgb(253,91,49)" fg:x="1201" fg:w="1"/><text x="85.8523%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="85.6023%" y="1029" width="0.0713%" height="15" fill="rgb(228,155,29)" fg:x="1201" fg:w="1"/><text x="85.8523%" y="1039.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="85.6023%" y="1013" width="0.0713%" height="15" fill="rgb(243,57,37)" fg:x="1201" fg:w="1"/><text x="85.8523%" y="1023.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="85.6023%" y="997" width="0.0713%" height="15" fill="rgb(244,167,17)" fg:x="1201" fg:w="1"/><text x="85.8523%" y="1007.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="85.6023%" y="981" width="0.0713%" height="15" fill="rgb(207,181,38)" fg:x="1201" fg:w="1"/><text x="85.8523%" y="991.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="85.6023%" y="965" width="0.0713%" height="15" fill="rgb(211,8,23)" fg:x="1201" fg:w="1"/><text x="85.8523%" y="975.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="85.6023%" y="949" width="0.0713%" height="15" fill="rgb(235,11,44)" fg:x="1201" fg:w="1"/><text x="85.8523%" y="959.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="85.6023%" y="933" width="0.0713%" height="15" fill="rgb(248,18,52)" fg:x="1201" fg:w="1"/><text x="85.8523%" y="943.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="85.6023%" y="917" width="0.0713%" height="15" fill="rgb(208,4,7)" fg:x="1201" fg:w="1"/><text x="85.8523%" y="927.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="85.6023%" y="901" width="0.0713%" height="15" fill="rgb(240,17,39)" fg:x="1201" fg:w="1"/><text x="85.8523%" y="911.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="85.6023%" y="885" width="0.0713%" height="15" fill="rgb(207,170,3)" fg:x="1201" fg:w="1"/><text x="85.8523%" y="895.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.07%)</title><rect x="85.6023%" y="869" width="0.0713%" height="15" fill="rgb(236,100,52)" fg:x="1201" fg:w="1"/><text x="85.8523%" y="879.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="85.6023%" y="853" width="0.0713%" height="15" fill="rgb(246,78,51)" fg:x="1201" fg:w="1"/><text x="85.8523%" y="863.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="85.6023%" y="837" width="0.0713%" height="15" fill="rgb(211,17,15)" fg:x="1201" fg:w="1"/><text x="85.8523%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="85.6023%" y="821" width="0.0713%" height="15" fill="rgb(209,59,46)" fg:x="1201" fg:w="1"/><text x="85.8523%" y="831.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="85.6023%" y="805" width="0.0713%" height="15" fill="rgb(210,92,25)" fg:x="1201" fg:w="1"/><text x="85.8523%" y="815.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="85.6023%" y="789" width="0.0713%" height="15" fill="rgb(238,174,52)" fg:x="1201" fg:w="1"/><text x="85.8523%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="85.6023%" y="773" width="0.0713%" height="15" fill="rgb(230,73,7)" fg:x="1201" fg:w="1"/><text x="85.8523%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="85.6023%" y="757" width="0.0713%" height="15" fill="rgb(243,124,40)" fg:x="1201" fg:w="1"/><text x="85.8523%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="85.6023%" y="741" width="0.0713%" height="15" fill="rgb(244,170,11)" fg:x="1201" fg:w="1"/><text x="85.8523%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="85.6023%" y="725" width="0.0713%" height="15" fill="rgb(207,114,54)" fg:x="1201" fg:w="1"/><text x="85.8523%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.07%)</title><rect x="85.6023%" y="709" width="0.0713%" height="15" fill="rgb(205,42,20)" fg:x="1201" fg:w="1"/><text x="85.8523%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="85.6023%" y="693" width="0.0713%" height="15" fill="rgb(230,30,28)" fg:x="1201" fg:w="1"/><text x="85.8523%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="85.6023%" y="677" width="0.0713%" height="15" fill="rgb(205,73,54)" fg:x="1201" fg:w="1"/><text x="85.8523%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.07%)</title><rect x="85.6023%" y="661" width="0.0713%" height="15" fill="rgb(254,227,23)" fg:x="1201" fg:w="1"/><text x="85.8523%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="85.6023%" y="645" width="0.0713%" height="15" fill="rgb(228,202,34)" fg:x="1201" fg:w="1"/><text x="85.8523%" y="655.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="85.6023%" y="629" width="0.0713%" height="15" fill="rgb(222,225,37)" fg:x="1201" fg:w="1"/><text x="85.8523%" y="639.50"></text></g><g><title>&lt;rand_distr::normal::Normal&lt;F&gt; as rand::distributions::distribution::Distribution&lt;F&gt;&gt;::sample (1 samples, 0.07%)</title><rect x="85.6023%" y="613" width="0.0713%" height="15" fill="rgb(221,14,54)" fg:x="1201" fg:w="1"/><text x="85.8523%" y="623.50"></text></g><g><title>rand::rng::Rng::sample (1 samples, 0.07%)</title><rect x="85.6023%" y="597" width="0.0713%" height="15" fill="rgb(254,102,2)" fg:x="1201" fg:w="1"/><text x="85.8523%" y="607.50"></text></g><g><title>rand_distr::utils::ziggurat (1 samples, 0.07%)</title><rect x="85.6023%" y="581" width="0.0713%" height="15" fill="rgb(232,104,17)" fg:x="1201" fg:w="1"/><text x="85.8523%" y="591.50"></text></g><g><title>&lt;&amp;mut R as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="85.6023%" y="565" width="0.0713%" height="15" fill="rgb(250,220,14)" fg:x="1201" fg:w="1"/><text x="85.8523%" y="575.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="85.6023%" y="549" width="0.0713%" height="15" fill="rgb(241,158,9)" fg:x="1201" fg:w="1"/><text x="85.8523%" y="559.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="85.6023%" y="533" width="0.0713%" height="15" fill="rgb(246,9,43)" fg:x="1201" fg:w="1"/><text x="85.8523%" y="543.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="85.6023%" y="517" width="0.0713%" height="15" fill="rgb(206,73,33)" fg:x="1201" fg:w="1"/><text x="85.8523%" y="527.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (1 samples, 0.07%)</title><rect x="85.6023%" y="501" width="0.0713%" height="15" fill="rgb(222,79,8)" fg:x="1201" fg:w="1"/><text x="85.8523%" y="511.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.07%)</title><rect x="85.6023%" y="485" width="0.0713%" height="15" fill="rgb(234,8,54)" fg:x="1201" fg:w="1"/><text x="85.8523%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.07%)</title><rect x="85.6023%" y="469" width="0.0713%" height="15" fill="rgb(209,134,38)" fg:x="1201" fg:w="1"/><text x="85.8523%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.07%)</title><rect x="85.6023%" y="453" width="0.0713%" height="15" fill="rgb(230,127,29)" fg:x="1201" fg:w="1"/><text x="85.8523%" y="463.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="85.6736%" y="885" width="0.0713%" height="15" fill="rgb(242,44,41)" fg:x="1202" fg:w="1"/><text x="85.9236%" y="895.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="85.6736%" y="869" width="0.0713%" height="15" fill="rgb(222,56,43)" fg:x="1202" fg:w="1"/><text x="85.9236%" y="879.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="85.6736%" y="853" width="0.0713%" height="15" fill="rgb(238,39,47)" fg:x="1202" fg:w="1"/><text x="85.9236%" y="863.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="85.6736%" y="837" width="0.0713%" height="15" fill="rgb(226,79,43)" fg:x="1202" fg:w="1"/><text x="85.9236%" y="847.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="85.6736%" y="821" width="0.0713%" height="15" fill="rgb(242,105,53)" fg:x="1202" fg:w="1"/><text x="85.9236%" y="831.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="85.6736%" y="805" width="0.0713%" height="15" fill="rgb(251,132,46)" fg:x="1202" fg:w="1"/><text x="85.9236%" y="815.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="85.6736%" y="789" width="0.0713%" height="15" fill="rgb(231,77,14)" fg:x="1202" fg:w="1"/><text x="85.9236%" y="799.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="85.6736%" y="773" width="0.0713%" height="15" fill="rgb(240,135,9)" fg:x="1202" fg:w="1"/><text x="85.9236%" y="783.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="85.6736%" y="757" width="0.0713%" height="15" fill="rgb(248,109,14)" fg:x="1202" fg:w="1"/><text x="85.9236%" y="767.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="85.6736%" y="741" width="0.0713%" height="15" fill="rgb(227,146,52)" fg:x="1202" fg:w="1"/><text x="85.9236%" y="751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="85.6736%" y="725" width="0.0713%" height="15" fill="rgb(232,54,3)" fg:x="1202" fg:w="1"/><text x="85.9236%" y="735.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="85.6736%" y="709" width="0.0713%" height="15" fill="rgb(229,201,43)" fg:x="1202" fg:w="1"/><text x="85.9236%" y="719.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="85.6736%" y="693" width="0.0713%" height="15" fill="rgb(252,161,33)" fg:x="1202" fg:w="1"/><text x="85.9236%" y="703.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="85.6736%" y="677" width="0.0713%" height="15" fill="rgb(226,146,40)" fg:x="1202" fg:w="1"/><text x="85.9236%" y="687.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="85.6736%" y="661" width="0.0713%" height="15" fill="rgb(219,47,25)" fg:x="1202" fg:w="1"/><text x="85.9236%" y="671.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="85.6736%" y="645" width="0.0713%" height="15" fill="rgb(250,135,13)" fg:x="1202" fg:w="1"/><text x="85.9236%" y="655.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="85.6736%" y="629" width="0.0713%" height="15" fill="rgb(219,229,18)" fg:x="1202" fg:w="1"/><text x="85.9236%" y="639.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="85.6736%" y="613" width="0.0713%" height="15" fill="rgb(217,152,27)" fg:x="1202" fg:w="1"/><text x="85.9236%" y="623.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="85.6736%" y="597" width="0.0713%" height="15" fill="rgb(225,71,47)" fg:x="1202" fg:w="1"/><text x="85.9236%" y="607.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="85.6736%" y="581" width="0.0713%" height="15" fill="rgb(220,139,14)" fg:x="1202" fg:w="1"/><text x="85.9236%" y="591.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.07%)</title><rect x="85.6736%" y="565" width="0.0713%" height="15" fill="rgb(247,54,32)" fg:x="1202" fg:w="1"/><text x="85.9236%" y="575.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="85.6736%" y="549" width="0.0713%" height="15" fill="rgb(252,131,39)" fg:x="1202" fg:w="1"/><text x="85.9236%" y="559.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="85.6736%" y="533" width="0.0713%" height="15" fill="rgb(210,108,39)" fg:x="1202" fg:w="1"/><text x="85.9236%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="85.6736%" y="517" width="0.0713%" height="15" fill="rgb(205,23,29)" fg:x="1202" fg:w="1"/><text x="85.9236%" y="527.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="85.6736%" y="501" width="0.0713%" height="15" fill="rgb(246,139,46)" fg:x="1202" fg:w="1"/><text x="85.9236%" y="511.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="85.6736%" y="485" width="0.0713%" height="15" fill="rgb(250,81,26)" fg:x="1202" fg:w="1"/><text x="85.9236%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="85.6736%" y="469" width="0.0713%" height="15" fill="rgb(214,104,7)" fg:x="1202" fg:w="1"/><text x="85.9236%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="85.6736%" y="453" width="0.0713%" height="15" fill="rgb(233,189,8)" fg:x="1202" fg:w="1"/><text x="85.9236%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="85.6736%" y="437" width="0.0713%" height="15" fill="rgb(228,141,17)" fg:x="1202" fg:w="1"/><text x="85.9236%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="85.6736%" y="421" width="0.0713%" height="15" fill="rgb(247,157,1)" fg:x="1202" fg:w="1"/><text x="85.9236%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.07%)</title><rect x="85.6736%" y="405" width="0.0713%" height="15" fill="rgb(249,225,5)" fg:x="1202" fg:w="1"/><text x="85.9236%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="85.6736%" y="389" width="0.0713%" height="15" fill="rgb(242,55,13)" fg:x="1202" fg:w="1"/><text x="85.9236%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="85.6736%" y="373" width="0.0713%" height="15" fill="rgb(230,49,50)" fg:x="1202" fg:w="1"/><text x="85.9236%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.07%)</title><rect x="85.6736%" y="357" width="0.0713%" height="15" fill="rgb(241,111,38)" fg:x="1202" fg:w="1"/><text x="85.9236%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="85.6736%" y="341" width="0.0713%" height="15" fill="rgb(252,155,4)" fg:x="1202" fg:w="1"/><text x="85.9236%" y="351.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="85.6736%" y="325" width="0.0713%" height="15" fill="rgb(212,69,32)" fg:x="1202" fg:w="1"/><text x="85.9236%" y="335.50"></text></g><g><title>&lt;rand_distr::normal::Normal&lt;F&gt; as rand::distributions::distribution::Distribution&lt;F&gt;&gt;::sample (1 samples, 0.07%)</title><rect x="85.6736%" y="309" width="0.0713%" height="15" fill="rgb(243,107,47)" fg:x="1202" fg:w="1"/><text x="85.9236%" y="319.50"></text></g><g><title>rand_distr::normal::Normal&lt;F&gt;::from_zscore (1 samples, 0.07%)</title><rect x="85.6736%" y="293" width="0.0713%" height="15" fill="rgb(247,130,12)" fg:x="1202" fg:w="1"/><text x="85.9236%" y="303.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (1 samples, 0.07%)</title><rect x="85.6736%" y="277" width="0.0713%" height="15" fill="rgb(233,74,16)" fg:x="1202" fg:w="1"/><text x="85.9236%" y="287.50"></text></g><g><title>rayon_core::join::join_context (6 samples, 0.43%)</title><rect x="85.3885%" y="1621" width="0.4277%" height="15" fill="rgb(208,58,18)" fg:x="1198" fg:w="6"/><text x="85.6385%" y="1631.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6 samples, 0.43%)</title><rect x="85.3885%" y="1605" width="0.4277%" height="15" fill="rgb(242,225,1)" fg:x="1198" fg:w="6"/><text x="85.6385%" y="1615.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (3 samples, 0.21%)</title><rect x="85.6023%" y="1589" width="0.2138%" height="15" fill="rgb(249,39,40)" fg:x="1201" fg:w="3"/><text x="85.8523%" y="1599.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.21%)</title><rect x="85.6023%" y="1573" width="0.2138%" height="15" fill="rgb(207,72,44)" fg:x="1201" fg:w="3"/><text x="85.8523%" y="1583.50"></text></g><g><title>std::panicking::try (3 samples, 0.21%)</title><rect x="85.6023%" y="1557" width="0.2138%" height="15" fill="rgb(215,193,12)" fg:x="1201" fg:w="3"/><text x="85.8523%" y="1567.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.21%)</title><rect x="85.6023%" y="1541" width="0.2138%" height="15" fill="rgb(248,41,39)" fg:x="1201" fg:w="3"/><text x="85.8523%" y="1551.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.21%)</title><rect x="85.6023%" y="1525" width="0.2138%" height="15" fill="rgb(253,85,4)" fg:x="1201" fg:w="3"/><text x="85.8523%" y="1535.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (3 samples, 0.21%)</title><rect x="85.6023%" y="1509" width="0.2138%" height="15" fill="rgb(243,70,31)" fg:x="1201" fg:w="3"/><text x="85.8523%" y="1519.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (3 samples, 0.21%)</title><rect x="85.6023%" y="1493" width="0.2138%" height="15" fill="rgb(253,195,26)" fg:x="1201" fg:w="3"/><text x="85.8523%" y="1503.50"></text></g><g><title>rayon_core::join::join_context (3 samples, 0.21%)</title><rect x="85.6023%" y="1477" width="0.2138%" height="15" fill="rgb(243,42,11)" fg:x="1201" fg:w="3"/><text x="85.8523%" y="1487.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3 samples, 0.21%)</title><rect x="85.6023%" y="1461" width="0.2138%" height="15" fill="rgb(239,66,17)" fg:x="1201" fg:w="3"/><text x="85.8523%" y="1471.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (3 samples, 0.21%)</title><rect x="85.6023%" y="1445" width="0.2138%" height="15" fill="rgb(217,132,21)" fg:x="1201" fg:w="3"/><text x="85.8523%" y="1455.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (3 samples, 0.21%)</title><rect x="85.6023%" y="1429" width="0.2138%" height="15" fill="rgb(252,202,21)" fg:x="1201" fg:w="3"/><text x="85.8523%" y="1439.50"></text></g><g><title>rayon_core::job::JobRef::execute (3 samples, 0.21%)</title><rect x="85.6023%" y="1413" width="0.2138%" height="15" fill="rgb(233,98,36)" fg:x="1201" fg:w="3"/><text x="85.8523%" y="1423.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (3 samples, 0.21%)</title><rect x="85.6023%" y="1397" width="0.2138%" height="15" fill="rgb(216,153,54)" fg:x="1201" fg:w="3"/><text x="85.8523%" y="1407.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.21%)</title><rect x="85.6023%" y="1381" width="0.2138%" height="15" fill="rgb(250,99,7)" fg:x="1201" fg:w="3"/><text x="85.8523%" y="1391.50"></text></g><g><title>std::panicking::try (3 samples, 0.21%)</title><rect x="85.6023%" y="1365" width="0.2138%" height="15" fill="rgb(207,56,50)" fg:x="1201" fg:w="3"/><text x="85.8523%" y="1375.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.21%)</title><rect x="85.6023%" y="1349" width="0.2138%" height="15" fill="rgb(244,61,34)" fg:x="1201" fg:w="3"/><text x="85.8523%" y="1359.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.21%)</title><rect x="85.6023%" y="1333" width="0.2138%" height="15" fill="rgb(241,50,38)" fg:x="1201" fg:w="3"/><text x="85.8523%" y="1343.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (3 samples, 0.21%)</title><rect x="85.6023%" y="1317" width="0.2138%" height="15" fill="rgb(212,166,30)" fg:x="1201" fg:w="3"/><text x="85.8523%" y="1327.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (3 samples, 0.21%)</title><rect x="85.6023%" y="1301" width="0.2138%" height="15" fill="rgb(249,127,32)" fg:x="1201" fg:w="3"/><text x="85.8523%" y="1311.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (3 samples, 0.21%)</title><rect x="85.6023%" y="1285" width="0.2138%" height="15" fill="rgb(209,103,0)" fg:x="1201" fg:w="3"/><text x="85.8523%" y="1295.50"></text></g><g><title>rayon_core::join::join_context (3 samples, 0.21%)</title><rect x="85.6023%" y="1269" width="0.2138%" height="15" fill="rgb(238,209,51)" fg:x="1201" fg:w="3"/><text x="85.8523%" y="1279.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3 samples, 0.21%)</title><rect x="85.6023%" y="1253" width="0.2138%" height="15" fill="rgb(237,56,23)" fg:x="1201" fg:w="3"/><text x="85.8523%" y="1263.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (2 samples, 0.14%)</title><rect x="85.6736%" y="1237" width="0.1426%" height="15" fill="rgb(215,153,46)" fg:x="1202" fg:w="2"/><text x="85.9236%" y="1247.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (2 samples, 0.14%)</title><rect x="85.6736%" y="1221" width="0.1426%" height="15" fill="rgb(224,49,31)" fg:x="1202" fg:w="2"/><text x="85.9236%" y="1231.50"></text></g><g><title>rayon_core::job::JobRef::execute (2 samples, 0.14%)</title><rect x="85.6736%" y="1205" width="0.1426%" height="15" fill="rgb(250,18,42)" fg:x="1202" fg:w="2"/><text x="85.9236%" y="1215.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (2 samples, 0.14%)</title><rect x="85.6736%" y="1189" width="0.1426%" height="15" fill="rgb(215,176,39)" fg:x="1202" fg:w="2"/><text x="85.9236%" y="1199.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.14%)</title><rect x="85.6736%" y="1173" width="0.1426%" height="15" fill="rgb(223,77,29)" fg:x="1202" fg:w="2"/><text x="85.9236%" y="1183.50"></text></g><g><title>std::panicking::try (2 samples, 0.14%)</title><rect x="85.6736%" y="1157" width="0.1426%" height="15" fill="rgb(234,94,52)" fg:x="1202" fg:w="2"/><text x="85.9236%" y="1167.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.14%)</title><rect x="85.6736%" y="1141" width="0.1426%" height="15" fill="rgb(220,154,50)" fg:x="1202" fg:w="2"/><text x="85.9236%" y="1151.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.14%)</title><rect x="85.6736%" y="1125" width="0.1426%" height="15" fill="rgb(212,11,10)" fg:x="1202" fg:w="2"/><text x="85.9236%" y="1135.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (2 samples, 0.14%)</title><rect x="85.6736%" y="1109" width="0.1426%" height="15" fill="rgb(205,166,19)" fg:x="1202" fg:w="2"/><text x="85.9236%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (2 samples, 0.14%)</title><rect x="85.6736%" y="1093" width="0.1426%" height="15" fill="rgb(244,198,16)" fg:x="1202" fg:w="2"/><text x="85.9236%" y="1103.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (2 samples, 0.14%)</title><rect x="85.6736%" y="1077" width="0.1426%" height="15" fill="rgb(219,69,12)" fg:x="1202" fg:w="2"/><text x="85.9236%" y="1087.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 0.14%)</title><rect x="85.6736%" y="1061" width="0.1426%" height="15" fill="rgb(245,30,7)" fg:x="1202" fg:w="2"/><text x="85.9236%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2 samples, 0.14%)</title><rect x="85.6736%" y="1045" width="0.1426%" height="15" fill="rgb(218,221,48)" fg:x="1202" fg:w="2"/><text x="85.9236%" y="1055.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (2 samples, 0.14%)</title><rect x="85.6736%" y="1029" width="0.1426%" height="15" fill="rgb(216,66,15)" fg:x="1202" fg:w="2"/><text x="85.9236%" y="1039.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.14%)</title><rect x="85.6736%" y="1013" width="0.1426%" height="15" fill="rgb(226,122,50)" fg:x="1202" fg:w="2"/><text x="85.9236%" y="1023.50"></text></g><g><title>std::panicking::try (2 samples, 0.14%)</title><rect x="85.6736%" y="997" width="0.1426%" height="15" fill="rgb(239,156,16)" fg:x="1202" fg:w="2"/><text x="85.9236%" y="1007.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.14%)</title><rect x="85.6736%" y="981" width="0.1426%" height="15" fill="rgb(224,27,38)" fg:x="1202" fg:w="2"/><text x="85.9236%" y="991.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.14%)</title><rect x="85.6736%" y="965" width="0.1426%" height="15" fill="rgb(224,39,27)" fg:x="1202" fg:w="2"/><text x="85.9236%" y="975.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (2 samples, 0.14%)</title><rect x="85.6736%" y="949" width="0.1426%" height="15" fill="rgb(215,92,29)" fg:x="1202" fg:w="2"/><text x="85.9236%" y="959.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (2 samples, 0.14%)</title><rect x="85.6736%" y="933" width="0.1426%" height="15" fill="rgb(207,159,16)" fg:x="1202" fg:w="2"/><text x="85.9236%" y="943.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 0.14%)</title><rect x="85.6736%" y="917" width="0.1426%" height="15" fill="rgb(238,163,47)" fg:x="1202" fg:w="2"/><text x="85.9236%" y="927.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2 samples, 0.14%)</title><rect x="85.6736%" y="901" width="0.1426%" height="15" fill="rgb(219,91,49)" fg:x="1202" fg:w="2"/><text x="85.9236%" y="911.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="85.7448%" y="885" width="0.0713%" height="15" fill="rgb(227,167,31)" fg:x="1203" fg:w="1"/><text x="85.9948%" y="895.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="85.7448%" y="869" width="0.0713%" height="15" fill="rgb(234,80,54)" fg:x="1203" fg:w="1"/><text x="85.9948%" y="879.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="85.7448%" y="853" width="0.0713%" height="15" fill="rgb(212,114,2)" fg:x="1203" fg:w="1"/><text x="85.9948%" y="863.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="85.7448%" y="837" width="0.0713%" height="15" fill="rgb(234,50,24)" fg:x="1203" fg:w="1"/><text x="85.9948%" y="847.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="85.7448%" y="821" width="0.0713%" height="15" fill="rgb(221,68,8)" fg:x="1203" fg:w="1"/><text x="85.9948%" y="831.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="85.7448%" y="805" width="0.0713%" height="15" fill="rgb(254,180,31)" fg:x="1203" fg:w="1"/><text x="85.9948%" y="815.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="85.7448%" y="789" width="0.0713%" height="15" fill="rgb(247,130,50)" fg:x="1203" fg:w="1"/><text x="85.9948%" y="799.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="85.7448%" y="773" width="0.0713%" height="15" fill="rgb(211,109,4)" fg:x="1203" fg:w="1"/><text x="85.9948%" y="783.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="85.7448%" y="757" width="0.0713%" height="15" fill="rgb(238,50,21)" fg:x="1203" fg:w="1"/><text x="85.9948%" y="767.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="85.7448%" y="741" width="0.0713%" height="15" fill="rgb(225,57,45)" fg:x="1203" fg:w="1"/><text x="85.9948%" y="751.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="85.7448%" y="725" width="0.0713%" height="15" fill="rgb(209,196,50)" fg:x="1203" fg:w="1"/><text x="85.9948%" y="735.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="85.7448%" y="709" width="0.0713%" height="15" fill="rgb(242,140,13)" fg:x="1203" fg:w="1"/><text x="85.9948%" y="719.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="85.7448%" y="693" width="0.0713%" height="15" fill="rgb(217,111,7)" fg:x="1203" fg:w="1"/><text x="85.9948%" y="703.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="85.7448%" y="677" width="0.0713%" height="15" fill="rgb(253,193,51)" fg:x="1203" fg:w="1"/><text x="85.9948%" y="687.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="85.7448%" y="661" width="0.0713%" height="15" fill="rgb(252,70,29)" fg:x="1203" fg:w="1"/><text x="85.9948%" y="671.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="85.7448%" y="645" width="0.0713%" height="15" fill="rgb(232,127,12)" fg:x="1203" fg:w="1"/><text x="85.9948%" y="655.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="85.7448%" y="629" width="0.0713%" height="15" fill="rgb(211,180,21)" fg:x="1203" fg:w="1"/><text x="85.9948%" y="639.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="85.7448%" y="613" width="0.0713%" height="15" fill="rgb(229,72,13)" fg:x="1203" fg:w="1"/><text x="85.9948%" y="623.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="85.7448%" y="597" width="0.0713%" height="15" fill="rgb(240,211,49)" fg:x="1203" fg:w="1"/><text x="85.9948%" y="607.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="85.7448%" y="581" width="0.0713%" height="15" fill="rgb(219,149,40)" fg:x="1203" fg:w="1"/><text x="85.9948%" y="591.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="85.7448%" y="565" width="0.0713%" height="15" fill="rgb(210,127,46)" fg:x="1203" fg:w="1"/><text x="85.9948%" y="575.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="85.7448%" y="549" width="0.0713%" height="15" fill="rgb(220,106,7)" fg:x="1203" fg:w="1"/><text x="85.9948%" y="559.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="85.7448%" y="533" width="0.0713%" height="15" fill="rgb(249,31,22)" fg:x="1203" fg:w="1"/><text x="85.9948%" y="543.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="85.7448%" y="517" width="0.0713%" height="15" fill="rgb(253,1,49)" fg:x="1203" fg:w="1"/><text x="85.9948%" y="527.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="85.7448%" y="501" width="0.0713%" height="15" fill="rgb(227,144,33)" fg:x="1203" fg:w="1"/><text x="85.9948%" y="511.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.07%)</title><rect x="85.7448%" y="485" width="0.0713%" height="15" fill="rgb(249,163,44)" fg:x="1203" fg:w="1"/><text x="85.9948%" y="495.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="85.7448%" y="469" width="0.0713%" height="15" fill="rgb(234,15,39)" fg:x="1203" fg:w="1"/><text x="85.9948%" y="479.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="85.7448%" y="453" width="0.0713%" height="15" fill="rgb(207,66,16)" fg:x="1203" fg:w="1"/><text x="85.9948%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="85.7448%" y="437" width="0.0713%" height="15" fill="rgb(233,112,24)" fg:x="1203" fg:w="1"/><text x="85.9948%" y="447.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="85.7448%" y="421" width="0.0713%" height="15" fill="rgb(230,90,22)" fg:x="1203" fg:w="1"/><text x="85.9948%" y="431.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="85.7448%" y="405" width="0.0713%" height="15" fill="rgb(229,61,13)" fg:x="1203" fg:w="1"/><text x="85.9948%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="85.7448%" y="389" width="0.0713%" height="15" fill="rgb(225,57,24)" fg:x="1203" fg:w="1"/><text x="85.9948%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="85.7448%" y="373" width="0.0713%" height="15" fill="rgb(208,169,48)" fg:x="1203" fg:w="1"/><text x="85.9948%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="85.7448%" y="357" width="0.0713%" height="15" fill="rgb(244,218,51)" fg:x="1203" fg:w="1"/><text x="85.9948%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="85.7448%" y="341" width="0.0713%" height="15" fill="rgb(214,148,10)" fg:x="1203" fg:w="1"/><text x="85.9948%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.07%)</title><rect x="85.7448%" y="325" width="0.0713%" height="15" fill="rgb(225,174,27)" fg:x="1203" fg:w="1"/><text x="85.9948%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="85.7448%" y="309" width="0.0713%" height="15" fill="rgb(230,96,26)" fg:x="1203" fg:w="1"/><text x="85.9948%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="85.7448%" y="293" width="0.0713%" height="15" fill="rgb(232,10,30)" fg:x="1203" fg:w="1"/><text x="85.9948%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.07%)</title><rect x="85.7448%" y="277" width="0.0713%" height="15" fill="rgb(222,8,50)" fg:x="1203" fg:w="1"/><text x="85.9948%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="85.7448%" y="261" width="0.0713%" height="15" fill="rgb(213,81,27)" fg:x="1203" fg:w="1"/><text x="85.9948%" y="271.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="85.7448%" y="245" width="0.0713%" height="15" fill="rgb(245,50,10)" fg:x="1203" fg:w="1"/><text x="85.9948%" y="255.50"></text></g><g><title>&lt;rand_distr::normal::Normal&lt;F&gt; as rand::distributions::distribution::Distribution&lt;F&gt;&gt;::sample (1 samples, 0.07%)</title><rect x="85.7448%" y="229" width="0.0713%" height="15" fill="rgb(216,100,18)" fg:x="1203" fg:w="1"/><text x="85.9948%" y="239.50"></text></g><g><title>rand::rng::Rng::sample (1 samples, 0.07%)</title><rect x="85.7448%" y="213" width="0.0713%" height="15" fill="rgb(236,147,54)" fg:x="1203" fg:w="1"/><text x="85.9948%" y="223.50"></text></g><g><title>rand_distr::utils::ziggurat (1 samples, 0.07%)</title><rect x="85.7448%" y="197" width="0.0713%" height="15" fill="rgb(205,143,26)" fg:x="1203" fg:w="1"/><text x="85.9948%" y="207.50"></text></g><g><title>&lt;&amp;mut R as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="85.7448%" y="181" width="0.0713%" height="15" fill="rgb(236,26,9)" fg:x="1203" fg:w="1"/><text x="85.9948%" y="191.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="85.7448%" y="165" width="0.0713%" height="15" fill="rgb(221,165,53)" fg:x="1203" fg:w="1"/><text x="85.9948%" y="175.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="85.7448%" y="149" width="0.0713%" height="15" fill="rgb(214,110,17)" fg:x="1203" fg:w="1"/><text x="85.9948%" y="159.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="85.7448%" y="133" width="0.0713%" height="15" fill="rgb(237,197,12)" fg:x="1203" fg:w="1"/><text x="85.9948%" y="143.50"></text></g><g><title>rand::rng::Rng::sample (1 samples, 0.07%)</title><rect x="85.8161%" y="533" width="0.0713%" height="15" fill="rgb(205,84,17)" fg:x="1204" fg:w="1"/><text x="86.0661%" y="543.50"></text></g><g><title>rand_distr::utils::ziggurat (1 samples, 0.07%)</title><rect x="85.8161%" y="517" width="0.0713%" height="15" fill="rgb(237,18,45)" fg:x="1204" fg:w="1"/><text x="86.0661%" y="527.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (2 samples, 0.14%)</title><rect x="85.8161%" y="981" width="0.1426%" height="15" fill="rgb(221,87,14)" fg:x="1204" fg:w="2"/><text x="86.0661%" y="991.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (2 samples, 0.14%)</title><rect x="85.8161%" y="965" width="0.1426%" height="15" fill="rgb(238,186,15)" fg:x="1204" fg:w="2"/><text x="86.0661%" y="975.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 0.14%)</title><rect x="85.8161%" y="949" width="0.1426%" height="15" fill="rgb(208,115,11)" fg:x="1204" fg:w="2"/><text x="86.0661%" y="959.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2 samples, 0.14%)</title><rect x="85.8161%" y="933" width="0.1426%" height="15" fill="rgb(254,175,0)" fg:x="1204" fg:w="2"/><text x="86.0661%" y="943.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (2 samples, 0.14%)</title><rect x="85.8161%" y="917" width="0.1426%" height="15" fill="rgb(227,24,42)" fg:x="1204" fg:w="2"/><text x="86.0661%" y="927.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.14%)</title><rect x="85.8161%" y="901" width="0.1426%" height="15" fill="rgb(223,211,37)" fg:x="1204" fg:w="2"/><text x="86.0661%" y="911.50"></text></g><g><title>std::panicking::try (2 samples, 0.14%)</title><rect x="85.8161%" y="885" width="0.1426%" height="15" fill="rgb(235,49,27)" fg:x="1204" fg:w="2"/><text x="86.0661%" y="895.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.14%)</title><rect x="85.8161%" y="869" width="0.1426%" height="15" fill="rgb(254,97,51)" fg:x="1204" fg:w="2"/><text x="86.0661%" y="879.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.14%)</title><rect x="85.8161%" y="853" width="0.1426%" height="15" fill="rgb(249,51,40)" fg:x="1204" fg:w="2"/><text x="86.0661%" y="863.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (2 samples, 0.14%)</title><rect x="85.8161%" y="837" width="0.1426%" height="15" fill="rgb(210,128,45)" fg:x="1204" fg:w="2"/><text x="86.0661%" y="847.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (2 samples, 0.14%)</title><rect x="85.8161%" y="821" width="0.1426%" height="15" fill="rgb(224,137,50)" fg:x="1204" fg:w="2"/><text x="86.0661%" y="831.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (2 samples, 0.14%)</title><rect x="85.8161%" y="805" width="0.1426%" height="15" fill="rgb(242,15,9)" fg:x="1204" fg:w="2"/><text x="86.0661%" y="815.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (2 samples, 0.14%)</title><rect x="85.8161%" y="789" width="0.1426%" height="15" fill="rgb(233,187,41)" fg:x="1204" fg:w="2"/><text x="86.0661%" y="799.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (2 samples, 0.14%)</title><rect x="85.8161%" y="773" width="0.1426%" height="15" fill="rgb(227,2,29)" fg:x="1204" fg:w="2"/><text x="86.0661%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.14%)</title><rect x="85.8161%" y="757" width="0.1426%" height="15" fill="rgb(222,70,3)" fg:x="1204" fg:w="2"/><text x="86.0661%" y="767.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.14%)</title><rect x="85.8161%" y="741" width="0.1426%" height="15" fill="rgb(213,11,42)" fg:x="1204" fg:w="2"/><text x="86.0661%" y="751.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (2 samples, 0.14%)</title><rect x="85.8161%" y="725" width="0.1426%" height="15" fill="rgb(225,150,9)" fg:x="1204" fg:w="2"/><text x="86.0661%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.14%)</title><rect x="85.8161%" y="709" width="0.1426%" height="15" fill="rgb(230,162,45)" fg:x="1204" fg:w="2"/><text x="86.0661%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.14%)</title><rect x="85.8161%" y="693" width="0.1426%" height="15" fill="rgb(222,14,52)" fg:x="1204" fg:w="2"/><text x="86.0661%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.14%)</title><rect x="85.8161%" y="677" width="0.1426%" height="15" fill="rgb(254,198,14)" fg:x="1204" fg:w="2"/><text x="86.0661%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.14%)</title><rect x="85.8161%" y="661" width="0.1426%" height="15" fill="rgb(220,217,30)" fg:x="1204" fg:w="2"/><text x="86.0661%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.14%)</title><rect x="85.8161%" y="645" width="0.1426%" height="15" fill="rgb(215,146,41)" fg:x="1204" fg:w="2"/><text x="86.0661%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="85.8161%" y="629" width="0.1426%" height="15" fill="rgb(217,27,36)" fg:x="1204" fg:w="2"/><text x="86.0661%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="85.8161%" y="613" width="0.1426%" height="15" fill="rgb(219,218,39)" fg:x="1204" fg:w="2"/><text x="86.0661%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (2 samples, 0.14%)</title><rect x="85.8161%" y="597" width="0.1426%" height="15" fill="rgb(219,4,42)" fg:x="1204" fg:w="2"/><text x="86.0661%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="85.8161%" y="581" width="0.1426%" height="15" fill="rgb(249,119,36)" fg:x="1204" fg:w="2"/><text x="86.0661%" y="591.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="85.8161%" y="565" width="0.1426%" height="15" fill="rgb(209,23,33)" fg:x="1204" fg:w="2"/><text x="86.0661%" y="575.50"></text></g><g><title>&lt;rand_distr::normal::Normal&lt;F&gt; as rand::distributions::distribution::Distribution&lt;F&gt;&gt;::sample (2 samples, 0.14%)</title><rect x="85.8161%" y="549" width="0.1426%" height="15" fill="rgb(211,10,0)" fg:x="1204" fg:w="2"/><text x="86.0661%" y="559.50"></text></g><g><title>rand_distr::normal::Normal&lt;F&gt;::from_zscore (1 samples, 0.07%)</title><rect x="85.8874%" y="533" width="0.0713%" height="15" fill="rgb(208,99,37)" fg:x="1205" fg:w="1"/><text x="86.1374%" y="543.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (1 samples, 0.07%)</title><rect x="85.8874%" y="517" width="0.0713%" height="15" fill="rgb(213,132,31)" fg:x="1205" fg:w="1"/><text x="86.1374%" y="527.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (3 samples, 0.21%)</title><rect x="85.8161%" y="1045" width="0.2138%" height="15" fill="rgb(243,129,40)" fg:x="1204" fg:w="3"/><text x="86.0661%" y="1055.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (3 samples, 0.21%)</title><rect x="85.8161%" y="1029" width="0.2138%" height="15" fill="rgb(210,66,33)" fg:x="1204" fg:w="3"/><text x="86.0661%" y="1039.50"></text></g><g><title>rayon_core::join::join_context (3 samples, 0.21%)</title><rect x="85.8161%" y="1013" width="0.2138%" height="15" fill="rgb(209,189,4)" fg:x="1204" fg:w="3"/><text x="86.0661%" y="1023.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3 samples, 0.21%)</title><rect x="85.8161%" y="997" width="0.2138%" height="15" fill="rgb(214,107,37)" fg:x="1204" fg:w="3"/><text x="86.0661%" y="1007.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="85.9587%" y="981" width="0.0713%" height="15" fill="rgb(245,88,54)" fg:x="1206" fg:w="1"/><text x="86.2087%" y="991.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="85.9587%" y="965" width="0.0713%" height="15" fill="rgb(205,146,20)" fg:x="1206" fg:w="1"/><text x="86.2087%" y="975.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="85.9587%" y="949" width="0.0713%" height="15" fill="rgb(220,161,25)" fg:x="1206" fg:w="1"/><text x="86.2087%" y="959.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="85.9587%" y="933" width="0.0713%" height="15" fill="rgb(215,152,15)" fg:x="1206" fg:w="1"/><text x="86.2087%" y="943.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="85.9587%" y="917" width="0.0713%" height="15" fill="rgb(233,192,44)" fg:x="1206" fg:w="1"/><text x="86.2087%" y="927.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="85.9587%" y="901" width="0.0713%" height="15" fill="rgb(240,170,46)" fg:x="1206" fg:w="1"/><text x="86.2087%" y="911.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="85.9587%" y="885" width="0.0713%" height="15" fill="rgb(207,104,33)" fg:x="1206" fg:w="1"/><text x="86.2087%" y="895.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="85.9587%" y="869" width="0.0713%" height="15" fill="rgb(219,21,39)" fg:x="1206" fg:w="1"/><text x="86.2087%" y="879.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="85.9587%" y="853" width="0.0713%" height="15" fill="rgb(214,133,29)" fg:x="1206" fg:w="1"/><text x="86.2087%" y="863.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="85.9587%" y="837" width="0.0713%" height="15" fill="rgb(226,93,6)" fg:x="1206" fg:w="1"/><text x="86.2087%" y="847.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="85.9587%" y="821" width="0.0713%" height="15" fill="rgb(252,222,34)" fg:x="1206" fg:w="1"/><text x="86.2087%" y="831.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="85.9587%" y="805" width="0.0713%" height="15" fill="rgb(252,92,48)" fg:x="1206" fg:w="1"/><text x="86.2087%" y="815.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="85.9587%" y="789" width="0.0713%" height="15" fill="rgb(245,223,24)" fg:x="1206" fg:w="1"/><text x="86.2087%" y="799.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="85.9587%" y="773" width="0.0713%" height="15" fill="rgb(205,176,3)" fg:x="1206" fg:w="1"/><text x="86.2087%" y="783.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="85.9587%" y="757" width="0.0713%" height="15" fill="rgb(235,151,15)" fg:x="1206" fg:w="1"/><text x="86.2087%" y="767.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="85.9587%" y="741" width="0.0713%" height="15" fill="rgb(237,209,11)" fg:x="1206" fg:w="1"/><text x="86.2087%" y="751.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.07%)</title><rect x="85.9587%" y="725" width="0.0713%" height="15" fill="rgb(243,227,24)" fg:x="1206" fg:w="1"/><text x="86.2087%" y="735.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="85.9587%" y="709" width="0.0713%" height="15" fill="rgb(239,193,16)" fg:x="1206" fg:w="1"/><text x="86.2087%" y="719.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="85.9587%" y="693" width="0.0713%" height="15" fill="rgb(231,27,9)" fg:x="1206" fg:w="1"/><text x="86.2087%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="85.9587%" y="677" width="0.0713%" height="15" fill="rgb(219,169,10)" fg:x="1206" fg:w="1"/><text x="86.2087%" y="687.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="85.9587%" y="661" width="0.0713%" height="15" fill="rgb(244,229,43)" fg:x="1206" fg:w="1"/><text x="86.2087%" y="671.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="85.9587%" y="645" width="0.0713%" height="15" fill="rgb(254,38,20)" fg:x="1206" fg:w="1"/><text x="86.2087%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="85.9587%" y="629" width="0.0713%" height="15" fill="rgb(250,47,30)" fg:x="1206" fg:w="1"/><text x="86.2087%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="85.9587%" y="613" width="0.0713%" height="15" fill="rgb(224,124,36)" fg:x="1206" fg:w="1"/><text x="86.2087%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="85.9587%" y="597" width="0.0713%" height="15" fill="rgb(246,68,51)" fg:x="1206" fg:w="1"/><text x="86.2087%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="85.9587%" y="581" width="0.0713%" height="15" fill="rgb(253,43,49)" fg:x="1206" fg:w="1"/><text x="86.2087%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.07%)</title><rect x="85.9587%" y="565" width="0.0713%" height="15" fill="rgb(219,54,36)" fg:x="1206" fg:w="1"/><text x="86.2087%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="85.9587%" y="549" width="0.0713%" height="15" fill="rgb(227,133,34)" fg:x="1206" fg:w="1"/><text x="86.2087%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="85.9587%" y="533" width="0.0713%" height="15" fill="rgb(247,227,15)" fg:x="1206" fg:w="1"/><text x="86.2087%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.07%)</title><rect x="85.9587%" y="517" width="0.0713%" height="15" fill="rgb(229,96,14)" fg:x="1206" fg:w="1"/><text x="86.2087%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="85.9587%" y="501" width="0.0713%" height="15" fill="rgb(220,79,17)" fg:x="1206" fg:w="1"/><text x="86.2087%" y="511.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="85.9587%" y="485" width="0.0713%" height="15" fill="rgb(205,131,53)" fg:x="1206" fg:w="1"/><text x="86.2087%" y="495.50"></text></g><g><title>&lt;rand_distr::normal::Normal&lt;F&gt; as rand::distributions::distribution::Distribution&lt;F&gt;&gt;::sample (1 samples, 0.07%)</title><rect x="85.9587%" y="469" width="0.0713%" height="15" fill="rgb(209,50,29)" fg:x="1206" fg:w="1"/><text x="86.2087%" y="479.50"></text></g><g><title>rand::rng::Rng::sample (1 samples, 0.07%)</title><rect x="85.9587%" y="453" width="0.0713%" height="15" fill="rgb(245,86,46)" fg:x="1206" fg:w="1"/><text x="86.2087%" y="463.50"></text></g><g><title>rand_distr::utils::ziggurat (1 samples, 0.07%)</title><rect x="85.9587%" y="437" width="0.0713%" height="15" fill="rgb(235,66,46)" fg:x="1206" fg:w="1"/><text x="86.2087%" y="447.50"></text></g><g><title>&lt;&amp;mut R as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="85.9587%" y="421" width="0.0713%" height="15" fill="rgb(232,148,31)" fg:x="1206" fg:w="1"/><text x="86.2087%" y="431.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="85.9587%" y="405" width="0.0713%" height="15" fill="rgb(217,149,8)" fg:x="1206" fg:w="1"/><text x="86.2087%" y="415.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="85.9587%" y="389" width="0.0713%" height="15" fill="rgb(209,183,11)" fg:x="1206" fg:w="1"/><text x="86.2087%" y="399.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="85.9587%" y="373" width="0.0713%" height="15" fill="rgb(208,55,20)" fg:x="1206" fg:w="1"/><text x="86.2087%" y="383.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (1 samples, 0.07%)</title><rect x="85.9587%" y="357" width="0.0713%" height="15" fill="rgb(218,39,14)" fg:x="1206" fg:w="1"/><text x="86.2087%" y="367.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.07%)</title><rect x="85.9587%" y="341" width="0.0713%" height="15" fill="rgb(216,169,33)" fg:x="1206" fg:w="1"/><text x="86.2087%" y="351.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.07%)</title><rect x="85.9587%" y="325" width="0.0713%" height="15" fill="rgb(233,80,24)" fg:x="1206" fg:w="1"/><text x="86.2087%" y="335.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (1 samples, 0.07%)</title><rect x="85.9587%" y="309" width="0.0713%" height="15" fill="rgb(213,179,31)" fg:x="1206" fg:w="1"/><text x="86.2087%" y="319.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (1 samples, 0.07%)</title><rect x="85.9587%" y="293" width="0.0713%" height="15" fill="rgb(209,19,5)" fg:x="1206" fg:w="1"/><text x="86.2087%" y="303.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (1 samples, 0.07%)</title><rect x="85.9587%" y="277" width="0.0713%" height="15" fill="rgb(219,18,35)" fg:x="1206" fg:w="1"/><text x="86.2087%" y="287.50"></text></g><g><title>rand_chacha::guts::round (1 samples, 0.07%)</title><rect x="85.9587%" y="261" width="0.0713%" height="15" fill="rgb(209,169,16)" fg:x="1206" fg:w="1"/><text x="86.2087%" y="271.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (1 samples, 0.07%)</title><rect x="85.9587%" y="245" width="0.0713%" height="15" fill="rgb(245,90,51)" fg:x="1206" fg:w="1"/><text x="86.2087%" y="255.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (1 samples, 0.07%)</title><rect x="85.9587%" y="229" width="0.0713%" height="15" fill="rgb(220,99,45)" fg:x="1206" fg:w="1"/><text x="86.2087%" y="239.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (1 samples, 0.07%)</title><rect x="85.9587%" y="213" width="0.0713%" height="15" fill="rgb(249,89,25)" fg:x="1206" fg:w="1"/><text x="86.2087%" y="223.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="86.0299%" y="901" width="0.0713%" height="15" fill="rgb(239,193,0)" fg:x="1207" fg:w="1"/><text x="86.2799%" y="911.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="86.0299%" y="885" width="0.0713%" height="15" fill="rgb(231,126,1)" fg:x="1207" fg:w="1"/><text x="86.2799%" y="895.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="86.0299%" y="869" width="0.0713%" height="15" fill="rgb(243,166,3)" fg:x="1207" fg:w="1"/><text x="86.2799%" y="879.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="86.0299%" y="853" width="0.0713%" height="15" fill="rgb(223,22,34)" fg:x="1207" fg:w="1"/><text x="86.2799%" y="863.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="86.0299%" y="837" width="0.0713%" height="15" fill="rgb(251,52,51)" fg:x="1207" fg:w="1"/><text x="86.2799%" y="847.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="86.0299%" y="821" width="0.0713%" height="15" fill="rgb(221,165,28)" fg:x="1207" fg:w="1"/><text x="86.2799%" y="831.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.07%)</title><rect x="86.0299%" y="805" width="0.0713%" height="15" fill="rgb(218,121,47)" fg:x="1207" fg:w="1"/><text x="86.2799%" y="815.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="86.0299%" y="789" width="0.0713%" height="15" fill="rgb(209,120,9)" fg:x="1207" fg:w="1"/><text x="86.2799%" y="799.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="86.0299%" y="773" width="0.0713%" height="15" fill="rgb(236,68,12)" fg:x="1207" fg:w="1"/><text x="86.2799%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="86.0299%" y="757" width="0.0713%" height="15" fill="rgb(225,194,26)" fg:x="1207" fg:w="1"/><text x="86.2799%" y="767.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="86.0299%" y="741" width="0.0713%" height="15" fill="rgb(231,84,39)" fg:x="1207" fg:w="1"/><text x="86.2799%" y="751.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="86.0299%" y="725" width="0.0713%" height="15" fill="rgb(210,11,45)" fg:x="1207" fg:w="1"/><text x="86.2799%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="86.0299%" y="709" width="0.0713%" height="15" fill="rgb(224,54,52)" fg:x="1207" fg:w="1"/><text x="86.2799%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="86.0299%" y="693" width="0.0713%" height="15" fill="rgb(238,102,14)" fg:x="1207" fg:w="1"/><text x="86.2799%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="86.0299%" y="677" width="0.0713%" height="15" fill="rgb(243,160,52)" fg:x="1207" fg:w="1"/><text x="86.2799%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="86.0299%" y="661" width="0.0713%" height="15" fill="rgb(216,114,19)" fg:x="1207" fg:w="1"/><text x="86.2799%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.07%)</title><rect x="86.0299%" y="645" width="0.0713%" height="15" fill="rgb(244,166,37)" fg:x="1207" fg:w="1"/><text x="86.2799%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="86.0299%" y="629" width="0.0713%" height="15" fill="rgb(246,29,44)" fg:x="1207" fg:w="1"/><text x="86.2799%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="86.0299%" y="613" width="0.0713%" height="15" fill="rgb(215,56,53)" fg:x="1207" fg:w="1"/><text x="86.2799%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.07%)</title><rect x="86.0299%" y="597" width="0.0713%" height="15" fill="rgb(217,60,2)" fg:x="1207" fg:w="1"/><text x="86.2799%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="86.0299%" y="581" width="0.0713%" height="15" fill="rgb(207,26,24)" fg:x="1207" fg:w="1"/><text x="86.2799%" y="591.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="86.0299%" y="565" width="0.0713%" height="15" fill="rgb(252,210,15)" fg:x="1207" fg:w="1"/><text x="86.2799%" y="575.50"></text></g><g><title>&lt;rand_distr::normal::Normal&lt;F&gt; as rand::distributions::distribution::Distribution&lt;F&gt;&gt;::sample (1 samples, 0.07%)</title><rect x="86.0299%" y="549" width="0.0713%" height="15" fill="rgb(253,209,26)" fg:x="1207" fg:w="1"/><text x="86.2799%" y="559.50"></text></g><g><title>rand::rng::Rng::sample (1 samples, 0.07%)</title><rect x="86.0299%" y="533" width="0.0713%" height="15" fill="rgb(238,170,14)" fg:x="1207" fg:w="1"/><text x="86.2799%" y="543.50"></text></g><g><title>rand_distr::utils::ziggurat (1 samples, 0.07%)</title><rect x="86.0299%" y="517" width="0.0713%" height="15" fill="rgb(216,178,15)" fg:x="1207" fg:w="1"/><text x="86.2799%" y="527.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="86.1012%" y="757" width="0.0713%" height="15" fill="rgb(250,197,2)" fg:x="1208" fg:w="1"/><text x="86.3512%" y="767.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="86.1012%" y="741" width="0.0713%" height="15" fill="rgb(212,70,42)" fg:x="1208" fg:w="1"/><text x="86.3512%" y="751.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.07%)</title><rect x="86.1012%" y="725" width="0.0713%" height="15" fill="rgb(227,213,9)" fg:x="1208" fg:w="1"/><text x="86.3512%" y="735.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="86.1012%" y="709" width="0.0713%" height="15" fill="rgb(245,99,25)" fg:x="1208" fg:w="1"/><text x="86.3512%" y="719.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="86.1012%" y="693" width="0.0713%" height="15" fill="rgb(250,82,29)" fg:x="1208" fg:w="1"/><text x="86.3512%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="86.1012%" y="677" width="0.0713%" height="15" fill="rgb(241,226,54)" fg:x="1208" fg:w="1"/><text x="86.3512%" y="687.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="86.1012%" y="661" width="0.0713%" height="15" fill="rgb(221,99,41)" fg:x="1208" fg:w="1"/><text x="86.3512%" y="671.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="86.1012%" y="645" width="0.0713%" height="15" fill="rgb(213,90,21)" fg:x="1208" fg:w="1"/><text x="86.3512%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="86.1012%" y="629" width="0.0713%" height="15" fill="rgb(205,208,24)" fg:x="1208" fg:w="1"/><text x="86.3512%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="86.1012%" y="613" width="0.0713%" height="15" fill="rgb(246,31,12)" fg:x="1208" fg:w="1"/><text x="86.3512%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="86.1012%" y="597" width="0.0713%" height="15" fill="rgb(213,154,6)" fg:x="1208" fg:w="1"/><text x="86.3512%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="86.1012%" y="581" width="0.0713%" height="15" fill="rgb(222,163,29)" fg:x="1208" fg:w="1"/><text x="86.3512%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.07%)</title><rect x="86.1012%" y="565" width="0.0713%" height="15" fill="rgb(227,201,8)" fg:x="1208" fg:w="1"/><text x="86.3512%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="86.1012%" y="549" width="0.0713%" height="15" fill="rgb(233,9,32)" fg:x="1208" fg:w="1"/><text x="86.3512%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="86.1012%" y="533" width="0.0713%" height="15" fill="rgb(217,54,24)" fg:x="1208" fg:w="1"/><text x="86.3512%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.07%)</title><rect x="86.1012%" y="517" width="0.0713%" height="15" fill="rgb(235,192,0)" fg:x="1208" fg:w="1"/><text x="86.3512%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="86.1012%" y="501" width="0.0713%" height="15" fill="rgb(235,45,9)" fg:x="1208" fg:w="1"/><text x="86.3512%" y="511.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="86.1012%" y="485" width="0.0713%" height="15" fill="rgb(246,42,40)" fg:x="1208" fg:w="1"/><text x="86.3512%" y="495.50"></text></g><g><title>&lt;rand_distr::normal::Normal&lt;F&gt; as rand::distributions::distribution::Distribution&lt;F&gt;&gt;::sample (1 samples, 0.07%)</title><rect x="86.1012%" y="469" width="0.0713%" height="15" fill="rgb(248,111,24)" fg:x="1208" fg:w="1"/><text x="86.3512%" y="479.50"></text></g><g><title>rand::rng::Rng::sample (1 samples, 0.07%)</title><rect x="86.1012%" y="453" width="0.0713%" height="15" fill="rgb(249,65,22)" fg:x="1208" fg:w="1"/><text x="86.3512%" y="463.50"></text></g><g><title>rand_distr::utils::ziggurat (1 samples, 0.07%)</title><rect x="86.1012%" y="437" width="0.0713%" height="15" fill="rgb(238,111,51)" fg:x="1208" fg:w="1"/><text x="86.3512%" y="447.50"></text></g><g><title>&lt;&amp;mut R as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="86.1012%" y="421" width="0.0713%" height="15" fill="rgb(250,118,22)" fg:x="1208" fg:w="1"/><text x="86.3512%" y="431.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="86.1012%" y="405" width="0.0713%" height="15" fill="rgb(234,84,26)" fg:x="1208" fg:w="1"/><text x="86.3512%" y="415.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="86.1012%" y="389" width="0.0713%" height="15" fill="rgb(243,172,12)" fg:x="1208" fg:w="1"/><text x="86.3512%" y="399.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="86.1012%" y="373" width="0.0713%" height="15" fill="rgb(236,150,49)" fg:x="1208" fg:w="1"/><text x="86.3512%" y="383.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (1 samples, 0.07%)</title><rect x="86.1012%" y="357" width="0.0713%" height="15" fill="rgb(225,197,26)" fg:x="1208" fg:w="1"/><text x="86.3512%" y="367.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.07%)</title><rect x="86.1012%" y="341" width="0.0713%" height="15" fill="rgb(214,17,42)" fg:x="1208" fg:w="1"/><text x="86.3512%" y="351.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.07%)</title><rect x="86.1012%" y="325" width="0.0713%" height="15" fill="rgb(224,165,40)" fg:x="1208" fg:w="1"/><text x="86.3512%" y="335.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (1 samples, 0.07%)</title><rect x="86.1012%" y="309" width="0.0713%" height="15" fill="rgb(246,100,4)" fg:x="1208" fg:w="1"/><text x="86.3512%" y="319.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (1 samples, 0.07%)</title><rect x="86.1012%" y="293" width="0.0713%" height="15" fill="rgb(222,103,0)" fg:x="1208" fg:w="1"/><text x="86.3512%" y="303.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (1 samples, 0.07%)</title><rect x="86.1012%" y="277" width="0.0713%" height="15" fill="rgb(227,189,26)" fg:x="1208" fg:w="1"/><text x="86.3512%" y="287.50"></text></g><g><title>rand_chacha::guts::undiagonalize (1 samples, 0.07%)</title><rect x="86.1012%" y="261" width="0.0713%" height="15" fill="rgb(214,202,17)" fg:x="1208" fg:w="1"/><text x="86.3512%" y="271.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words2301 (1 samples, 0.07%)</title><rect x="86.1012%" y="245" width="0.0713%" height="15" fill="rgb(229,111,3)" fg:x="1208" fg:w="1"/><text x="86.3512%" y="255.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words2301 (1 samples, 0.07%)</title><rect x="86.1012%" y="229" width="0.0713%" height="15" fill="rgb(229,172,15)" fg:x="1208" fg:w="1"/><text x="86.3512%" y="239.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.07%)</title><rect x="86.1012%" y="213" width="0.0713%" height="15" fill="rgb(230,224,35)" fg:x="1208" fg:w="1"/><text x="86.3512%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="86.1725%" y="453" width="0.0713%" height="15" fill="rgb(251,141,6)" fg:x="1209" fg:w="1"/><text x="86.4225%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.07%)</title><rect x="86.1725%" y="437" width="0.0713%" height="15" fill="rgb(225,208,6)" fg:x="1209" fg:w="1"/><text x="86.4225%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="86.1725%" y="421" width="0.0713%" height="15" fill="rgb(246,181,16)" fg:x="1209" fg:w="1"/><text x="86.4225%" y="431.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="86.1725%" y="405" width="0.0713%" height="15" fill="rgb(227,129,36)" fg:x="1209" fg:w="1"/><text x="86.4225%" y="415.50"></text></g><g><title>&lt;rand_distr::normal::Normal&lt;F&gt; as rand::distributions::distribution::Distribution&lt;F&gt;&gt;::sample (1 samples, 0.07%)</title><rect x="86.1725%" y="389" width="0.0713%" height="15" fill="rgb(248,117,24)" fg:x="1209" fg:w="1"/><text x="86.4225%" y="399.50"></text></g><g><title>rand::rng::Rng::sample (1 samples, 0.07%)</title><rect x="86.1725%" y="373" width="0.0713%" height="15" fill="rgb(214,185,35)" fg:x="1209" fg:w="1"/><text x="86.4225%" y="383.50"></text></g><g><title>rand_distr::utils::ziggurat (1 samples, 0.07%)</title><rect x="86.1725%" y="357" width="0.0713%" height="15" fill="rgb(236,150,34)" fg:x="1209" fg:w="1"/><text x="86.4225%" y="367.50"></text></g><g><title>&lt;&amp;mut R as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="86.1725%" y="341" width="0.0713%" height="15" fill="rgb(243,228,27)" fg:x="1209" fg:w="1"/><text x="86.4225%" y="351.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="86.1725%" y="325" width="0.0713%" height="15" fill="rgb(245,77,44)" fg:x="1209" fg:w="1"/><text x="86.4225%" y="335.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="86.1725%" y="309" width="0.0713%" height="15" fill="rgb(235,214,42)" fg:x="1209" fg:w="1"/><text x="86.4225%" y="319.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="86.1725%" y="293" width="0.0713%" height="15" fill="rgb(221,74,3)" fg:x="1209" fg:w="1"/><text x="86.4225%" y="303.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (1 samples, 0.07%)</title><rect x="86.1725%" y="277" width="0.0713%" height="15" fill="rgb(206,121,29)" fg:x="1209" fg:w="1"/><text x="86.4225%" y="287.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.07%)</title><rect x="86.1725%" y="261" width="0.0713%" height="15" fill="rgb(249,131,53)" fg:x="1209" fg:w="1"/><text x="86.4225%" y="271.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.07%)</title><rect x="86.1725%" y="245" width="0.0713%" height="15" fill="rgb(236,170,29)" fg:x="1209" fg:w="1"/><text x="86.4225%" y="255.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (1 samples, 0.07%)</title><rect x="86.1725%" y="229" width="0.0713%" height="15" fill="rgb(247,96,15)" fg:x="1209" fg:w="1"/><text x="86.4225%" y="239.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (1 samples, 0.07%)</title><rect x="86.1725%" y="213" width="0.0713%" height="15" fill="rgb(211,210,7)" fg:x="1209" fg:w="1"/><text x="86.4225%" y="223.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (1 samples, 0.07%)</title><rect x="86.1725%" y="197" width="0.0713%" height="15" fill="rgb(240,88,50)" fg:x="1209" fg:w="1"/><text x="86.4225%" y="207.50"></text></g><g><title>rand_chacha::guts::round (1 samples, 0.07%)</title><rect x="86.1725%" y="181" width="0.0713%" height="15" fill="rgb(209,229,26)" fg:x="1209" fg:w="1"/><text x="86.4225%" y="191.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (1 samples, 0.07%)</title><rect x="86.1725%" y="165" width="0.0713%" height="15" fill="rgb(210,68,23)" fg:x="1209" fg:w="1"/><text x="86.4225%" y="175.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (1 samples, 0.07%)</title><rect x="86.1725%" y="149" width="0.0713%" height="15" fill="rgb(229,180,13)" fg:x="1209" fg:w="1"/><text x="86.4225%" y="159.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (1 samples, 0.07%)</title><rect x="86.1725%" y="133" width="0.0713%" height="15" fill="rgb(236,53,44)" fg:x="1209" fg:w="1"/><text x="86.4225%" y="143.50"></text></g><g><title>std::panicking::try::do_call (7 samples, 0.50%)</title><rect x="85.8161%" y="1525" width="0.4989%" height="15" fill="rgb(244,214,29)" fg:x="1204" fg:w="7"/><text x="86.0661%" y="1535.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (7 samples, 0.50%)</title><rect x="85.8161%" y="1509" width="0.4989%" height="15" fill="rgb(220,75,29)" fg:x="1204" fg:w="7"/><text x="86.0661%" y="1519.50"></text></g><g><title>rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (7 samples, 0.50%)</title><rect x="85.8161%" y="1493" width="0.4989%" height="15" fill="rgb(214,183,37)" fg:x="1204" fg:w="7"/><text x="86.0661%" y="1503.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (7 samples, 0.50%)</title><rect x="85.8161%" y="1477" width="0.4989%" height="15" fill="rgb(239,117,29)" fg:x="1204" fg:w="7"/><text x="86.0661%" y="1487.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (7 samples, 0.50%)</title><rect x="85.8161%" y="1461" width="0.4989%" height="15" fill="rgb(237,171,35)" fg:x="1204" fg:w="7"/><text x="86.0661%" y="1471.50"></text></g><g><title>std::panic::catch_unwind (7 samples, 0.50%)</title><rect x="85.8161%" y="1445" width="0.4989%" height="15" fill="rgb(229,178,53)" fg:x="1204" fg:w="7"/><text x="86.0661%" y="1455.50"></text></g><g><title>std::panicking::try (7 samples, 0.50%)</title><rect x="85.8161%" y="1429" width="0.4989%" height="15" fill="rgb(210,102,19)" fg:x="1204" fg:w="7"/><text x="86.0661%" y="1439.50"></text></g><g><title>std::panicking::try::do_call (7 samples, 0.50%)</title><rect x="85.8161%" y="1413" width="0.4989%" height="15" fill="rgb(235,127,22)" fg:x="1204" fg:w="7"/><text x="86.0661%" y="1423.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (7 samples, 0.50%)</title><rect x="85.8161%" y="1397" width="0.4989%" height="15" fill="rgb(244,31,31)" fg:x="1204" fg:w="7"/><text x="86.0661%" y="1407.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (7 samples, 0.50%)</title><rect x="85.8161%" y="1381" width="0.4989%" height="15" fill="rgb(231,43,21)" fg:x="1204" fg:w="7"/><text x="86.0661%" y="1391.50"></text></g><g><title>rayon_core::join::join_context (7 samples, 0.50%)</title><rect x="85.8161%" y="1365" width="0.4989%" height="15" fill="rgb(217,131,35)" fg:x="1204" fg:w="7"/><text x="86.0661%" y="1375.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (7 samples, 0.50%)</title><rect x="85.8161%" y="1349" width="0.4989%" height="15" fill="rgb(221,149,4)" fg:x="1204" fg:w="7"/><text x="86.0661%" y="1359.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (7 samples, 0.50%)</title><rect x="85.8161%" y="1333" width="0.4989%" height="15" fill="rgb(232,170,28)" fg:x="1204" fg:w="7"/><text x="86.0661%" y="1343.50"></text></g><g><title>std::panic::catch_unwind (7 samples, 0.50%)</title><rect x="85.8161%" y="1317" width="0.4989%" height="15" fill="rgb(238,56,10)" fg:x="1204" fg:w="7"/><text x="86.0661%" y="1327.50"></text></g><g><title>std::panicking::try (7 samples, 0.50%)</title><rect x="85.8161%" y="1301" width="0.4989%" height="15" fill="rgb(235,196,14)" fg:x="1204" fg:w="7"/><text x="86.0661%" y="1311.50"></text></g><g><title>std::panicking::try::do_call (7 samples, 0.50%)</title><rect x="85.8161%" y="1285" width="0.4989%" height="15" fill="rgb(216,45,48)" fg:x="1204" fg:w="7"/><text x="86.0661%" y="1295.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (7 samples, 0.50%)</title><rect x="85.8161%" y="1269" width="0.4989%" height="15" fill="rgb(238,213,17)" fg:x="1204" fg:w="7"/><text x="86.0661%" y="1279.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (7 samples, 0.50%)</title><rect x="85.8161%" y="1253" width="0.4989%" height="15" fill="rgb(212,13,2)" fg:x="1204" fg:w="7"/><text x="86.0661%" y="1263.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (7 samples, 0.50%)</title><rect x="85.8161%" y="1237" width="0.4989%" height="15" fill="rgb(240,114,20)" fg:x="1204" fg:w="7"/><text x="86.0661%" y="1247.50"></text></g><g><title>rayon_core::join::join_context (7 samples, 0.50%)</title><rect x="85.8161%" y="1221" width="0.4989%" height="15" fill="rgb(228,41,40)" fg:x="1204" fg:w="7"/><text x="86.0661%" y="1231.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (7 samples, 0.50%)</title><rect x="85.8161%" y="1205" width="0.4989%" height="15" fill="rgb(244,132,35)" fg:x="1204" fg:w="7"/><text x="86.0661%" y="1215.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (7 samples, 0.50%)</title><rect x="85.8161%" y="1189" width="0.4989%" height="15" fill="rgb(253,189,4)" fg:x="1204" fg:w="7"/><text x="86.0661%" y="1199.50"></text></g><g><title>std::panic::catch_unwind (7 samples, 0.50%)</title><rect x="85.8161%" y="1173" width="0.4989%" height="15" fill="rgb(224,37,19)" fg:x="1204" fg:w="7"/><text x="86.0661%" y="1183.50"></text></g><g><title>std::panicking::try (7 samples, 0.50%)</title><rect x="85.8161%" y="1157" width="0.4989%" height="15" fill="rgb(235,223,18)" fg:x="1204" fg:w="7"/><text x="86.0661%" y="1167.50"></text></g><g><title>std::panicking::try::do_call (7 samples, 0.50%)</title><rect x="85.8161%" y="1141" width="0.4989%" height="15" fill="rgb(235,163,25)" fg:x="1204" fg:w="7"/><text x="86.0661%" y="1151.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (7 samples, 0.50%)</title><rect x="85.8161%" y="1125" width="0.4989%" height="15" fill="rgb(217,145,28)" fg:x="1204" fg:w="7"/><text x="86.0661%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (7 samples, 0.50%)</title><rect x="85.8161%" y="1109" width="0.4989%" height="15" fill="rgb(223,223,32)" fg:x="1204" fg:w="7"/><text x="86.0661%" y="1119.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (7 samples, 0.50%)</title><rect x="85.8161%" y="1093" width="0.4989%" height="15" fill="rgb(227,189,39)" fg:x="1204" fg:w="7"/><text x="86.0661%" y="1103.50"></text></g><g><title>rayon_core::join::join_context (7 samples, 0.50%)</title><rect x="85.8161%" y="1077" width="0.4989%" height="15" fill="rgb(248,10,22)" fg:x="1204" fg:w="7"/><text x="86.0661%" y="1087.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (7 samples, 0.50%)</title><rect x="85.8161%" y="1061" width="0.4989%" height="15" fill="rgb(248,46,39)" fg:x="1204" fg:w="7"/><text x="86.0661%" y="1071.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.29%)</title><rect x="86.0299%" y="1045" width="0.2851%" height="15" fill="rgb(248,113,48)" fg:x="1207" fg:w="4"/><text x="86.2799%" y="1055.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.29%)</title><rect x="86.0299%" y="1029" width="0.2851%" height="15" fill="rgb(245,16,25)" fg:x="1207" fg:w="4"/><text x="86.2799%" y="1039.50"></text></g><g><title>std::panicking::try (4 samples, 0.29%)</title><rect x="86.0299%" y="1013" width="0.2851%" height="15" fill="rgb(249,152,16)" fg:x="1207" fg:w="4"/><text x="86.2799%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.29%)</title><rect x="86.0299%" y="997" width="0.2851%" height="15" fill="rgb(250,16,1)" fg:x="1207" fg:w="4"/><text x="86.2799%" y="1007.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.29%)</title><rect x="86.0299%" y="981" width="0.2851%" height="15" fill="rgb(249,138,3)" fg:x="1207" fg:w="4"/><text x="86.2799%" y="991.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (4 samples, 0.29%)</title><rect x="86.0299%" y="965" width="0.2851%" height="15" fill="rgb(227,71,41)" fg:x="1207" fg:w="4"/><text x="86.2799%" y="975.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.29%)</title><rect x="86.0299%" y="949" width="0.2851%" height="15" fill="rgb(209,184,23)" fg:x="1207" fg:w="4"/><text x="86.2799%" y="959.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.29%)</title><rect x="86.0299%" y="933" width="0.2851%" height="15" fill="rgb(223,215,31)" fg:x="1207" fg:w="4"/><text x="86.2799%" y="943.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.29%)</title><rect x="86.0299%" y="917" width="0.2851%" height="15" fill="rgb(210,146,28)" fg:x="1207" fg:w="4"/><text x="86.2799%" y="927.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (3 samples, 0.21%)</title><rect x="86.1012%" y="901" width="0.2138%" height="15" fill="rgb(209,183,41)" fg:x="1208" fg:w="3"/><text x="86.3512%" y="911.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.21%)</title><rect x="86.1012%" y="885" width="0.2138%" height="15" fill="rgb(209,224,45)" fg:x="1208" fg:w="3"/><text x="86.3512%" y="895.50"></text></g><g><title>std::panicking::try (3 samples, 0.21%)</title><rect x="86.1012%" y="869" width="0.2138%" height="15" fill="rgb(224,209,51)" fg:x="1208" fg:w="3"/><text x="86.3512%" y="879.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.21%)</title><rect x="86.1012%" y="853" width="0.2138%" height="15" fill="rgb(223,17,39)" fg:x="1208" fg:w="3"/><text x="86.3512%" y="863.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.21%)</title><rect x="86.1012%" y="837" width="0.2138%" height="15" fill="rgb(234,204,37)" fg:x="1208" fg:w="3"/><text x="86.3512%" y="847.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (3 samples, 0.21%)</title><rect x="86.1012%" y="821" width="0.2138%" height="15" fill="rgb(236,120,5)" fg:x="1208" fg:w="3"/><text x="86.3512%" y="831.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (3 samples, 0.21%)</title><rect x="86.1012%" y="805" width="0.2138%" height="15" fill="rgb(248,97,27)" fg:x="1208" fg:w="3"/><text x="86.3512%" y="815.50"></text></g><g><title>rayon_core::join::join_context (3 samples, 0.21%)</title><rect x="86.1012%" y="789" width="0.2138%" height="15" fill="rgb(240,66,17)" fg:x="1208" fg:w="3"/><text x="86.3512%" y="799.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3 samples, 0.21%)</title><rect x="86.1012%" y="773" width="0.2138%" height="15" fill="rgb(210,79,3)" fg:x="1208" fg:w="3"/><text x="86.3512%" y="783.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (2 samples, 0.14%)</title><rect x="86.1725%" y="757" width="0.1426%" height="15" fill="rgb(214,176,27)" fg:x="1209" fg:w="2"/><text x="86.4225%" y="767.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.14%)</title><rect x="86.1725%" y="741" width="0.1426%" height="15" fill="rgb(235,185,3)" fg:x="1209" fg:w="2"/><text x="86.4225%" y="751.50"></text></g><g><title>std::panicking::try (2 samples, 0.14%)</title><rect x="86.1725%" y="725" width="0.1426%" height="15" fill="rgb(227,24,12)" fg:x="1209" fg:w="2"/><text x="86.4225%" y="735.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.14%)</title><rect x="86.1725%" y="709" width="0.1426%" height="15" fill="rgb(252,169,48)" fg:x="1209" fg:w="2"/><text x="86.4225%" y="719.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.14%)</title><rect x="86.1725%" y="693" width="0.1426%" height="15" fill="rgb(212,65,1)" fg:x="1209" fg:w="2"/><text x="86.4225%" y="703.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (2 samples, 0.14%)</title><rect x="86.1725%" y="677" width="0.1426%" height="15" fill="rgb(242,39,24)" fg:x="1209" fg:w="2"/><text x="86.4225%" y="687.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (2 samples, 0.14%)</title><rect x="86.1725%" y="661" width="0.1426%" height="15" fill="rgb(249,32,23)" fg:x="1209" fg:w="2"/><text x="86.4225%" y="671.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (2 samples, 0.14%)</title><rect x="86.1725%" y="645" width="0.1426%" height="15" fill="rgb(251,195,23)" fg:x="1209" fg:w="2"/><text x="86.4225%" y="655.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (2 samples, 0.14%)</title><rect x="86.1725%" y="629" width="0.1426%" height="15" fill="rgb(236,174,8)" fg:x="1209" fg:w="2"/><text x="86.4225%" y="639.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (2 samples, 0.14%)</title><rect x="86.1725%" y="613" width="0.1426%" height="15" fill="rgb(220,197,8)" fg:x="1209" fg:w="2"/><text x="86.4225%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.14%)</title><rect x="86.1725%" y="597" width="0.1426%" height="15" fill="rgb(240,108,37)" fg:x="1209" fg:w="2"/><text x="86.4225%" y="607.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.14%)</title><rect x="86.1725%" y="581" width="0.1426%" height="15" fill="rgb(232,176,24)" fg:x="1209" fg:w="2"/><text x="86.4225%" y="591.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (2 samples, 0.14%)</title><rect x="86.1725%" y="565" width="0.1426%" height="15" fill="rgb(243,35,29)" fg:x="1209" fg:w="2"/><text x="86.4225%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.14%)</title><rect x="86.1725%" y="549" width="0.1426%" height="15" fill="rgb(210,37,18)" fg:x="1209" fg:w="2"/><text x="86.4225%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.14%)</title><rect x="86.1725%" y="533" width="0.1426%" height="15" fill="rgb(224,184,40)" fg:x="1209" fg:w="2"/><text x="86.4225%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.14%)</title><rect x="86.1725%" y="517" width="0.1426%" height="15" fill="rgb(236,39,29)" fg:x="1209" fg:w="2"/><text x="86.4225%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.14%)</title><rect x="86.1725%" y="501" width="0.1426%" height="15" fill="rgb(232,48,39)" fg:x="1209" fg:w="2"/><text x="86.4225%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.14%)</title><rect x="86.1725%" y="485" width="0.1426%" height="15" fill="rgb(236,34,42)" fg:x="1209" fg:w="2"/><text x="86.4225%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="86.1725%" y="469" width="0.1426%" height="15" fill="rgb(243,106,37)" fg:x="1209" fg:w="2"/><text x="86.4225%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.07%)</title><rect x="86.2438%" y="453" width="0.0713%" height="15" fill="rgb(218,96,6)" fg:x="1210" fg:w="1"/><text x="86.4938%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.07%)</title><rect x="86.2438%" y="437" width="0.0713%" height="15" fill="rgb(235,130,12)" fg:x="1210" fg:w="1"/><text x="86.4938%" y="447.50"></text></g><g><title>&lt;ldpc::channel::BinaryMemorylessChannel as ldpc::channel::Channel&gt;::transmit::{{closure}} (1 samples, 0.07%)</title><rect x="86.2438%" y="421" width="0.0713%" height="15" fill="rgb(231,95,0)" fg:x="1210" fg:w="1"/><text x="86.4938%" y="431.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="86.3150%" y="1397" width="0.0713%" height="15" fill="rgb(228,12,23)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="1407.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="86.3150%" y="1381" width="0.0713%" height="15" fill="rgb(216,12,1)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="1391.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="86.3150%" y="1365" width="0.0713%" height="15" fill="rgb(219,59,3)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="1375.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="86.3150%" y="1349" width="0.0713%" height="15" fill="rgb(215,208,46)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="1359.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.07%)</title><rect x="86.3150%" y="1333" width="0.0713%" height="15" fill="rgb(254,224,29)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="1343.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (1 samples, 0.07%)</title><rect x="86.3150%" y="1317" width="0.0713%" height="15" fill="rgb(232,14,29)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="1327.50"></text></g><g><title>rayon_core::job::JobRef::execute (1 samples, 0.07%)</title><rect x="86.3150%" y="1301" width="0.0713%" height="15" fill="rgb(208,45,52)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="1311.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="86.3150%" y="1285" width="0.0713%" height="15" fill="rgb(234,191,28)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="1295.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="86.3150%" y="1269" width="0.0713%" height="15" fill="rgb(244,67,43)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="1279.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="86.3150%" y="1253" width="0.0713%" height="15" fill="rgb(236,189,24)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="1263.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="86.3150%" y="1237" width="0.0713%" height="15" fill="rgb(239,214,33)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="1247.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="86.3150%" y="1221" width="0.0713%" height="15" fill="rgb(226,176,41)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="1231.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (1 samples, 0.07%)</title><rect x="86.3150%" y="1205" width="0.0713%" height="15" fill="rgb(248,47,8)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="86.3150%" y="1189" width="0.0713%" height="15" fill="rgb(218,81,44)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="1199.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="86.3150%" y="1173" width="0.0713%" height="15" fill="rgb(213,98,6)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="1183.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="86.3150%" y="1157" width="0.0713%" height="15" fill="rgb(222,85,22)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="86.3150%" y="1141" width="0.0713%" height="15" fill="rgb(239,46,39)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="1151.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.07%)</title><rect x="86.3150%" y="1125" width="0.0713%" height="15" fill="rgb(237,12,29)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="1135.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (1 samples, 0.07%)</title><rect x="86.3150%" y="1109" width="0.0713%" height="15" fill="rgb(214,77,8)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="1119.50"></text></g><g><title>rayon_core::job::JobRef::execute (1 samples, 0.07%)</title><rect x="86.3150%" y="1093" width="0.0713%" height="15" fill="rgb(217,168,37)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="1103.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="86.3150%" y="1077" width="0.0713%" height="15" fill="rgb(221,217,23)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="86.3150%" y="1061" width="0.0713%" height="15" fill="rgb(243,229,36)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="1071.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="86.3150%" y="1045" width="0.0713%" height="15" fill="rgb(251,163,40)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="86.3150%" y="1029" width="0.0713%" height="15" fill="rgb(237,222,12)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="86.3150%" y="1013" width="0.0713%" height="15" fill="rgb(248,132,6)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="1023.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (1 samples, 0.07%)</title><rect x="86.3150%" y="997" width="0.0713%" height="15" fill="rgb(227,167,50)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="1007.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="86.3150%" y="981" width="0.0713%" height="15" fill="rgb(242,84,37)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="991.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="86.3150%" y="965" width="0.0713%" height="15" fill="rgb(212,4,50)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="975.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="86.3150%" y="949" width="0.0713%" height="15" fill="rgb(230,228,32)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="959.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="86.3150%" y="933" width="0.0713%" height="15" fill="rgb(248,217,23)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="943.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="86.3150%" y="917" width="0.0713%" height="15" fill="rgb(238,197,32)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="927.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="86.3150%" y="901" width="0.0713%" height="15" fill="rgb(236,106,1)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="911.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="86.3150%" y="885" width="0.0713%" height="15" fill="rgb(219,228,13)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="895.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="86.3150%" y="869" width="0.0713%" height="15" fill="rgb(238,30,35)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="879.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="86.3150%" y="853" width="0.0713%" height="15" fill="rgb(236,70,23)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="863.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="86.3150%" y="837" width="0.0713%" height="15" fill="rgb(249,104,48)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="847.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="86.3150%" y="821" width="0.0713%" height="15" fill="rgb(254,117,50)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="831.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="86.3150%" y="805" width="0.0713%" height="15" fill="rgb(223,152,4)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="815.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="86.3150%" y="789" width="0.0713%" height="15" fill="rgb(245,6,2)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="799.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="86.3150%" y="773" width="0.0713%" height="15" fill="rgb(249,150,24)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="783.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="86.3150%" y="757" width="0.0713%" height="15" fill="rgb(228,185,42)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="767.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="86.3150%" y="741" width="0.0713%" height="15" fill="rgb(226,39,33)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="751.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="86.3150%" y="725" width="0.0713%" height="15" fill="rgb(221,166,19)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="735.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="86.3150%" y="709" width="0.0713%" height="15" fill="rgb(209,109,2)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="719.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="86.3150%" y="693" width="0.0713%" height="15" fill="rgb(252,216,26)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="703.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="86.3150%" y="677" width="0.0713%" height="15" fill="rgb(227,173,36)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="687.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="86.3150%" y="661" width="0.0713%" height="15" fill="rgb(209,90,7)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="671.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="86.3150%" y="645" width="0.0713%" height="15" fill="rgb(250,194,11)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="655.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="86.3150%" y="629" width="0.0713%" height="15" fill="rgb(220,72,50)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="639.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="86.3150%" y="613" width="0.0713%" height="15" fill="rgb(222,106,48)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="623.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="86.3150%" y="597" width="0.0713%" height="15" fill="rgb(216,220,45)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="607.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="86.3150%" y="581" width="0.0713%" height="15" fill="rgb(234,112,18)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="591.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="86.3150%" y="565" width="0.0713%" height="15" fill="rgb(206,179,9)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="575.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="86.3150%" y="549" width="0.0713%" height="15" fill="rgb(215,115,40)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="559.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="86.3150%" y="533" width="0.0713%" height="15" fill="rgb(222,69,34)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="543.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.07%)</title><rect x="86.3150%" y="517" width="0.0713%" height="15" fill="rgb(209,161,10)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="527.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="86.3150%" y="501" width="0.0713%" height="15" fill="rgb(217,6,38)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="511.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="86.3150%" y="485" width="0.0713%" height="15" fill="rgb(229,229,48)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="86.3150%" y="469" width="0.0713%" height="15" fill="rgb(225,21,28)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="479.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="86.3150%" y="453" width="0.0713%" height="15" fill="rgb(206,33,13)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="463.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="86.3150%" y="437" width="0.0713%" height="15" fill="rgb(242,178,17)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="86.3150%" y="421" width="0.0713%" height="15" fill="rgb(220,162,5)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="86.3150%" y="405" width="0.0713%" height="15" fill="rgb(210,33,43)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="86.3150%" y="389" width="0.0713%" height="15" fill="rgb(216,116,54)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="86.3150%" y="373" width="0.0713%" height="15" fill="rgb(249,92,24)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.07%)</title><rect x="86.3150%" y="357" width="0.0713%" height="15" fill="rgb(231,189,14)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="86.3150%" y="341" width="0.0713%" height="15" fill="rgb(230,8,41)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="86.3150%" y="325" width="0.0713%" height="15" fill="rgb(249,7,27)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.07%)</title><rect x="86.3150%" y="309" width="0.0713%" height="15" fill="rgb(232,86,5)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="86.3150%" y="293" width="0.0713%" height="15" fill="rgb(224,175,18)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="303.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="86.3150%" y="277" width="0.0713%" height="15" fill="rgb(220,129,12)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="287.50"></text></g><g><title>&lt;rand_distr::normal::Normal&lt;F&gt; as rand::distributions::distribution::Distribution&lt;F&gt;&gt;::sample (1 samples, 0.07%)</title><rect x="86.3150%" y="261" width="0.0713%" height="15" fill="rgb(210,19,36)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="271.50"></text></g><g><title>rand::rng::Rng::sample (1 samples, 0.07%)</title><rect x="86.3150%" y="245" width="0.0713%" height="15" fill="rgb(219,96,14)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="255.50"></text></g><g><title>rand_distr::utils::ziggurat (1 samples, 0.07%)</title><rect x="86.3150%" y="229" width="0.0713%" height="15" fill="rgb(249,106,1)" fg:x="1211" fg:w="1"/><text x="86.5650%" y="239.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.07%)</title><rect x="86.3863%" y="1397" width="0.0713%" height="15" fill="rgb(249,155,20)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="1407.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (1 samples, 0.07%)</title><rect x="86.3863%" y="1381" width="0.0713%" height="15" fill="rgb(244,168,9)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="1391.50"></text></g><g><title>rayon_core::job::JobRef::execute (1 samples, 0.07%)</title><rect x="86.3863%" y="1365" width="0.0713%" height="15" fill="rgb(216,23,50)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="1375.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="86.3863%" y="1349" width="0.0713%" height="15" fill="rgb(224,219,20)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="1359.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="86.3863%" y="1333" width="0.0713%" height="15" fill="rgb(222,156,15)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="1343.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="86.3863%" y="1317" width="0.0713%" height="15" fill="rgb(231,97,17)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="1327.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="86.3863%" y="1301" width="0.0713%" height="15" fill="rgb(218,70,48)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="1311.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="86.3863%" y="1285" width="0.0713%" height="15" fill="rgb(212,196,52)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="1295.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (1 samples, 0.07%)</title><rect x="86.3863%" y="1269" width="0.0713%" height="15" fill="rgb(243,203,18)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="1279.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="86.3863%" y="1253" width="0.0713%" height="15" fill="rgb(252,125,41)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="1263.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="86.3863%" y="1237" width="0.0713%" height="15" fill="rgb(223,180,33)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="1247.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="86.3863%" y="1221" width="0.0713%" height="15" fill="rgb(254,159,46)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="1231.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="86.3863%" y="1205" width="0.0713%" height="15" fill="rgb(254,38,10)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="1215.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="86.3863%" y="1189" width="0.0713%" height="15" fill="rgb(208,217,32)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="1199.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="86.3863%" y="1173" width="0.0713%" height="15" fill="rgb(221,120,13)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="1183.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="86.3863%" y="1157" width="0.0713%" height="15" fill="rgb(246,54,52)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="1167.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="86.3863%" y="1141" width="0.0713%" height="15" fill="rgb(242,34,25)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="1151.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="86.3863%" y="1125" width="0.0713%" height="15" fill="rgb(247,209,9)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="86.3863%" y="1109" width="0.0713%" height="15" fill="rgb(228,71,26)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="1119.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="86.3863%" y="1093" width="0.0713%" height="15" fill="rgb(222,145,49)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="1103.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="86.3863%" y="1077" width="0.0713%" height="15" fill="rgb(218,121,17)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="1087.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="86.3863%" y="1061" width="0.0713%" height="15" fill="rgb(244,50,7)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="1071.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="86.3863%" y="1045" width="0.0713%" height="15" fill="rgb(246,229,37)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="1055.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="86.3863%" y="1029" width="0.0713%" height="15" fill="rgb(225,18,5)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="1039.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="86.3863%" y="1013" width="0.0713%" height="15" fill="rgb(213,204,8)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="86.3863%" y="997" width="0.0713%" height="15" fill="rgb(238,103,6)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="1007.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="86.3863%" y="981" width="0.0713%" height="15" fill="rgb(222,25,35)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="991.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="86.3863%" y="965" width="0.0713%" height="15" fill="rgb(213,203,35)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="975.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="86.3863%" y="949" width="0.0713%" height="15" fill="rgb(221,79,53)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="959.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="86.3863%" y="933" width="0.0713%" height="15" fill="rgb(243,200,35)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="943.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="86.3863%" y="917" width="0.0713%" height="15" fill="rgb(248,60,25)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="927.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="86.3863%" y="901" width="0.0713%" height="15" fill="rgb(227,53,46)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="911.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="86.3863%" y="885" width="0.0713%" height="15" fill="rgb(216,120,32)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="895.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="86.3863%" y="869" width="0.0713%" height="15" fill="rgb(220,134,1)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="879.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="86.3863%" y="853" width="0.0713%" height="15" fill="rgb(237,168,5)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="863.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="86.3863%" y="837" width="0.0713%" height="15" fill="rgb(231,100,33)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="847.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="86.3863%" y="821" width="0.0713%" height="15" fill="rgb(236,177,47)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="831.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="86.3863%" y="805" width="0.0713%" height="15" fill="rgb(235,7,49)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="815.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="86.3863%" y="789" width="0.0713%" height="15" fill="rgb(232,119,22)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="799.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="86.3863%" y="773" width="0.0713%" height="15" fill="rgb(254,73,53)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="783.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="86.3863%" y="757" width="0.0713%" height="15" fill="rgb(251,35,20)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="767.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="86.3863%" y="741" width="0.0713%" height="15" fill="rgb(241,119,20)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="751.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="86.3863%" y="725" width="0.0713%" height="15" fill="rgb(207,102,14)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="735.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="86.3863%" y="709" width="0.0713%" height="15" fill="rgb(248,201,50)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="719.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="86.3863%" y="693" width="0.0713%" height="15" fill="rgb(222,185,44)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="703.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="86.3863%" y="677" width="0.0713%" height="15" fill="rgb(218,107,18)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="687.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="86.3863%" y="661" width="0.0713%" height="15" fill="rgb(237,177,39)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="671.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="86.3863%" y="645" width="0.0713%" height="15" fill="rgb(246,69,6)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="655.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="86.3863%" y="629" width="0.0713%" height="15" fill="rgb(234,208,37)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="639.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="86.3863%" y="613" width="0.0713%" height="15" fill="rgb(225,4,6)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="623.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="86.3863%" y="597" width="0.0713%" height="15" fill="rgb(233,45,0)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="607.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="86.3863%" y="581" width="0.0713%" height="15" fill="rgb(226,136,5)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="591.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="86.3863%" y="565" width="0.0713%" height="15" fill="rgb(211,91,47)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="575.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="86.3863%" y="549" width="0.0713%" height="15" fill="rgb(242,88,51)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="559.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="86.3863%" y="533" width="0.0713%" height="15" fill="rgb(230,91,28)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="543.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="86.3863%" y="517" width="0.0713%" height="15" fill="rgb(254,186,29)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="527.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.07%)</title><rect x="86.3863%" y="501" width="0.0713%" height="15" fill="rgb(238,6,4)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="511.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="86.3863%" y="485" width="0.0713%" height="15" fill="rgb(221,151,16)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="495.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="86.3863%" y="469" width="0.0713%" height="15" fill="rgb(251,143,52)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="86.3863%" y="453" width="0.0713%" height="15" fill="rgb(206,90,15)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="463.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="86.3863%" y="437" width="0.0713%" height="15" fill="rgb(218,35,8)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="447.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="86.3863%" y="421" width="0.0713%" height="15" fill="rgb(239,215,6)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="86.3863%" y="405" width="0.0713%" height="15" fill="rgb(245,116,39)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="86.3863%" y="389" width="0.0713%" height="15" fill="rgb(242,65,28)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="86.3863%" y="373" width="0.0713%" height="15" fill="rgb(252,132,53)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="86.3863%" y="357" width="0.0713%" height="15" fill="rgb(224,159,50)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.07%)</title><rect x="86.3863%" y="341" width="0.0713%" height="15" fill="rgb(224,93,4)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="86.3863%" y="325" width="0.0713%" height="15" fill="rgb(208,81,34)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="86.3863%" y="309" width="0.0713%" height="15" fill="rgb(233,92,54)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.07%)</title><rect x="86.3863%" y="293" width="0.0713%" height="15" fill="rgb(237,21,14)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="86.3863%" y="277" width="0.0713%" height="15" fill="rgb(249,128,51)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="287.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="86.3863%" y="261" width="0.0713%" height="15" fill="rgb(223,129,24)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="271.50"></text></g><g><title>&lt;rand_distr::normal::Normal&lt;F&gt; as rand::distributions::distribution::Distribution&lt;F&gt;&gt;::sample (1 samples, 0.07%)</title><rect x="86.3863%" y="245" width="0.0713%" height="15" fill="rgb(231,168,25)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="255.50"></text></g><g><title>rand::rng::Rng::sample (1 samples, 0.07%)</title><rect x="86.3863%" y="229" width="0.0713%" height="15" fill="rgb(224,39,20)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="239.50"></text></g><g><title>rand_distr::utils::ziggurat (1 samples, 0.07%)</title><rect x="86.3863%" y="213" width="0.0713%" height="15" fill="rgb(225,152,53)" fg:x="1212" fg:w="1"/><text x="86.6363%" y="223.50"></text></g><g><title>rayon_core::registry::main_loop (10 samples, 0.71%)</title><rect x="85.8161%" y="1621" width="0.7128%" height="15" fill="rgb(252,17,24)" fg:x="1204" fg:w="10"/><text x="86.0661%" y="1631.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (10 samples, 0.71%)</title><rect x="85.8161%" y="1605" width="0.7128%" height="15" fill="rgb(250,114,30)" fg:x="1204" fg:w="10"/><text x="86.0661%" y="1615.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (10 samples, 0.71%)</title><rect x="85.8161%" y="1589" width="0.7128%" height="15" fill="rgb(229,5,4)" fg:x="1204" fg:w="10"/><text x="86.0661%" y="1599.50"></text></g><g><title>rayon_core::job::JobRef::execute (10 samples, 0.71%)</title><rect x="85.8161%" y="1573" width="0.7128%" height="15" fill="rgb(225,176,49)" fg:x="1204" fg:w="10"/><text x="86.0661%" y="1583.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (10 samples, 0.71%)</title><rect x="85.8161%" y="1557" width="0.7128%" height="15" fill="rgb(224,221,49)" fg:x="1204" fg:w="10"/><text x="86.0661%" y="1567.50"></text></g><g><title>std::panic::catch_unwind (10 samples, 0.71%)</title><rect x="85.8161%" y="1541" width="0.7128%" height="15" fill="rgb(253,169,27)" fg:x="1204" fg:w="10"/><text x="86.0661%" y="1551.50"></text></g><g><title>std::panicking::try (3 samples, 0.21%)</title><rect x="86.3150%" y="1525" width="0.2138%" height="15" fill="rgb(211,206,16)" fg:x="1211" fg:w="3"/><text x="86.5650%" y="1535.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.21%)</title><rect x="86.3150%" y="1509" width="0.2138%" height="15" fill="rgb(244,87,35)" fg:x="1211" fg:w="3"/><text x="86.5650%" y="1519.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.21%)</title><rect x="86.3150%" y="1493" width="0.2138%" height="15" fill="rgb(246,28,10)" fg:x="1211" fg:w="3"/><text x="86.5650%" y="1503.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (3 samples, 0.21%)</title><rect x="86.3150%" y="1477" width="0.2138%" height="15" fill="rgb(229,12,44)" fg:x="1211" fg:w="3"/><text x="86.5650%" y="1487.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (3 samples, 0.21%)</title><rect x="86.3150%" y="1461" width="0.2138%" height="15" fill="rgb(210,145,37)" fg:x="1211" fg:w="3"/><text x="86.5650%" y="1471.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (3 samples, 0.21%)</title><rect x="86.3150%" y="1445" width="0.2138%" height="15" fill="rgb(227,112,52)" fg:x="1211" fg:w="3"/><text x="86.5650%" y="1455.50"></text></g><g><title>rayon_core::join::join_context (3 samples, 0.21%)</title><rect x="86.3150%" y="1429" width="0.2138%" height="15" fill="rgb(238,155,34)" fg:x="1211" fg:w="3"/><text x="86.5650%" y="1439.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3 samples, 0.21%)</title><rect x="86.3150%" y="1413" width="0.2138%" height="15" fill="rgb(239,226,36)" fg:x="1211" fg:w="3"/><text x="86.5650%" y="1423.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="86.4576%" y="1397" width="0.0713%" height="15" fill="rgb(230,16,23)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="1407.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="86.4576%" y="1381" width="0.0713%" height="15" fill="rgb(236,171,36)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="1391.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="86.4576%" y="1365" width="0.0713%" height="15" fill="rgb(221,22,14)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="1375.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="86.4576%" y="1349" width="0.0713%" height="15" fill="rgb(242,43,11)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="1359.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="86.4576%" y="1333" width="0.0713%" height="15" fill="rgb(232,69,23)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="1343.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="86.4576%" y="1317" width="0.0713%" height="15" fill="rgb(216,180,54)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="1327.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="86.4576%" y="1301" width="0.0713%" height="15" fill="rgb(216,5,24)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="1311.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="86.4576%" y="1285" width="0.0713%" height="15" fill="rgb(225,89,9)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="1295.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="86.4576%" y="1269" width="0.0713%" height="15" fill="rgb(243,75,33)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="1279.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.07%)</title><rect x="86.4576%" y="1253" width="0.0713%" height="15" fill="rgb(247,141,45)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="1263.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (1 samples, 0.07%)</title><rect x="86.4576%" y="1237" width="0.0713%" height="15" fill="rgb(232,177,36)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="1247.50"></text></g><g><title>rayon_core::job::JobRef::execute (1 samples, 0.07%)</title><rect x="86.4576%" y="1221" width="0.0713%" height="15" fill="rgb(219,125,36)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="1231.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="86.4576%" y="1205" width="0.0713%" height="15" fill="rgb(227,94,9)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="1215.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="86.4576%" y="1189" width="0.0713%" height="15" fill="rgb(240,34,52)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="1199.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="86.4576%" y="1173" width="0.0713%" height="15" fill="rgb(216,45,12)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="1183.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="86.4576%" y="1157" width="0.0713%" height="15" fill="rgb(246,21,19)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="1167.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="86.4576%" y="1141" width="0.0713%" height="15" fill="rgb(213,98,42)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="1151.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (1 samples, 0.07%)</title><rect x="86.4576%" y="1125" width="0.0713%" height="15" fill="rgb(250,136,47)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="86.4576%" y="1109" width="0.0713%" height="15" fill="rgb(251,124,27)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="1119.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="86.4576%" y="1093" width="0.0713%" height="15" fill="rgb(229,180,14)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="1103.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="86.4576%" y="1077" width="0.0713%" height="15" fill="rgb(245,216,25)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="1087.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="86.4576%" y="1061" width="0.0713%" height="15" fill="rgb(251,43,5)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="1071.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="86.4576%" y="1045" width="0.0713%" height="15" fill="rgb(250,128,24)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="1055.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="86.4576%" y="1029" width="0.0713%" height="15" fill="rgb(217,117,27)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="1039.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="86.4576%" y="1013" width="0.0713%" height="15" fill="rgb(245,147,4)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="86.4576%" y="997" width="0.0713%" height="15" fill="rgb(242,201,35)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="1007.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="86.4576%" y="981" width="0.0713%" height="15" fill="rgb(218,181,1)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="991.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="86.4576%" y="965" width="0.0713%" height="15" fill="rgb(222,6,29)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="975.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="86.4576%" y="949" width="0.0713%" height="15" fill="rgb(208,186,3)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="959.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="86.4576%" y="933" width="0.0713%" height="15" fill="rgb(216,36,26)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="943.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="86.4576%" y="917" width="0.0713%" height="15" fill="rgb(248,201,23)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="927.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="86.4576%" y="901" width="0.0713%" height="15" fill="rgb(251,170,31)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="911.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="86.4576%" y="885" width="0.0713%" height="15" fill="rgb(207,110,25)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="895.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="86.4576%" y="869" width="0.0713%" height="15" fill="rgb(250,54,15)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="879.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="86.4576%" y="853" width="0.0713%" height="15" fill="rgb(227,68,33)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="863.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="86.4576%" y="837" width="0.0713%" height="15" fill="rgb(238,34,41)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="847.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="86.4576%" y="821" width="0.0713%" height="15" fill="rgb(220,11,15)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="831.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="86.4576%" y="805" width="0.0713%" height="15" fill="rgb(246,111,35)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="815.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="86.4576%" y="789" width="0.0713%" height="15" fill="rgb(209,88,53)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="799.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="86.4576%" y="773" width="0.0713%" height="15" fill="rgb(231,185,47)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="783.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="86.4576%" y="757" width="0.0713%" height="15" fill="rgb(233,154,1)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="767.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="86.4576%" y="741" width="0.0713%" height="15" fill="rgb(225,15,46)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="751.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="86.4576%" y="725" width="0.0713%" height="15" fill="rgb(211,135,41)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="735.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="86.4576%" y="709" width="0.0713%" height="15" fill="rgb(208,54,0)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="719.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="86.4576%" y="693" width="0.0713%" height="15" fill="rgb(244,136,14)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="703.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="86.4576%" y="677" width="0.0713%" height="15" fill="rgb(241,56,14)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="687.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="86.4576%" y="661" width="0.0713%" height="15" fill="rgb(205,80,24)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="671.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="86.4576%" y="645" width="0.0713%" height="15" fill="rgb(220,57,4)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="655.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="86.4576%" y="629" width="0.0713%" height="15" fill="rgb(226,193,50)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="639.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="86.4576%" y="613" width="0.0713%" height="15" fill="rgb(231,168,22)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="623.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="86.4576%" y="597" width="0.0713%" height="15" fill="rgb(254,215,14)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="607.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="86.4576%" y="581" width="0.0713%" height="15" fill="rgb(211,115,16)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="591.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="86.4576%" y="565" width="0.0713%" height="15" fill="rgb(236,210,16)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="575.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="86.4576%" y="549" width="0.0713%" height="15" fill="rgb(221,94,12)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="559.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="86.4576%" y="533" width="0.0713%" height="15" fill="rgb(235,218,49)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="543.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.07%)</title><rect x="86.4576%" y="517" width="0.0713%" height="15" fill="rgb(217,114,14)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="527.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="86.4576%" y="501" width="0.0713%" height="15" fill="rgb(216,145,22)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="511.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="86.4576%" y="485" width="0.0713%" height="15" fill="rgb(217,112,39)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="86.4576%" y="469" width="0.0713%" height="15" fill="rgb(225,85,32)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="479.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="86.4576%" y="453" width="0.0713%" height="15" fill="rgb(245,209,47)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="463.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="86.4576%" y="437" width="0.0713%" height="15" fill="rgb(218,220,15)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="447.50"></text></g><g><title>ldpc::utils::count_differences (1 samples, 0.07%)</title><rect x="86.4576%" y="421" width="0.0713%" height="15" fill="rgb(222,202,31)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (1 samples, 0.07%)</title><rect x="86.4576%" y="405" width="0.0713%" height="15" fill="rgb(243,203,4)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.07%)</title><rect x="86.4576%" y="389" width="0.0713%" height="15" fill="rgb(237,92,17)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="399.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.07%)</title><rect x="86.4576%" y="373" width="0.0713%" height="15" fill="rgb(231,119,7)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="86.4576%" y="357" width="0.0713%" height="15" fill="rgb(237,82,41)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="86.4576%" y="341" width="0.0713%" height="15" fill="rgb(226,81,48)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="351.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="86.4576%" y="325" width="0.0713%" height="15" fill="rgb(234,70,51)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="335.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (1 samples, 0.07%)</title><rect x="86.4576%" y="309" width="0.0713%" height="15" fill="rgb(251,86,4)" fg:x="1213" fg:w="1"/><text x="86.7076%" y="319.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.07%)</title><rect x="86.5289%" y="1461" width="0.0713%" height="15" fill="rgb(244,144,28)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="1471.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (1 samples, 0.07%)</title><rect x="86.5289%" y="1445" width="0.0713%" height="15" fill="rgb(232,161,39)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="1455.50"></text></g><g><title>rayon_core::job::JobRef::execute (1 samples, 0.07%)</title><rect x="86.5289%" y="1429" width="0.0713%" height="15" fill="rgb(247,34,51)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="1439.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="86.5289%" y="1413" width="0.0713%" height="15" fill="rgb(225,132,2)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="1423.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="86.5289%" y="1397" width="0.0713%" height="15" fill="rgb(209,159,44)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="1407.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="86.5289%" y="1381" width="0.0713%" height="15" fill="rgb(251,214,1)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="1391.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="86.5289%" y="1365" width="0.0713%" height="15" fill="rgb(247,84,47)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="1375.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="86.5289%" y="1349" width="0.0713%" height="15" fill="rgb(240,111,43)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="1359.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (1 samples, 0.07%)</title><rect x="86.5289%" y="1333" width="0.0713%" height="15" fill="rgb(215,214,35)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="1343.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="86.5289%" y="1317" width="0.0713%" height="15" fill="rgb(248,207,23)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="1327.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="86.5289%" y="1301" width="0.0713%" height="15" fill="rgb(214,186,4)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="1311.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="86.5289%" y="1285" width="0.0713%" height="15" fill="rgb(220,133,22)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="1295.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="86.5289%" y="1269" width="0.0713%" height="15" fill="rgb(239,134,19)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="1279.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.07%)</title><rect x="86.5289%" y="1253" width="0.0713%" height="15" fill="rgb(250,140,9)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="1263.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (1 samples, 0.07%)</title><rect x="86.5289%" y="1237" width="0.0713%" height="15" fill="rgb(225,59,14)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="1247.50"></text></g><g><title>rayon_core::job::JobRef::execute (1 samples, 0.07%)</title><rect x="86.5289%" y="1221" width="0.0713%" height="15" fill="rgb(214,152,51)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="1231.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="86.5289%" y="1205" width="0.0713%" height="15" fill="rgb(251,227,43)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="1215.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="86.5289%" y="1189" width="0.0713%" height="15" fill="rgb(241,96,17)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="1199.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="86.5289%" y="1173" width="0.0713%" height="15" fill="rgb(234,198,43)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="1183.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="86.5289%" y="1157" width="0.0713%" height="15" fill="rgb(220,108,29)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="1167.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="86.5289%" y="1141" width="0.0713%" height="15" fill="rgb(226,163,33)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="1151.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (1 samples, 0.07%)</title><rect x="86.5289%" y="1125" width="0.0713%" height="15" fill="rgb(205,194,45)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="86.5289%" y="1109" width="0.0713%" height="15" fill="rgb(206,143,44)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="1119.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="86.5289%" y="1093" width="0.0713%" height="15" fill="rgb(236,136,36)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="1103.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="86.5289%" y="1077" width="0.0713%" height="15" fill="rgb(249,172,42)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="1087.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="86.5289%" y="1061" width="0.0713%" height="15" fill="rgb(216,139,23)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="1071.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="86.5289%" y="1045" width="0.0713%" height="15" fill="rgb(207,166,20)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="1055.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="86.5289%" y="1029" width="0.0713%" height="15" fill="rgb(210,209,22)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="1039.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="86.5289%" y="1013" width="0.0713%" height="15" fill="rgb(232,118,20)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="86.5289%" y="997" width="0.0713%" height="15" fill="rgb(238,113,42)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="1007.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="86.5289%" y="981" width="0.0713%" height="15" fill="rgb(231,42,5)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="991.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="86.5289%" y="965" width="0.0713%" height="15" fill="rgb(243,166,24)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="975.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="86.5289%" y="949" width="0.0713%" height="15" fill="rgb(237,226,12)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="959.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="86.5289%" y="933" width="0.0713%" height="15" fill="rgb(229,133,24)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="943.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="86.5289%" y="917" width="0.0713%" height="15" fill="rgb(238,33,43)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="927.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="86.5289%" y="901" width="0.0713%" height="15" fill="rgb(227,59,38)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="911.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="86.5289%" y="885" width="0.0713%" height="15" fill="rgb(230,97,0)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="895.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="86.5289%" y="869" width="0.0713%" height="15" fill="rgb(250,173,50)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="879.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="86.5289%" y="853" width="0.0713%" height="15" fill="rgb(240,15,50)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="863.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="86.5289%" y="837" width="0.0713%" height="15" fill="rgb(221,93,22)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="847.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="86.5289%" y="821" width="0.0713%" height="15" fill="rgb(245,180,53)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="831.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="86.5289%" y="805" width="0.0713%" height="15" fill="rgb(231,88,51)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="815.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="86.5289%" y="789" width="0.0713%" height="15" fill="rgb(240,58,21)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="799.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="86.5289%" y="773" width="0.0713%" height="15" fill="rgb(237,21,10)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="783.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="86.5289%" y="757" width="0.0713%" height="15" fill="rgb(218,43,11)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="767.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="86.5289%" y="741" width="0.0713%" height="15" fill="rgb(218,221,29)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="751.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="86.5289%" y="725" width="0.0713%" height="15" fill="rgb(214,118,42)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="735.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="86.5289%" y="709" width="0.0713%" height="15" fill="rgb(251,200,26)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="719.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="86.5289%" y="693" width="0.0713%" height="15" fill="rgb(237,101,39)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="703.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="86.5289%" y="677" width="0.0713%" height="15" fill="rgb(251,117,11)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="687.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="86.5289%" y="661" width="0.0713%" height="15" fill="rgb(216,223,23)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="671.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="86.5289%" y="645" width="0.0713%" height="15" fill="rgb(251,54,12)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="655.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="86.5289%" y="629" width="0.0713%" height="15" fill="rgb(254,176,54)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="639.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="86.5289%" y="613" width="0.0713%" height="15" fill="rgb(210,32,8)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="623.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="86.5289%" y="597" width="0.0713%" height="15" fill="rgb(235,52,38)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="607.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="86.5289%" y="581" width="0.0713%" height="15" fill="rgb(231,4,44)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="591.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="86.5289%" y="565" width="0.0713%" height="15" fill="rgb(249,2,32)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="575.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="86.5289%" y="549" width="0.0713%" height="15" fill="rgb(224,65,26)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="559.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="86.5289%" y="533" width="0.0713%" height="15" fill="rgb(250,73,40)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="543.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="86.5289%" y="517" width="0.0713%" height="15" fill="rgb(253,177,16)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="527.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="86.5289%" y="501" width="0.0713%" height="15" fill="rgb(217,32,34)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="511.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="86.5289%" y="485" width="0.0713%" height="15" fill="rgb(212,7,10)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="495.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="86.5289%" y="469" width="0.0713%" height="15" fill="rgb(245,89,8)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="479.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="86.5289%" y="453" width="0.0713%" height="15" fill="rgb(237,16,53)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="463.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="86.5289%" y="437" width="0.0713%" height="15" fill="rgb(250,204,30)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="447.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="86.5289%" y="421" width="0.0713%" height="15" fill="rgb(208,77,27)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="431.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="86.5289%" y="405" width="0.0713%" height="15" fill="rgb(250,204,28)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="415.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="86.5289%" y="389" width="0.0713%" height="15" fill="rgb(244,63,21)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="399.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="86.5289%" y="373" width="0.0713%" height="15" fill="rgb(236,85,44)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="383.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.07%)</title><rect x="86.5289%" y="357" width="0.0713%" height="15" fill="rgb(215,98,4)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="367.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="86.5289%" y="341" width="0.0713%" height="15" fill="rgb(235,38,11)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="351.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="86.5289%" y="325" width="0.0713%" height="15" fill="rgb(254,186,25)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="86.5289%" y="309" width="0.0713%" height="15" fill="rgb(225,55,31)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="319.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="86.5289%" y="293" width="0.0713%" height="15" fill="rgb(211,15,21)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="303.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="86.5289%" y="277" width="0.0713%" height="15" fill="rgb(215,187,41)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="86.5289%" y="261" width="0.0713%" height="15" fill="rgb(248,69,32)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="86.5289%" y="245" width="0.0713%" height="15" fill="rgb(252,102,52)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="86.5289%" y="229" width="0.0713%" height="15" fill="rgb(253,140,32)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="86.5289%" y="213" width="0.0713%" height="15" fill="rgb(216,56,42)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.07%)</title><rect x="86.5289%" y="197" width="0.0713%" height="15" fill="rgb(216,184,14)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="86.5289%" y="181" width="0.0713%" height="15" fill="rgb(237,187,27)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="86.5289%" y="165" width="0.0713%" height="15" fill="rgb(219,65,3)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.07%)</title><rect x="86.5289%" y="149" width="0.0713%" height="15" fill="rgb(245,83,25)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="86.5289%" y="133" width="0.0713%" height="15" fill="rgb(214,205,45)" fg:x="1214" fg:w="1"/><text x="86.7789%" y="143.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (2 samples, 0.14%)</title><rect x="86.5289%" y="1621" width="0.1426%" height="15" fill="rgb(241,20,18)" fg:x="1214" fg:w="2"/><text x="86.7789%" y="1631.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.14%)</title><rect x="86.5289%" y="1605" width="0.1426%" height="15" fill="rgb(232,163,23)" fg:x="1214" fg:w="2"/><text x="86.7789%" y="1615.50"></text></g><g><title>std::panicking::try (2 samples, 0.14%)</title><rect x="86.5289%" y="1589" width="0.1426%" height="15" fill="rgb(214,5,46)" fg:x="1214" fg:w="2"/><text x="86.7789%" y="1599.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.14%)</title><rect x="86.5289%" y="1573" width="0.1426%" height="15" fill="rgb(229,78,17)" fg:x="1214" fg:w="2"/><text x="86.7789%" y="1583.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.14%)</title><rect x="86.5289%" y="1557" width="0.1426%" height="15" fill="rgb(248,89,10)" fg:x="1214" fg:w="2"/><text x="86.7789%" y="1567.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (2 samples, 0.14%)</title><rect x="86.5289%" y="1541" width="0.1426%" height="15" fill="rgb(248,54,15)" fg:x="1214" fg:w="2"/><text x="86.7789%" y="1551.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (2 samples, 0.14%)</title><rect x="86.5289%" y="1525" width="0.1426%" height="15" fill="rgb(223,116,6)" fg:x="1214" fg:w="2"/><text x="86.7789%" y="1535.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (2 samples, 0.14%)</title><rect x="86.5289%" y="1509" width="0.1426%" height="15" fill="rgb(205,125,38)" fg:x="1214" fg:w="2"/><text x="86.7789%" y="1519.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 0.14%)</title><rect x="86.5289%" y="1493" width="0.1426%" height="15" fill="rgb(251,78,38)" fg:x="1214" fg:w="2"/><text x="86.7789%" y="1503.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2 samples, 0.14%)</title><rect x="86.5289%" y="1477" width="0.1426%" height="15" fill="rgb(253,78,28)" fg:x="1214" fg:w="2"/><text x="86.7789%" y="1487.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="86.6001%" y="1461" width="0.0713%" height="15" fill="rgb(209,120,3)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="1471.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="86.6001%" y="1445" width="0.0713%" height="15" fill="rgb(238,229,9)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="1455.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="86.6001%" y="1429" width="0.0713%" height="15" fill="rgb(253,159,18)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="1439.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="86.6001%" y="1413" width="0.0713%" height="15" fill="rgb(244,42,34)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="1423.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="86.6001%" y="1397" width="0.0713%" height="15" fill="rgb(224,8,7)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="1407.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="86.6001%" y="1381" width="0.0713%" height="15" fill="rgb(210,201,45)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="1391.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="86.6001%" y="1365" width="0.0713%" height="15" fill="rgb(252,185,21)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="1375.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="86.6001%" y="1349" width="0.0713%" height="15" fill="rgb(223,131,1)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="1359.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="86.6001%" y="1333" width="0.0713%" height="15" fill="rgb(245,141,16)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="1343.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.07%)</title><rect x="86.6001%" y="1317" width="0.0713%" height="15" fill="rgb(229,55,45)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="1327.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (1 samples, 0.07%)</title><rect x="86.6001%" y="1301" width="0.0713%" height="15" fill="rgb(208,92,15)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="1311.50"></text></g><g><title>rayon_core::job::JobRef::execute (1 samples, 0.07%)</title><rect x="86.6001%" y="1285" width="0.0713%" height="15" fill="rgb(234,185,47)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="1295.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="86.6001%" y="1269" width="0.0713%" height="15" fill="rgb(253,104,50)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="1279.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="86.6001%" y="1253" width="0.0713%" height="15" fill="rgb(205,70,7)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="1263.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="86.6001%" y="1237" width="0.0713%" height="15" fill="rgb(240,178,43)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="1247.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="86.6001%" y="1221" width="0.0713%" height="15" fill="rgb(214,112,2)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="1231.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="86.6001%" y="1205" width="0.0713%" height="15" fill="rgb(206,46,17)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="1215.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (1 samples, 0.07%)</title><rect x="86.6001%" y="1189" width="0.0713%" height="15" fill="rgb(225,220,16)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="86.6001%" y="1173" width="0.0713%" height="15" fill="rgb(238,65,40)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="1183.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="86.6001%" y="1157" width="0.0713%" height="15" fill="rgb(230,151,21)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="1167.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="86.6001%" y="1141" width="0.0713%" height="15" fill="rgb(218,58,49)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="86.6001%" y="1125" width="0.0713%" height="15" fill="rgb(219,179,14)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="1135.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="86.6001%" y="1109" width="0.0713%" height="15" fill="rgb(223,72,1)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="1119.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="86.6001%" y="1093" width="0.0713%" height="15" fill="rgb(238,126,10)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="1103.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="86.6001%" y="1077" width="0.0713%" height="15" fill="rgb(224,206,38)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="1087.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="86.6001%" y="1061" width="0.0713%" height="15" fill="rgb(212,201,54)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="1071.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="86.6001%" y="1045" width="0.0713%" height="15" fill="rgb(218,154,48)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="86.6001%" y="1029" width="0.0713%" height="15" fill="rgb(232,93,24)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="1039.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="86.6001%" y="1013" width="0.0713%" height="15" fill="rgb(245,30,21)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="1023.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="86.6001%" y="997" width="0.0713%" height="15" fill="rgb(242,148,29)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="1007.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="86.6001%" y="981" width="0.0713%" height="15" fill="rgb(244,153,54)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="991.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="86.6001%" y="965" width="0.0713%" height="15" fill="rgb(252,87,22)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="975.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="86.6001%" y="949" width="0.0713%" height="15" fill="rgb(210,51,29)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="959.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="86.6001%" y="933" width="0.0713%" height="15" fill="rgb(242,136,47)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="943.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="86.6001%" y="917" width="0.0713%" height="15" fill="rgb(238,68,4)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="927.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="86.6001%" y="901" width="0.0713%" height="15" fill="rgb(242,161,30)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="911.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="86.6001%" y="885" width="0.0713%" height="15" fill="rgb(218,58,44)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="895.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="86.6001%" y="869" width="0.0713%" height="15" fill="rgb(252,125,32)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="879.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="86.6001%" y="853" width="0.0713%" height="15" fill="rgb(219,178,0)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="863.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="86.6001%" y="837" width="0.0713%" height="15" fill="rgb(213,152,7)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="847.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="86.6001%" y="821" width="0.0713%" height="15" fill="rgb(249,109,34)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="831.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="86.6001%" y="805" width="0.0713%" height="15" fill="rgb(232,96,21)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="815.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="86.6001%" y="789" width="0.0713%" height="15" fill="rgb(228,27,39)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="799.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="86.6001%" y="773" width="0.0713%" height="15" fill="rgb(211,182,52)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="783.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="86.6001%" y="757" width="0.0713%" height="15" fill="rgb(234,178,38)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="767.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="86.6001%" y="741" width="0.0713%" height="15" fill="rgb(221,111,3)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="751.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="86.6001%" y="725" width="0.0713%" height="15" fill="rgb(228,175,21)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="735.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="86.6001%" y="709" width="0.0713%" height="15" fill="rgb(228,174,43)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="719.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="86.6001%" y="693" width="0.0713%" height="15" fill="rgb(211,191,0)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="703.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="86.6001%" y="677" width="0.0713%" height="15" fill="rgb(253,117,3)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="687.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.07%)</title><rect x="86.6001%" y="661" width="0.0713%" height="15" fill="rgb(241,127,19)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="671.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="86.6001%" y="645" width="0.0713%" height="15" fill="rgb(218,103,12)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="655.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="86.6001%" y="629" width="0.0713%" height="15" fill="rgb(236,214,43)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="86.6001%" y="613" width="0.0713%" height="15" fill="rgb(244,144,19)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="623.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="86.6001%" y="597" width="0.0713%" height="15" fill="rgb(246,188,10)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="607.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="86.6001%" y="581" width="0.0713%" height="15" fill="rgb(212,193,33)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="86.6001%" y="565" width="0.0713%" height="15" fill="rgb(241,51,29)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="86.6001%" y="549" width="0.0713%" height="15" fill="rgb(211,58,19)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="86.6001%" y="533" width="0.0713%" height="15" fill="rgb(229,111,26)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="86.6001%" y="517" width="0.0713%" height="15" fill="rgb(213,115,40)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.07%)</title><rect x="86.6001%" y="501" width="0.0713%" height="15" fill="rgb(209,56,44)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="86.6001%" y="485" width="0.0713%" height="15" fill="rgb(230,108,32)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="86.6001%" y="469" width="0.0713%" height="15" fill="rgb(216,165,31)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.07%)</title><rect x="86.6001%" y="453" width="0.0713%" height="15" fill="rgb(218,122,21)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="86.6001%" y="437" width="0.0713%" height="15" fill="rgb(223,224,47)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="447.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="86.6001%" y="421" width="0.0713%" height="15" fill="rgb(238,102,44)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="431.50"></text></g><g><title>&lt;rand_distr::normal::Normal&lt;F&gt; as rand::distributions::distribution::Distribution&lt;F&gt;&gt;::sample (1 samples, 0.07%)</title><rect x="86.6001%" y="405" width="0.0713%" height="15" fill="rgb(236,46,40)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="415.50"></text></g><g><title>rand::rng::Rng::sample (1 samples, 0.07%)</title><rect x="86.6001%" y="389" width="0.0713%" height="15" fill="rgb(247,202,50)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="399.50"></text></g><g><title>rand_distr::utils::ziggurat (1 samples, 0.07%)</title><rect x="86.6001%" y="373" width="0.0713%" height="15" fill="rgb(209,99,20)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="383.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::abs (1 samples, 0.07%)</title><rect x="86.6001%" y="357" width="0.0713%" height="15" fill="rgb(252,27,34)" fg:x="1215" fg:w="1"/><text x="86.8501%" y="367.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="86.6714%" y="1173" width="0.0713%" height="15" fill="rgb(215,206,23)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="1183.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="86.6714%" y="1157" width="0.0713%" height="15" fill="rgb(212,135,36)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="1167.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="86.6714%" y="1141" width="0.0713%" height="15" fill="rgb(240,189,1)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="86.6714%" y="1125" width="0.0713%" height="15" fill="rgb(242,56,20)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="1135.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="86.6714%" y="1109" width="0.0713%" height="15" fill="rgb(247,132,33)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="1119.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="86.6714%" y="1093" width="0.0713%" height="15" fill="rgb(208,149,11)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="1103.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="86.6714%" y="1077" width="0.0713%" height="15" fill="rgb(211,33,11)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="1087.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="86.6714%" y="1061" width="0.0713%" height="15" fill="rgb(221,29,38)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="1071.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="86.6714%" y="1045" width="0.0713%" height="15" fill="rgb(206,182,49)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="86.6714%" y="1029" width="0.0713%" height="15" fill="rgb(216,140,1)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="1039.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="86.6714%" y="1013" width="0.0713%" height="15" fill="rgb(232,57,40)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="1023.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="86.6714%" y="997" width="0.0713%" height="15" fill="rgb(224,186,18)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="1007.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="86.6714%" y="981" width="0.0713%" height="15" fill="rgb(215,121,11)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="991.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="86.6714%" y="965" width="0.0713%" height="15" fill="rgb(245,147,10)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="975.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="86.6714%" y="949" width="0.0713%" height="15" fill="rgb(238,153,13)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="959.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="86.6714%" y="933" width="0.0713%" height="15" fill="rgb(233,108,0)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="943.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="86.6714%" y="917" width="0.0713%" height="15" fill="rgb(212,157,17)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="927.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="86.6714%" y="901" width="0.0713%" height="15" fill="rgb(225,213,38)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="911.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="86.6714%" y="885" width="0.0713%" height="15" fill="rgb(248,16,11)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="895.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="86.6714%" y="869" width="0.0713%" height="15" fill="rgb(241,33,4)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="879.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="86.6714%" y="853" width="0.0713%" height="15" fill="rgb(222,26,43)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="863.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="86.6714%" y="837" width="0.0713%" height="15" fill="rgb(243,29,36)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="847.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="86.6714%" y="821" width="0.0713%" height="15" fill="rgb(241,9,27)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="831.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="86.6714%" y="805" width="0.0713%" height="15" fill="rgb(205,117,26)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="815.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="86.6714%" y="789" width="0.0713%" height="15" fill="rgb(209,80,39)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="799.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="86.6714%" y="773" width="0.0713%" height="15" fill="rgb(239,155,6)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="783.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="86.6714%" y="757" width="0.0713%" height="15" fill="rgb(212,104,12)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="767.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="86.6714%" y="741" width="0.0713%" height="15" fill="rgb(234,204,3)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="86.6714%" y="725" width="0.0713%" height="15" fill="rgb(251,218,7)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="735.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.07%)</title><rect x="86.6714%" y="709" width="0.0713%" height="15" fill="rgb(221,81,32)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="719.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="86.6714%" y="693" width="0.0713%" height="15" fill="rgb(214,152,26)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="703.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="86.6714%" y="677" width="0.0713%" height="15" fill="rgb(223,22,3)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="86.6714%" y="661" width="0.0713%" height="15" fill="rgb(207,174,7)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="671.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="86.6714%" y="645" width="0.0713%" height="15" fill="rgb(224,19,52)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="655.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="86.6714%" y="629" width="0.0713%" height="15" fill="rgb(228,24,14)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="86.6714%" y="613" width="0.0713%" height="15" fill="rgb(230,153,43)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="86.6714%" y="597" width="0.0713%" height="15" fill="rgb(231,106,12)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="86.6714%" y="581" width="0.0713%" height="15" fill="rgb(215,92,2)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="86.6714%" y="565" width="0.0713%" height="15" fill="rgb(249,143,25)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.07%)</title><rect x="86.6714%" y="549" width="0.0713%" height="15" fill="rgb(252,7,35)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="86.6714%" y="533" width="0.0713%" height="15" fill="rgb(216,69,40)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="86.6714%" y="517" width="0.0713%" height="15" fill="rgb(240,36,33)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.07%)</title><rect x="86.6714%" y="501" width="0.0713%" height="15" fill="rgb(231,128,14)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="86.6714%" y="485" width="0.0713%" height="15" fill="rgb(245,143,14)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="495.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="86.6714%" y="469" width="0.0713%" height="15" fill="rgb(222,130,28)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="479.50"></text></g><g><title>&lt;rand_distr::normal::Normal&lt;F&gt; as rand::distributions::distribution::Distribution&lt;F&gt;&gt;::sample (1 samples, 0.07%)</title><rect x="86.6714%" y="453" width="0.0713%" height="15" fill="rgb(212,10,48)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="463.50"></text></g><g><title>rand::rng::Rng::sample (1 samples, 0.07%)</title><rect x="86.6714%" y="437" width="0.0713%" height="15" fill="rgb(254,118,45)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="447.50"></text></g><g><title>rand_distr::utils::ziggurat (1 samples, 0.07%)</title><rect x="86.6714%" y="421" width="0.0713%" height="15" fill="rgb(228,6,45)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="431.50"></text></g><g><title>&lt;&amp;mut R as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="86.6714%" y="405" width="0.0713%" height="15" fill="rgb(241,18,35)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="415.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="86.6714%" y="389" width="0.0713%" height="15" fill="rgb(227,214,53)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="399.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="86.6714%" y="373" width="0.0713%" height="15" fill="rgb(224,107,51)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="383.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="86.6714%" y="357" width="0.0713%" height="15" fill="rgb(248,60,28)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="367.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (1 samples, 0.07%)</title><rect x="86.6714%" y="341" width="0.0713%" height="15" fill="rgb(249,101,23)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="351.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.07%)</title><rect x="86.6714%" y="325" width="0.0713%" height="15" fill="rgb(228,51,19)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="335.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.07%)</title><rect x="86.6714%" y="309" width="0.0713%" height="15" fill="rgb(213,20,6)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="319.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (1 samples, 0.07%)</title><rect x="86.6714%" y="293" width="0.0713%" height="15" fill="rgb(212,124,10)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="303.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (1 samples, 0.07%)</title><rect x="86.6714%" y="277" width="0.0713%" height="15" fill="rgb(248,3,40)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="287.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (1 samples, 0.07%)</title><rect x="86.6714%" y="261" width="0.0713%" height="15" fill="rgb(223,178,23)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="271.50"></text></g><g><title>rand_chacha::guts::round (1 samples, 0.07%)</title><rect x="86.6714%" y="245" width="0.0713%" height="15" fill="rgb(240,132,45)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="255.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (1 samples, 0.07%)</title><rect x="86.6714%" y="229" width="0.0713%" height="15" fill="rgb(245,164,36)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="239.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (1 samples, 0.07%)</title><rect x="86.6714%" y="213" width="0.0713%" height="15" fill="rgb(231,188,53)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="223.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.07%)</title><rect x="86.6714%" y="197" width="0.0713%" height="15" fill="rgb(237,198,39)" fg:x="1216" fg:w="1"/><text x="86.9214%" y="207.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (2 samples, 0.14%)</title><rect x="86.6714%" y="1237" width="0.1426%" height="15" fill="rgb(223,120,35)" fg:x="1216" fg:w="2"/><text x="86.9214%" y="1247.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (2 samples, 0.14%)</title><rect x="86.6714%" y="1221" width="0.1426%" height="15" fill="rgb(253,107,49)" fg:x="1216" fg:w="2"/><text x="86.9214%" y="1231.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 0.14%)</title><rect x="86.6714%" y="1205" width="0.1426%" height="15" fill="rgb(216,44,31)" fg:x="1216" fg:w="2"/><text x="86.9214%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2 samples, 0.14%)</title><rect x="86.6714%" y="1189" width="0.1426%" height="15" fill="rgb(253,87,21)" fg:x="1216" fg:w="2"/><text x="86.9214%" y="1199.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="86.7427%" y="1173" width="0.0713%" height="15" fill="rgb(226,18,2)" fg:x="1217" fg:w="1"/><text x="86.9927%" y="1183.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="86.7427%" y="1157" width="0.0713%" height="15" fill="rgb(216,8,46)" fg:x="1217" fg:w="1"/><text x="86.9927%" y="1167.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="86.7427%" y="1141" width="0.0713%" height="15" fill="rgb(226,140,39)" fg:x="1217" fg:w="1"/><text x="86.9927%" y="1151.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="86.7427%" y="1125" width="0.0713%" height="15" fill="rgb(221,194,54)" fg:x="1217" fg:w="1"/><text x="86.9927%" y="1135.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="86.7427%" y="1109" width="0.0713%" height="15" fill="rgb(213,92,11)" fg:x="1217" fg:w="1"/><text x="86.9927%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="86.7427%" y="1093" width="0.0713%" height="15" fill="rgb(229,162,46)" fg:x="1217" fg:w="1"/><text x="86.9927%" y="1103.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="86.7427%" y="1077" width="0.0713%" height="15" fill="rgb(214,111,36)" fg:x="1217" fg:w="1"/><text x="86.9927%" y="1087.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="86.7427%" y="1061" width="0.0713%" height="15" fill="rgb(207,6,21)" fg:x="1217" fg:w="1"/><text x="86.9927%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="86.7427%" y="1045" width="0.0713%" height="15" fill="rgb(213,127,38)" fg:x="1217" fg:w="1"/><text x="86.9927%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="86.7427%" y="1029" width="0.0713%" height="15" fill="rgb(238,118,32)" fg:x="1217" fg:w="1"/><text x="86.9927%" y="1039.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="86.7427%" y="1013" width="0.0713%" height="15" fill="rgb(240,139,39)" fg:x="1217" fg:w="1"/><text x="86.9927%" y="1023.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="86.7427%" y="997" width="0.0713%" height="15" fill="rgb(235,10,37)" fg:x="1217" fg:w="1"/><text x="86.9927%" y="1007.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="86.7427%" y="981" width="0.0713%" height="15" fill="rgb(249,171,38)" fg:x="1217" fg:w="1"/><text x="86.9927%" y="991.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="86.7427%" y="965" width="0.0713%" height="15" fill="rgb(242,144,32)" fg:x="1217" fg:w="1"/><text x="86.9927%" y="975.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="86.7427%" y="949" width="0.0713%" height="15" fill="rgb(217,117,21)" fg:x="1217" fg:w="1"/><text x="86.9927%" y="959.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="86.7427%" y="933" width="0.0713%" height="15" fill="rgb(249,87,1)" fg:x="1217" fg:w="1"/><text x="86.9927%" y="943.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="86.7427%" y="917" width="0.0713%" height="15" fill="rgb(248,196,48)" fg:x="1217" fg:w="1"/><text x="86.9927%" y="927.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="86.7427%" y="901" width="0.0713%" height="15" fill="rgb(251,206,33)" fg:x="1217" fg:w="1"/><text x="86.9927%" y="911.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="86.7427%" y="885" width="0.0713%" height="15" fill="rgb(232,141,28)" fg:x="1217" fg:w="1"/><text x="86.9927%" y="895.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.07%)</title><rect x="86.7427%" y="869" width="0.0713%" height="15" fill="rgb(209,167,14)" fg:x="1217" fg:w="1"/><text x="86.9927%" y="879.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="86.7427%" y="853" width="0.0713%" height="15" fill="rgb(225,11,50)" fg:x="1217" fg:w="1"/><text x="86.9927%" y="863.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="86.7427%" y="837" width="0.0713%" height="15" fill="rgb(209,50,20)" fg:x="1217" fg:w="1"/><text x="86.9927%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="86.7427%" y="821" width="0.0713%" height="15" fill="rgb(212,17,46)" fg:x="1217" fg:w="1"/><text x="86.9927%" y="831.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="86.7427%" y="805" width="0.0713%" height="15" fill="rgb(216,101,39)" fg:x="1217" fg:w="1"/><text x="86.9927%" y="815.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="86.7427%" y="789" width="0.0713%" height="15" fill="rgb(212,228,48)" fg:x="1217" fg:w="1"/><text x="86.9927%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="86.7427%" y="773" width="0.0713%" height="15" fill="rgb(250,6,50)" fg:x="1217" fg:w="1"/><text x="86.9927%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="86.7427%" y="757" width="0.0713%" height="15" fill="rgb(250,160,48)" fg:x="1217" fg:w="1"/><text x="86.9927%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="86.7427%" y="741" width="0.0713%" height="15" fill="rgb(244,216,33)" fg:x="1217" fg:w="1"/><text x="86.9927%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="86.7427%" y="725" width="0.0713%" height="15" fill="rgb(207,157,5)" fg:x="1217" fg:w="1"/><text x="86.9927%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.07%)</title><rect x="86.7427%" y="709" width="0.0713%" height="15" fill="rgb(228,199,8)" fg:x="1217" fg:w="1"/><text x="86.9927%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="86.7427%" y="693" width="0.0713%" height="15" fill="rgb(227,80,20)" fg:x="1217" fg:w="1"/><text x="86.9927%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="86.7427%" y="677" width="0.0713%" height="15" fill="rgb(222,9,33)" fg:x="1217" fg:w="1"/><text x="86.9927%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.07%)</title><rect x="86.7427%" y="661" width="0.0713%" height="15" fill="rgb(239,44,28)" fg:x="1217" fg:w="1"/><text x="86.9927%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="86.7427%" y="645" width="0.0713%" height="15" fill="rgb(249,187,43)" fg:x="1217" fg:w="1"/><text x="86.9927%" y="655.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="86.7427%" y="629" width="0.0713%" height="15" fill="rgb(216,141,28)" fg:x="1217" fg:w="1"/><text x="86.9927%" y="639.50"></text></g><g><title>&lt;rand_distr::normal::Normal&lt;F&gt; as rand::distributions::distribution::Distribution&lt;F&gt;&gt;::sample (1 samples, 0.07%)</title><rect x="86.7427%" y="613" width="0.0713%" height="15" fill="rgb(230,154,53)" fg:x="1217" fg:w="1"/><text x="86.9927%" y="623.50"></text></g><g><title>rand_distr::normal::Normal&lt;F&gt;::from_zscore (1 samples, 0.07%)</title><rect x="86.7427%" y="597" width="0.0713%" height="15" fill="rgb(227,82,4)" fg:x="1217" fg:w="1"/><text x="86.9927%" y="607.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (1 samples, 0.07%)</title><rect x="86.7427%" y="581" width="0.0713%" height="15" fill="rgb(220,107,16)" fg:x="1217" fg:w="1"/><text x="86.9927%" y="591.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.07%)</title><rect x="86.8140%" y="1237" width="0.0713%" height="15" fill="rgb(207,187,2)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="1247.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (1 samples, 0.07%)</title><rect x="86.8140%" y="1221" width="0.0713%" height="15" fill="rgb(210,162,52)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="1231.50"></text></g><g><title>rayon_core::job::JobRef::execute (1 samples, 0.07%)</title><rect x="86.8140%" y="1205" width="0.0713%" height="15" fill="rgb(217,216,49)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="1215.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="86.8140%" y="1189" width="0.0713%" height="15" fill="rgb(218,146,49)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="1199.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="86.8140%" y="1173" width="0.0713%" height="15" fill="rgb(216,55,40)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="1183.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="86.8140%" y="1157" width="0.0713%" height="15" fill="rgb(208,196,21)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="1167.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="86.8140%" y="1141" width="0.0713%" height="15" fill="rgb(242,117,42)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="1151.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="86.8140%" y="1125" width="0.0713%" height="15" fill="rgb(210,11,23)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="1135.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (1 samples, 0.07%)</title><rect x="86.8140%" y="1109" width="0.0713%" height="15" fill="rgb(217,110,2)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="86.8140%" y="1093" width="0.0713%" height="15" fill="rgb(229,77,54)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="1103.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="86.8140%" y="1077" width="0.0713%" height="15" fill="rgb(218,53,16)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="1087.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="86.8140%" y="1061" width="0.0713%" height="15" fill="rgb(215,38,13)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="86.8140%" y="1045" width="0.0713%" height="15" fill="rgb(235,42,18)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="1055.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.07%)</title><rect x="86.8140%" y="1029" width="0.0713%" height="15" fill="rgb(219,66,54)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="1039.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (1 samples, 0.07%)</title><rect x="86.8140%" y="1013" width="0.0713%" height="15" fill="rgb(222,205,4)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="1023.50"></text></g><g><title>rayon_core::job::JobRef::execute (1 samples, 0.07%)</title><rect x="86.8140%" y="997" width="0.0713%" height="15" fill="rgb(227,213,46)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="1007.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="86.8140%" y="981" width="0.0713%" height="15" fill="rgb(250,145,42)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="991.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="86.8140%" y="965" width="0.0713%" height="15" fill="rgb(219,15,2)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="975.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="86.8140%" y="949" width="0.0713%" height="15" fill="rgb(231,181,52)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="959.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="86.8140%" y="933" width="0.0713%" height="15" fill="rgb(235,1,42)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="943.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="86.8140%" y="917" width="0.0713%" height="15" fill="rgb(249,88,27)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="927.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (1 samples, 0.07%)</title><rect x="86.8140%" y="901" width="0.0713%" height="15" fill="rgb(235,145,16)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="911.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="86.8140%" y="885" width="0.0713%" height="15" fill="rgb(237,114,19)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="895.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="86.8140%" y="869" width="0.0713%" height="15" fill="rgb(238,51,50)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="879.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="86.8140%" y="853" width="0.0713%" height="15" fill="rgb(205,194,25)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="863.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="86.8140%" y="837" width="0.0713%" height="15" fill="rgb(215,203,17)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="847.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="86.8140%" y="821" width="0.0713%" height="15" fill="rgb(233,112,49)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="831.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="86.8140%" y="805" width="0.0713%" height="15" fill="rgb(241,130,26)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="815.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="86.8140%" y="789" width="0.0713%" height="15" fill="rgb(252,223,19)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="799.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="86.8140%" y="773" width="0.0713%" height="15" fill="rgb(211,95,25)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="783.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="86.8140%" y="757" width="0.0713%" height="15" fill="rgb(251,182,27)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="767.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="86.8140%" y="741" width="0.0713%" height="15" fill="rgb(238,24,4)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="86.8140%" y="725" width="0.0713%" height="15" fill="rgb(224,220,25)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="735.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="86.8140%" y="709" width="0.0713%" height="15" fill="rgb(239,133,26)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="719.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="86.8140%" y="693" width="0.0713%" height="15" fill="rgb(211,94,48)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="703.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="86.8140%" y="677" width="0.0713%" height="15" fill="rgb(239,87,6)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="687.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="86.8140%" y="661" width="0.0713%" height="15" fill="rgb(227,62,0)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="671.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="86.8140%" y="645" width="0.0713%" height="15" fill="rgb(211,226,4)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="655.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="86.8140%" y="629" width="0.0713%" height="15" fill="rgb(253,38,52)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="639.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="86.8140%" y="613" width="0.0713%" height="15" fill="rgb(229,126,40)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="623.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="86.8140%" y="597" width="0.0713%" height="15" fill="rgb(229,165,44)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="607.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="86.8140%" y="581" width="0.0713%" height="15" fill="rgb(247,95,47)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="591.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.07%)</title><rect x="86.8140%" y="565" width="0.0713%" height="15" fill="rgb(216,140,30)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="575.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="86.8140%" y="549" width="0.0713%" height="15" fill="rgb(246,214,8)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="559.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="86.8140%" y="533" width="0.0713%" height="15" fill="rgb(227,224,15)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="86.8140%" y="517" width="0.0713%" height="15" fill="rgb(233,175,4)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="527.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="86.8140%" y="501" width="0.0713%" height="15" fill="rgb(221,66,45)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="511.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="86.8140%" y="485" width="0.0713%" height="15" fill="rgb(221,178,18)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="86.8140%" y="469" width="0.0713%" height="15" fill="rgb(213,81,29)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="86.8140%" y="453" width="0.0713%" height="15" fill="rgb(220,89,49)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="86.8140%" y="437" width="0.0713%" height="15" fill="rgb(227,60,33)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.07%)</title><rect x="86.8140%" y="421" width="0.0713%" height="15" fill="rgb(205,113,12)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="86.8140%" y="405" width="0.0713%" height="15" fill="rgb(211,32,1)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="86.8140%" y="389" width="0.0713%" height="15" fill="rgb(246,2,12)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="86.8140%" y="373" width="0.0713%" height="15" fill="rgb(243,37,27)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="86.8140%" y="357" width="0.0713%" height="15" fill="rgb(248,211,31)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="86.8140%" y="341" width="0.0713%" height="15" fill="rgb(242,146,47)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="86.8140%" y="325" width="0.0713%" height="15" fill="rgb(206,70,20)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="335.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.07%)</title><rect x="86.8140%" y="309" width="0.0713%" height="15" fill="rgb(215,10,51)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="319.50"></text></g><g><title>_int_malloc (1 samples, 0.07%)</title><rect x="86.8140%" y="293" width="0.0713%" height="15" fill="rgb(243,178,53)" fg:x="1218" fg:w="1"/><text x="87.0640%" y="303.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="86.8852%" y="901" width="0.0713%" height="15" fill="rgb(233,221,20)" fg:x="1219" fg:w="1"/><text x="87.1352%" y="911.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="86.8852%" y="885" width="0.0713%" height="15" fill="rgb(218,95,35)" fg:x="1219" fg:w="1"/><text x="87.1352%" y="895.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.07%)</title><rect x="86.8852%" y="869" width="0.0713%" height="15" fill="rgb(229,13,5)" fg:x="1219" fg:w="1"/><text x="87.1352%" y="879.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="86.8852%" y="853" width="0.0713%" height="15" fill="rgb(252,164,30)" fg:x="1219" fg:w="1"/><text x="87.1352%" y="863.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="86.8852%" y="837" width="0.0713%" height="15" fill="rgb(232,68,36)" fg:x="1219" fg:w="1"/><text x="87.1352%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="86.8852%" y="821" width="0.0713%" height="15" fill="rgb(219,59,54)" fg:x="1219" fg:w="1"/><text x="87.1352%" y="831.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="86.8852%" y="805" width="0.0713%" height="15" fill="rgb(250,92,33)" fg:x="1219" fg:w="1"/><text x="87.1352%" y="815.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="86.8852%" y="789" width="0.0713%" height="15" fill="rgb(229,162,54)" fg:x="1219" fg:w="1"/><text x="87.1352%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f64&gt;&gt; (1 samples, 0.07%)</title><rect x="86.8852%" y="773" width="0.0713%" height="15" fill="rgb(244,114,52)" fg:x="1219" fg:w="1"/><text x="87.1352%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f64&gt;&gt; (1 samples, 0.07%)</title><rect x="86.8852%" y="757" width="0.0713%" height="15" fill="rgb(212,211,43)" fg:x="1219" fg:w="1"/><text x="87.1352%" y="767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="86.8852%" y="741" width="0.0713%" height="15" fill="rgb(226,147,8)" fg:x="1219" fg:w="1"/><text x="87.1352%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.07%)</title><rect x="86.8852%" y="725" width="0.0713%" height="15" fill="rgb(226,23,13)" fg:x="1219" fg:w="1"/><text x="87.1352%" y="735.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.07%)</title><rect x="86.8852%" y="709" width="0.0713%" height="15" fill="rgb(240,63,4)" fg:x="1219" fg:w="1"/><text x="87.1352%" y="719.50"></text></g><g><title>__GI___libc_free (1 samples, 0.07%)</title><rect x="86.8852%" y="693" width="0.0713%" height="15" fill="rgb(221,1,32)" fg:x="1219" fg:w="1"/><text x="87.1352%" y="703.50"></text></g><g><title>_int_free (1 samples, 0.07%)</title><rect x="86.8852%" y="677" width="0.0713%" height="15" fill="rgb(242,117,10)" fg:x="1219" fg:w="1"/><text x="87.1352%" y="687.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (2 samples, 0.14%)</title><rect x="86.8852%" y="965" width="0.1426%" height="15" fill="rgb(249,172,44)" fg:x="1219" fg:w="2"/><text x="87.1352%" y="975.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (2 samples, 0.14%)</title><rect x="86.8852%" y="949" width="0.1426%" height="15" fill="rgb(244,46,45)" fg:x="1219" fg:w="2"/><text x="87.1352%" y="959.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 0.14%)</title><rect x="86.8852%" y="933" width="0.1426%" height="15" fill="rgb(206,43,17)" fg:x="1219" fg:w="2"/><text x="87.1352%" y="943.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2 samples, 0.14%)</title><rect x="86.8852%" y="917" width="0.1426%" height="15" fill="rgb(239,218,39)" fg:x="1219" fg:w="2"/><text x="87.1352%" y="927.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="86.9565%" y="901" width="0.0713%" height="15" fill="rgb(208,169,54)" fg:x="1220" fg:w="1"/><text x="87.2065%" y="911.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="86.9565%" y="885" width="0.0713%" height="15" fill="rgb(247,25,42)" fg:x="1220" fg:w="1"/><text x="87.2065%" y="895.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="86.9565%" y="869" width="0.0713%" height="15" fill="rgb(226,23,31)" fg:x="1220" fg:w="1"/><text x="87.2065%" y="879.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="86.9565%" y="853" width="0.0713%" height="15" fill="rgb(247,16,28)" fg:x="1220" fg:w="1"/><text x="87.2065%" y="863.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="86.9565%" y="837" width="0.0713%" height="15" fill="rgb(231,147,38)" fg:x="1220" fg:w="1"/><text x="87.2065%" y="847.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="86.9565%" y="821" width="0.0713%" height="15" fill="rgb(253,81,48)" fg:x="1220" fg:w="1"/><text x="87.2065%" y="831.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="86.9565%" y="805" width="0.0713%" height="15" fill="rgb(249,222,43)" fg:x="1220" fg:w="1"/><text x="87.2065%" y="815.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.07%)</title><rect x="86.9565%" y="789" width="0.0713%" height="15" fill="rgb(221,3,27)" fg:x="1220" fg:w="1"/><text x="87.2065%" y="799.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="86.9565%" y="773" width="0.0713%" height="15" fill="rgb(228,180,5)" fg:x="1220" fg:w="1"/><text x="87.2065%" y="783.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="86.9565%" y="757" width="0.0713%" height="15" fill="rgb(227,131,42)" fg:x="1220" fg:w="1"/><text x="87.2065%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="86.9565%" y="741" width="0.0713%" height="15" fill="rgb(212,3,39)" fg:x="1220" fg:w="1"/><text x="87.2065%" y="751.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="86.9565%" y="725" width="0.0713%" height="15" fill="rgb(226,45,5)" fg:x="1220" fg:w="1"/><text x="87.2065%" y="735.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="86.9565%" y="709" width="0.0713%" height="15" fill="rgb(215,167,45)" fg:x="1220" fg:w="1"/><text x="87.2065%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="86.9565%" y="693" width="0.0713%" height="15" fill="rgb(250,218,53)" fg:x="1220" fg:w="1"/><text x="87.2065%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="86.9565%" y="677" width="0.0713%" height="15" fill="rgb(207,140,0)" fg:x="1220" fg:w="1"/><text x="87.2065%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="86.9565%" y="661" width="0.0713%" height="15" fill="rgb(238,133,51)" fg:x="1220" fg:w="1"/><text x="87.2065%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="86.9565%" y="645" width="0.0713%" height="15" fill="rgb(218,203,53)" fg:x="1220" fg:w="1"/><text x="87.2065%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.07%)</title><rect x="86.9565%" y="629" width="0.0713%" height="15" fill="rgb(226,184,25)" fg:x="1220" fg:w="1"/><text x="87.2065%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="86.9565%" y="613" width="0.0713%" height="15" fill="rgb(231,121,21)" fg:x="1220" fg:w="1"/><text x="87.2065%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.07%)</title><rect x="86.9565%" y="597" width="0.0713%" height="15" fill="rgb(251,14,34)" fg:x="1220" fg:w="1"/><text x="87.2065%" y="607.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.07%)</title><rect x="86.9565%" y="581" width="0.0713%" height="15" fill="rgb(249,193,11)" fg:x="1220" fg:w="1"/><text x="87.2065%" y="591.50"></text></g><g><title>&lt;ldpc::channel::BinaryMemorylessChannel as ldpc::channel::Channel&gt;::transmit::{{closure}} (1 samples, 0.07%)</title><rect x="86.9565%" y="565" width="0.0713%" height="15" fill="rgb(220,172,37)" fg:x="1220" fg:w="1"/><text x="87.2065%" y="575.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.07%)</title><rect x="87.0278%" y="965" width="0.0713%" height="15" fill="rgb(231,229,43)" fg:x="1221" fg:w="1"/><text x="87.2778%" y="975.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (1 samples, 0.07%)</title><rect x="87.0278%" y="949" width="0.0713%" height="15" fill="rgb(250,161,5)" fg:x="1221" fg:w="1"/><text x="87.2778%" y="959.50"></text></g><g><title>rayon_core::job::JobRef::execute (1 samples, 0.07%)</title><rect x="87.0278%" y="933" width="0.0713%" height="15" fill="rgb(218,225,18)" fg:x="1221" fg:w="1"/><text x="87.2778%" y="943.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="87.0278%" y="917" width="0.0713%" height="15" fill="rgb(245,45,42)" fg:x="1221" fg:w="1"/><text x="87.2778%" y="927.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="87.0278%" y="901" width="0.0713%" height="15" fill="rgb(211,115,1)" fg:x="1221" fg:w="1"/><text x="87.2778%" y="911.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="87.0278%" y="885" width="0.0713%" height="15" fill="rgb(248,133,52)" fg:x="1221" fg:w="1"/><text x="87.2778%" y="895.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="87.0278%" y="869" width="0.0713%" height="15" fill="rgb(238,100,21)" fg:x="1221" fg:w="1"/><text x="87.2778%" y="879.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="87.0278%" y="853" width="0.0713%" height="15" fill="rgb(247,144,11)" fg:x="1221" fg:w="1"/><text x="87.2778%" y="863.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (1 samples, 0.07%)</title><rect x="87.0278%" y="837" width="0.0713%" height="15" fill="rgb(206,164,16)" fg:x="1221" fg:w="1"/><text x="87.2778%" y="847.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="87.0278%" y="821" width="0.0713%" height="15" fill="rgb(222,34,3)" fg:x="1221" fg:w="1"/><text x="87.2778%" y="831.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="87.0278%" y="805" width="0.0713%" height="15" fill="rgb(248,82,4)" fg:x="1221" fg:w="1"/><text x="87.2778%" y="815.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="87.0278%" y="789" width="0.0713%" height="15" fill="rgb(228,81,46)" fg:x="1221" fg:w="1"/><text x="87.2778%" y="799.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="87.0278%" y="773" width="0.0713%" height="15" fill="rgb(227,67,47)" fg:x="1221" fg:w="1"/><text x="87.2778%" y="783.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="87.0278%" y="757" width="0.0713%" height="15" fill="rgb(215,93,53)" fg:x="1221" fg:w="1"/><text x="87.2778%" y="767.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="87.0278%" y="741" width="0.0713%" height="15" fill="rgb(248,194,39)" fg:x="1221" fg:w="1"/><text x="87.2778%" y="751.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="87.0278%" y="725" width="0.0713%" height="15" fill="rgb(215,5,19)" fg:x="1221" fg:w="1"/><text x="87.2778%" y="735.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="87.0278%" y="709" width="0.0713%" height="15" fill="rgb(226,215,51)" fg:x="1221" fg:w="1"/><text x="87.2778%" y="719.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="87.0278%" y="693" width="0.0713%" height="15" fill="rgb(225,56,26)" fg:x="1221" fg:w="1"/><text x="87.2778%" y="703.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="87.0278%" y="677" width="0.0713%" height="15" fill="rgb(222,75,29)" fg:x="1221" fg:w="1"/><text x="87.2778%" y="687.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="87.0278%" y="661" width="0.0713%" height="15" fill="rgb(236,139,6)" fg:x="1221" fg:w="1"/><text x="87.2778%" y="671.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="87.0278%" y="645" width="0.0713%" height="15" fill="rgb(223,137,36)" fg:x="1221" fg:w="1"/><text x="87.2778%" y="655.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="87.0278%" y="629" width="0.0713%" height="15" fill="rgb(226,99,2)" fg:x="1221" fg:w="1"/><text x="87.2778%" y="639.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="87.0278%" y="613" width="0.0713%" height="15" fill="rgb(206,133,23)" fg:x="1221" fg:w="1"/><text x="87.2778%" y="623.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="87.0278%" y="597" width="0.0713%" height="15" fill="rgb(243,173,15)" fg:x="1221" fg:w="1"/><text x="87.2778%" y="607.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="87.0278%" y="581" width="0.0713%" height="15" fill="rgb(228,69,28)" fg:x="1221" fg:w="1"/><text x="87.2778%" y="591.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="87.0278%" y="565" width="0.0713%" height="15" fill="rgb(212,51,22)" fg:x="1221" fg:w="1"/><text x="87.2778%" y="575.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="87.0278%" y="549" width="0.0713%" height="15" fill="rgb(227,113,0)" fg:x="1221" fg:w="1"/><text x="87.2778%" y="559.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="87.0278%" y="533" width="0.0713%" height="15" fill="rgb(252,84,27)" fg:x="1221" fg:w="1"/><text x="87.2778%" y="543.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="87.0278%" y="517" width="0.0713%" height="15" fill="rgb(223,145,39)" fg:x="1221" fg:w="1"/><text x="87.2778%" y="527.50"></text></g><g><title>rayon_core::registry::WorkerThread::take_local_job (1 samples, 0.07%)</title><rect x="87.0278%" y="501" width="0.0713%" height="15" fill="rgb(239,219,30)" fg:x="1221" fg:w="1"/><text x="87.2778%" y="511.50"></text></g><g><title>core::sync::atomic::fence (1 samples, 0.07%)</title><rect x="87.0278%" y="485" width="0.0713%" height="15" fill="rgb(224,196,39)" fg:x="1221" fg:w="1"/><text x="87.2778%" y="495.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (6 samples, 0.43%)</title><rect x="86.8852%" y="1029" width="0.4277%" height="15" fill="rgb(205,35,43)" fg:x="1219" fg:w="6"/><text x="87.1352%" y="1039.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (6 samples, 0.43%)</title><rect x="86.8852%" y="1013" width="0.4277%" height="15" fill="rgb(228,201,21)" fg:x="1219" fg:w="6"/><text x="87.1352%" y="1023.50"></text></g><g><title>rayon_core::join::join_context (6 samples, 0.43%)</title><rect x="86.8852%" y="997" width="0.4277%" height="15" fill="rgb(237,118,16)" fg:x="1219" fg:w="6"/><text x="87.1352%" y="1007.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6 samples, 0.43%)</title><rect x="86.8852%" y="981" width="0.4277%" height="15" fill="rgb(241,17,19)" fg:x="1219" fg:w="6"/><text x="87.1352%" y="991.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (3 samples, 0.21%)</title><rect x="87.0991%" y="965" width="0.2138%" height="15" fill="rgb(214,10,25)" fg:x="1222" fg:w="3"/><text x="87.3491%" y="975.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.21%)</title><rect x="87.0991%" y="949" width="0.2138%" height="15" fill="rgb(238,37,29)" fg:x="1222" fg:w="3"/><text x="87.3491%" y="959.50"></text></g><g><title>std::panicking::try (3 samples, 0.21%)</title><rect x="87.0991%" y="933" width="0.2138%" height="15" fill="rgb(253,83,25)" fg:x="1222" fg:w="3"/><text x="87.3491%" y="943.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.21%)</title><rect x="87.0991%" y="917" width="0.2138%" height="15" fill="rgb(234,192,12)" fg:x="1222" fg:w="3"/><text x="87.3491%" y="927.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.21%)</title><rect x="87.0991%" y="901" width="0.2138%" height="15" fill="rgb(241,216,45)" fg:x="1222" fg:w="3"/><text x="87.3491%" y="911.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (3 samples, 0.21%)</title><rect x="87.0991%" y="885" width="0.2138%" height="15" fill="rgb(242,22,33)" fg:x="1222" fg:w="3"/><text x="87.3491%" y="895.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (3 samples, 0.21%)</title><rect x="87.0991%" y="869" width="0.2138%" height="15" fill="rgb(231,105,49)" fg:x="1222" fg:w="3"/><text x="87.3491%" y="879.50"></text></g><g><title>rayon_core::join::join_context (3 samples, 0.21%)</title><rect x="87.0991%" y="853" width="0.2138%" height="15" fill="rgb(218,204,15)" fg:x="1222" fg:w="3"/><text x="87.3491%" y="863.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3 samples, 0.21%)</title><rect x="87.0991%" y="837" width="0.2138%" height="15" fill="rgb(235,138,41)" fg:x="1222" fg:w="3"/><text x="87.3491%" y="847.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (3 samples, 0.21%)</title><rect x="87.0991%" y="821" width="0.2138%" height="15" fill="rgb(246,0,9)" fg:x="1222" fg:w="3"/><text x="87.3491%" y="831.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (3 samples, 0.21%)</title><rect x="87.0991%" y="805" width="0.2138%" height="15" fill="rgb(210,74,4)" fg:x="1222" fg:w="3"/><text x="87.3491%" y="815.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (3 samples, 0.21%)</title><rect x="87.0991%" y="789" width="0.2138%" height="15" fill="rgb(250,60,41)" fg:x="1222" fg:w="3"/><text x="87.3491%" y="799.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (3 samples, 0.21%)</title><rect x="87.0991%" y="773" width="0.2138%" height="15" fill="rgb(220,115,12)" fg:x="1222" fg:w="3"/><text x="87.3491%" y="783.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (3 samples, 0.21%)</title><rect x="87.0991%" y="757" width="0.2138%" height="15" fill="rgb(237,100,13)" fg:x="1222" fg:w="3"/><text x="87.3491%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.21%)</title><rect x="87.0991%" y="741" width="0.2138%" height="15" fill="rgb(213,55,26)" fg:x="1222" fg:w="3"/><text x="87.3491%" y="751.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 0.21%)</title><rect x="87.0991%" y="725" width="0.2138%" height="15" fill="rgb(216,17,4)" fg:x="1222" fg:w="3"/><text x="87.3491%" y="735.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (3 samples, 0.21%)</title><rect x="87.0991%" y="709" width="0.2138%" height="15" fill="rgb(220,153,47)" fg:x="1222" fg:w="3"/><text x="87.3491%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.21%)</title><rect x="87.0991%" y="693" width="0.2138%" height="15" fill="rgb(215,131,9)" fg:x="1222" fg:w="3"/><text x="87.3491%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.21%)</title><rect x="87.0991%" y="677" width="0.2138%" height="15" fill="rgb(233,46,42)" fg:x="1222" fg:w="3"/><text x="87.3491%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.21%)</title><rect x="87.0991%" y="661" width="0.2138%" height="15" fill="rgb(226,86,7)" fg:x="1222" fg:w="3"/><text x="87.3491%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.21%)</title><rect x="87.0991%" y="645" width="0.2138%" height="15" fill="rgb(239,226,21)" fg:x="1222" fg:w="3"/><text x="87.3491%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3 samples, 0.21%)</title><rect x="87.0991%" y="629" width="0.2138%" height="15" fill="rgb(244,137,22)" fg:x="1222" fg:w="3"/><text x="87.3491%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.21%)</title><rect x="87.0991%" y="613" width="0.2138%" height="15" fill="rgb(211,139,35)" fg:x="1222" fg:w="3"/><text x="87.3491%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.21%)</title><rect x="87.0991%" y="597" width="0.2138%" height="15" fill="rgb(214,62,50)" fg:x="1222" fg:w="3"/><text x="87.3491%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (3 samples, 0.21%)</title><rect x="87.0991%" y="581" width="0.2138%" height="15" fill="rgb(212,113,44)" fg:x="1222" fg:w="3"/><text x="87.3491%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.21%)</title><rect x="87.0991%" y="565" width="0.2138%" height="15" fill="rgb(226,150,43)" fg:x="1222" fg:w="3"/><text x="87.3491%" y="575.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.21%)</title><rect x="87.0991%" y="549" width="0.2138%" height="15" fill="rgb(250,71,37)" fg:x="1222" fg:w="3"/><text x="87.3491%" y="559.50"></text></g><g><title>&lt;rand_distr::normal::Normal&lt;F&gt; as rand::distributions::distribution::Distribution&lt;F&gt;&gt;::sample (3 samples, 0.21%)</title><rect x="87.0991%" y="533" width="0.2138%" height="15" fill="rgb(219,76,19)" fg:x="1222" fg:w="3"/><text x="87.3491%" y="543.50"></text></g><g><title>rand::rng::Rng::sample (3 samples, 0.21%)</title><rect x="87.0991%" y="517" width="0.2138%" height="15" fill="rgb(250,39,11)" fg:x="1222" fg:w="3"/><text x="87.3491%" y="527.50"></text></g><g><title>rand_distr::utils::ziggurat (2 samples, 0.14%)</title><rect x="87.1703%" y="501" width="0.1426%" height="15" fill="rgb(230,64,31)" fg:x="1223" fg:w="2"/><text x="87.4203%" y="511.50"></text></g><g><title>&lt;&amp;mut R as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="87.2416%" y="485" width="0.0713%" height="15" fill="rgb(208,222,23)" fg:x="1224" fg:w="1"/><text x="87.4916%" y="495.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="87.2416%" y="469" width="0.0713%" height="15" fill="rgb(227,125,18)" fg:x="1224" fg:w="1"/><text x="87.4916%" y="479.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="87.2416%" y="453" width="0.0713%" height="15" fill="rgb(234,210,9)" fg:x="1224" fg:w="1"/><text x="87.4916%" y="463.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="87.2416%" y="437" width="0.0713%" height="15" fill="rgb(217,127,24)" fg:x="1224" fg:w="1"/><text x="87.4916%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="87.3129%" y="597" width="0.0713%" height="15" fill="rgb(239,141,48)" fg:x="1225" fg:w="1"/><text x="87.5629%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.07%)</title><rect x="87.3129%" y="581" width="0.0713%" height="15" fill="rgb(227,109,8)" fg:x="1225" fg:w="1"/><text x="87.5629%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="87.3129%" y="565" width="0.0713%" height="15" fill="rgb(235,184,23)" fg:x="1225" fg:w="1"/><text x="87.5629%" y="575.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="87.3129%" y="549" width="0.0713%" height="15" fill="rgb(227,226,48)" fg:x="1225" fg:w="1"/><text x="87.5629%" y="559.50"></text></g><g><title>&lt;rand_distr::normal::Normal&lt;F&gt; as rand::distributions::distribution::Distribution&lt;F&gt;&gt;::sample (1 samples, 0.07%)</title><rect x="87.3129%" y="533" width="0.0713%" height="15" fill="rgb(206,150,11)" fg:x="1225" fg:w="1"/><text x="87.5629%" y="543.50"></text></g><g><title>rand::rng::Rng::sample (1 samples, 0.07%)</title><rect x="87.3129%" y="517" width="0.0713%" height="15" fill="rgb(254,2,33)" fg:x="1225" fg:w="1"/><text x="87.5629%" y="527.50"></text></g><g><title>rand_distr::utils::ziggurat (1 samples, 0.07%)</title><rect x="87.3129%" y="501" width="0.0713%" height="15" fill="rgb(243,160,20)" fg:x="1225" fg:w="1"/><text x="87.5629%" y="511.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (2 samples, 0.14%)</title><rect x="87.3129%" y="821" width="0.1426%" height="15" fill="rgb(218,208,30)" fg:x="1225" fg:w="2"/><text x="87.5629%" y="831.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (2 samples, 0.14%)</title><rect x="87.3129%" y="805" width="0.1426%" height="15" fill="rgb(224,120,49)" fg:x="1225" fg:w="2"/><text x="87.5629%" y="815.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (2 samples, 0.14%)</title><rect x="87.3129%" y="789" width="0.1426%" height="15" fill="rgb(246,12,2)" fg:x="1225" fg:w="2"/><text x="87.5629%" y="799.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (2 samples, 0.14%)</title><rect x="87.3129%" y="773" width="0.1426%" height="15" fill="rgb(236,117,3)" fg:x="1225" fg:w="2"/><text x="87.5629%" y="783.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (2 samples, 0.14%)</title><rect x="87.3129%" y="757" width="0.1426%" height="15" fill="rgb(216,128,52)" fg:x="1225" fg:w="2"/><text x="87.5629%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.14%)</title><rect x="87.3129%" y="741" width="0.1426%" height="15" fill="rgb(246,145,19)" fg:x="1225" fg:w="2"/><text x="87.5629%" y="751.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.14%)</title><rect x="87.3129%" y="725" width="0.1426%" height="15" fill="rgb(222,11,46)" fg:x="1225" fg:w="2"/><text x="87.5629%" y="735.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (2 samples, 0.14%)</title><rect x="87.3129%" y="709" width="0.1426%" height="15" fill="rgb(245,82,36)" fg:x="1225" fg:w="2"/><text x="87.5629%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.14%)</title><rect x="87.3129%" y="693" width="0.1426%" height="15" fill="rgb(250,73,51)" fg:x="1225" fg:w="2"/><text x="87.5629%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.14%)</title><rect x="87.3129%" y="677" width="0.1426%" height="15" fill="rgb(221,189,23)" fg:x="1225" fg:w="2"/><text x="87.5629%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.14%)</title><rect x="87.3129%" y="661" width="0.1426%" height="15" fill="rgb(210,33,7)" fg:x="1225" fg:w="2"/><text x="87.5629%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.14%)</title><rect x="87.3129%" y="645" width="0.1426%" height="15" fill="rgb(210,107,22)" fg:x="1225" fg:w="2"/><text x="87.5629%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.14%)</title><rect x="87.3129%" y="629" width="0.1426%" height="15" fill="rgb(222,116,37)" fg:x="1225" fg:w="2"/><text x="87.5629%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="87.3129%" y="613" width="0.1426%" height="15" fill="rgb(254,17,48)" fg:x="1225" fg:w="2"/><text x="87.5629%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.07%)</title><rect x="87.3842%" y="597" width="0.0713%" height="15" fill="rgb(224,36,32)" fg:x="1226" fg:w="1"/><text x="87.6342%" y="607.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.07%)</title><rect x="87.3842%" y="581" width="0.0713%" height="15" fill="rgb(232,90,46)" fg:x="1226" fg:w="1"/><text x="87.6342%" y="591.50"></text></g><g><title>&lt;ldpc::channel::BinaryMemorylessChannel as ldpc::channel::Channel&gt;::transmit::{{closure}} (1 samples, 0.07%)</title><rect x="87.3842%" y="565" width="0.0713%" height="15" fill="rgb(241,66,40)" fg:x="1226" fg:w="1"/><text x="87.6342%" y="575.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (3 samples, 0.21%)</title><rect x="87.3129%" y="885" width="0.2138%" height="15" fill="rgb(249,184,29)" fg:x="1225" fg:w="3"/><text x="87.5629%" y="895.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (3 samples, 0.21%)</title><rect x="87.3129%" y="869" width="0.2138%" height="15" fill="rgb(231,181,1)" fg:x="1225" fg:w="3"/><text x="87.5629%" y="879.50"></text></g><g><title>rayon_core::join::join_context (3 samples, 0.21%)</title><rect x="87.3129%" y="853" width="0.2138%" height="15" fill="rgb(224,94,2)" fg:x="1225" fg:w="3"/><text x="87.5629%" y="863.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3 samples, 0.21%)</title><rect x="87.3129%" y="837" width="0.2138%" height="15" fill="rgb(229,170,15)" fg:x="1225" fg:w="3"/><text x="87.5629%" y="847.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="87.4555%" y="821" width="0.0713%" height="15" fill="rgb(240,127,35)" fg:x="1227" fg:w="1"/><text x="87.7055%" y="831.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="87.4555%" y="805" width="0.0713%" height="15" fill="rgb(248,196,34)" fg:x="1227" fg:w="1"/><text x="87.7055%" y="815.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="87.4555%" y="789" width="0.0713%" height="15" fill="rgb(236,137,7)" fg:x="1227" fg:w="1"/><text x="87.7055%" y="799.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="87.4555%" y="773" width="0.0713%" height="15" fill="rgb(235,127,16)" fg:x="1227" fg:w="1"/><text x="87.7055%" y="783.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="87.4555%" y="757" width="0.0713%" height="15" fill="rgb(250,192,54)" fg:x="1227" fg:w="1"/><text x="87.7055%" y="767.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="87.4555%" y="741" width="0.0713%" height="15" fill="rgb(218,98,20)" fg:x="1227" fg:w="1"/><text x="87.7055%" y="751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="87.4555%" y="725" width="0.0713%" height="15" fill="rgb(230,176,47)" fg:x="1227" fg:w="1"/><text x="87.7055%" y="735.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.07%)</title><rect x="87.4555%" y="709" width="0.0713%" height="15" fill="rgb(244,2,33)" fg:x="1227" fg:w="1"/><text x="87.7055%" y="719.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="87.4555%" y="693" width="0.0713%" height="15" fill="rgb(231,100,17)" fg:x="1227" fg:w="1"/><text x="87.7055%" y="703.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="87.4555%" y="677" width="0.0713%" height="15" fill="rgb(245,23,12)" fg:x="1227" fg:w="1"/><text x="87.7055%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="87.4555%" y="661" width="0.0713%" height="15" fill="rgb(249,55,22)" fg:x="1227" fg:w="1"/><text x="87.7055%" y="671.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="87.4555%" y="645" width="0.0713%" height="15" fill="rgb(207,134,9)" fg:x="1227" fg:w="1"/><text x="87.7055%" y="655.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="87.4555%" y="629" width="0.0713%" height="15" fill="rgb(218,134,0)" fg:x="1227" fg:w="1"/><text x="87.7055%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="87.4555%" y="613" width="0.0713%" height="15" fill="rgb(213,212,33)" fg:x="1227" fg:w="1"/><text x="87.7055%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="87.4555%" y="597" width="0.0713%" height="15" fill="rgb(252,106,18)" fg:x="1227" fg:w="1"/><text x="87.7055%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="87.4555%" y="581" width="0.0713%" height="15" fill="rgb(208,126,42)" fg:x="1227" fg:w="1"/><text x="87.7055%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="87.4555%" y="565" width="0.0713%" height="15" fill="rgb(246,175,29)" fg:x="1227" fg:w="1"/><text x="87.7055%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.07%)</title><rect x="87.4555%" y="549" width="0.0713%" height="15" fill="rgb(215,13,50)" fg:x="1227" fg:w="1"/><text x="87.7055%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="87.4555%" y="533" width="0.0713%" height="15" fill="rgb(216,172,15)" fg:x="1227" fg:w="1"/><text x="87.7055%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="87.4555%" y="517" width="0.0713%" height="15" fill="rgb(212,103,13)" fg:x="1227" fg:w="1"/><text x="87.7055%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.07%)</title><rect x="87.4555%" y="501" width="0.0713%" height="15" fill="rgb(231,171,36)" fg:x="1227" fg:w="1"/><text x="87.7055%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="87.4555%" y="485" width="0.0713%" height="15" fill="rgb(250,123,20)" fg:x="1227" fg:w="1"/><text x="87.7055%" y="495.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="87.4555%" y="469" width="0.0713%" height="15" fill="rgb(212,53,50)" fg:x="1227" fg:w="1"/><text x="87.7055%" y="479.50"></text></g><g><title>&lt;rand_distr::normal::Normal&lt;F&gt; as rand::distributions::distribution::Distribution&lt;F&gt;&gt;::sample (1 samples, 0.07%)</title><rect x="87.4555%" y="453" width="0.0713%" height="15" fill="rgb(243,54,12)" fg:x="1227" fg:w="1"/><text x="87.7055%" y="463.50"></text></g><g><title>rand::rng::Rng::sample (1 samples, 0.07%)</title><rect x="87.4555%" y="437" width="0.0713%" height="15" fill="rgb(234,101,34)" fg:x="1227" fg:w="1"/><text x="87.7055%" y="447.50"></text></g><g><title>rand_distr::utils::ziggurat (1 samples, 0.07%)</title><rect x="87.4555%" y="421" width="0.0713%" height="15" fill="rgb(254,67,22)" fg:x="1227" fg:w="1"/><text x="87.7055%" y="431.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::arith::AddAssign&gt;::add_assign (1 samples, 0.07%)</title><rect x="87.5980%" y="229" width="0.0713%" height="15" fill="rgb(250,35,47)" fg:x="1229" fg:w="1"/><text x="87.8480%" y="239.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::AddAssign&gt;::add_assign (1 samples, 0.07%)</title><rect x="87.5980%" y="213" width="0.0713%" height="15" fill="rgb(226,126,38)" fg:x="1229" fg:w="1"/><text x="87.8480%" y="223.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (1 samples, 0.07%)</title><rect x="87.5980%" y="197" width="0.0713%" height="15" fill="rgb(216,138,53)" fg:x="1229" fg:w="1"/><text x="87.8480%" y="207.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (12 samples, 0.86%)</title><rect x="86.8852%" y="1093" width="0.8553%" height="15" fill="rgb(246,199,43)" fg:x="1219" fg:w="12"/><text x="87.1352%" y="1103.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (12 samples, 0.86%)</title><rect x="86.8852%" y="1077" width="0.8553%" height="15" fill="rgb(232,125,11)" fg:x="1219" fg:w="12"/><text x="87.1352%" y="1087.50"></text></g><g><title>rayon_core::join::join_context (12 samples, 0.86%)</title><rect x="86.8852%" y="1061" width="0.8553%" height="15" fill="rgb(218,219,45)" fg:x="1219" fg:w="12"/><text x="87.1352%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (12 samples, 0.86%)</title><rect x="86.8852%" y="1045" width="0.8553%" height="15" fill="rgb(216,102,54)" fg:x="1219" fg:w="12"/><text x="87.1352%" y="1055.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (6 samples, 0.43%)</title><rect x="87.3129%" y="1029" width="0.4277%" height="15" fill="rgb(250,228,7)" fg:x="1225" fg:w="6"/><text x="87.5629%" y="1039.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.43%)</title><rect x="87.3129%" y="1013" width="0.4277%" height="15" fill="rgb(226,125,25)" fg:x="1225" fg:w="6"/><text x="87.5629%" y="1023.50"></text></g><g><title>std::panicking::try (6 samples, 0.43%)</title><rect x="87.3129%" y="997" width="0.4277%" height="15" fill="rgb(224,165,27)" fg:x="1225" fg:w="6"/><text x="87.5629%" y="1007.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.43%)</title><rect x="87.3129%" y="981" width="0.4277%" height="15" fill="rgb(233,86,3)" fg:x="1225" fg:w="6"/><text x="87.5629%" y="991.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.43%)</title><rect x="87.3129%" y="965" width="0.4277%" height="15" fill="rgb(228,116,20)" fg:x="1225" fg:w="6"/><text x="87.5629%" y="975.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (6 samples, 0.43%)</title><rect x="87.3129%" y="949" width="0.4277%" height="15" fill="rgb(209,192,17)" fg:x="1225" fg:w="6"/><text x="87.5629%" y="959.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (6 samples, 0.43%)</title><rect x="87.3129%" y="933" width="0.4277%" height="15" fill="rgb(224,88,34)" fg:x="1225" fg:w="6"/><text x="87.5629%" y="943.50"></text></g><g><title>rayon_core::join::join_context (6 samples, 0.43%)</title><rect x="87.3129%" y="917" width="0.4277%" height="15" fill="rgb(233,38,6)" fg:x="1225" fg:w="6"/><text x="87.5629%" y="927.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6 samples, 0.43%)</title><rect x="87.3129%" y="901" width="0.4277%" height="15" fill="rgb(212,59,30)" fg:x="1225" fg:w="6"/><text x="87.5629%" y="911.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (3 samples, 0.21%)</title><rect x="87.5267%" y="885" width="0.2138%" height="15" fill="rgb(213,80,3)" fg:x="1228" fg:w="3"/><text x="87.7767%" y="895.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.21%)</title><rect x="87.5267%" y="869" width="0.2138%" height="15" fill="rgb(251,178,7)" fg:x="1228" fg:w="3"/><text x="87.7767%" y="879.50"></text></g><g><title>std::panicking::try (3 samples, 0.21%)</title><rect x="87.5267%" y="853" width="0.2138%" height="15" fill="rgb(213,154,26)" fg:x="1228" fg:w="3"/><text x="87.7767%" y="863.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.21%)</title><rect x="87.5267%" y="837" width="0.2138%" height="15" fill="rgb(238,165,49)" fg:x="1228" fg:w="3"/><text x="87.7767%" y="847.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.21%)</title><rect x="87.5267%" y="821" width="0.2138%" height="15" fill="rgb(248,91,46)" fg:x="1228" fg:w="3"/><text x="87.7767%" y="831.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (3 samples, 0.21%)</title><rect x="87.5267%" y="805" width="0.2138%" height="15" fill="rgb(244,21,52)" fg:x="1228" fg:w="3"/><text x="87.7767%" y="815.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (3 samples, 0.21%)</title><rect x="87.5267%" y="789" width="0.2138%" height="15" fill="rgb(247,122,20)" fg:x="1228" fg:w="3"/><text x="87.7767%" y="799.50"></text></g><g><title>rayon_core::join::join_context (3 samples, 0.21%)</title><rect x="87.5267%" y="773" width="0.2138%" height="15" fill="rgb(218,27,9)" fg:x="1228" fg:w="3"/><text x="87.7767%" y="783.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3 samples, 0.21%)</title><rect x="87.5267%" y="757" width="0.2138%" height="15" fill="rgb(246,7,6)" fg:x="1228" fg:w="3"/><text x="87.7767%" y="767.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (3 samples, 0.21%)</title><rect x="87.5267%" y="741" width="0.2138%" height="15" fill="rgb(227,135,54)" fg:x="1228" fg:w="3"/><text x="87.7767%" y="751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (3 samples, 0.21%)</title><rect x="87.5267%" y="725" width="0.2138%" height="15" fill="rgb(247,14,11)" fg:x="1228" fg:w="3"/><text x="87.7767%" y="735.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (3 samples, 0.21%)</title><rect x="87.5267%" y="709" width="0.2138%" height="15" fill="rgb(206,149,34)" fg:x="1228" fg:w="3"/><text x="87.7767%" y="719.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (3 samples, 0.21%)</title><rect x="87.5267%" y="693" width="0.2138%" height="15" fill="rgb(227,228,4)" fg:x="1228" fg:w="3"/><text x="87.7767%" y="703.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (3 samples, 0.21%)</title><rect x="87.5267%" y="677" width="0.2138%" height="15" fill="rgb(238,218,28)" fg:x="1228" fg:w="3"/><text x="87.7767%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.21%)</title><rect x="87.5267%" y="661" width="0.2138%" height="15" fill="rgb(252,86,40)" fg:x="1228" fg:w="3"/><text x="87.7767%" y="671.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 0.21%)</title><rect x="87.5267%" y="645" width="0.2138%" height="15" fill="rgb(251,225,11)" fg:x="1228" fg:w="3"/><text x="87.7767%" y="655.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (3 samples, 0.21%)</title><rect x="87.5267%" y="629" width="0.2138%" height="15" fill="rgb(206,46,49)" fg:x="1228" fg:w="3"/><text x="87.7767%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.21%)</title><rect x="87.5267%" y="613" width="0.2138%" height="15" fill="rgb(245,128,24)" fg:x="1228" fg:w="3"/><text x="87.7767%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.21%)</title><rect x="87.5267%" y="597" width="0.2138%" height="15" fill="rgb(219,177,34)" fg:x="1228" fg:w="3"/><text x="87.7767%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.21%)</title><rect x="87.5267%" y="581" width="0.2138%" height="15" fill="rgb(218,60,48)" fg:x="1228" fg:w="3"/><text x="87.7767%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.21%)</title><rect x="87.5267%" y="565" width="0.2138%" height="15" fill="rgb(221,11,5)" fg:x="1228" fg:w="3"/><text x="87.7767%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3 samples, 0.21%)</title><rect x="87.5267%" y="549" width="0.2138%" height="15" fill="rgb(220,148,13)" fg:x="1228" fg:w="3"/><text x="87.7767%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.21%)</title><rect x="87.5267%" y="533" width="0.2138%" height="15" fill="rgb(210,16,3)" fg:x="1228" fg:w="3"/><text x="87.7767%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.21%)</title><rect x="87.5267%" y="517" width="0.2138%" height="15" fill="rgb(236,80,2)" fg:x="1228" fg:w="3"/><text x="87.7767%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (3 samples, 0.21%)</title><rect x="87.5267%" y="501" width="0.2138%" height="15" fill="rgb(239,129,19)" fg:x="1228" fg:w="3"/><text x="87.7767%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.21%)</title><rect x="87.5267%" y="485" width="0.2138%" height="15" fill="rgb(220,106,35)" fg:x="1228" fg:w="3"/><text x="87.7767%" y="495.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.21%)</title><rect x="87.5267%" y="469" width="0.2138%" height="15" fill="rgb(252,139,45)" fg:x="1228" fg:w="3"/><text x="87.7767%" y="479.50"></text></g><g><title>&lt;rand_distr::normal::Normal&lt;F&gt; as rand::distributions::distribution::Distribution&lt;F&gt;&gt;::sample (3 samples, 0.21%)</title><rect x="87.5267%" y="453" width="0.2138%" height="15" fill="rgb(229,8,36)" fg:x="1228" fg:w="3"/><text x="87.7767%" y="463.50"></text></g><g><title>rand::rng::Rng::sample (3 samples, 0.21%)</title><rect x="87.5267%" y="437" width="0.2138%" height="15" fill="rgb(230,126,33)" fg:x="1228" fg:w="3"/><text x="87.7767%" y="447.50"></text></g><g><title>rand_distr::utils::ziggurat (2 samples, 0.14%)</title><rect x="87.5980%" y="421" width="0.1426%" height="15" fill="rgb(239,140,21)" fg:x="1229" fg:w="2"/><text x="87.8480%" y="431.50"></text></g><g><title>&lt;&amp;mut R as rand_core::RngCore&gt;::next_u64 (2 samples, 0.14%)</title><rect x="87.5980%" y="405" width="0.1426%" height="15" fill="rgb(254,104,9)" fg:x="1229" fg:w="2"/><text x="87.8480%" y="415.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (2 samples, 0.14%)</title><rect x="87.5980%" y="389" width="0.1426%" height="15" fill="rgb(239,52,14)" fg:x="1229" fg:w="2"/><text x="87.8480%" y="399.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (2 samples, 0.14%)</title><rect x="87.5980%" y="373" width="0.1426%" height="15" fill="rgb(208,227,44)" fg:x="1229" fg:w="2"/><text x="87.8480%" y="383.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (2 samples, 0.14%)</title><rect x="87.5980%" y="357" width="0.1426%" height="15" fill="rgb(246,18,19)" fg:x="1229" fg:w="2"/><text x="87.8480%" y="367.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (2 samples, 0.14%)</title><rect x="87.5980%" y="341" width="0.1426%" height="15" fill="rgb(235,228,25)" fg:x="1229" fg:w="2"/><text x="87.8480%" y="351.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (2 samples, 0.14%)</title><rect x="87.5980%" y="325" width="0.1426%" height="15" fill="rgb(240,156,20)" fg:x="1229" fg:w="2"/><text x="87.8480%" y="335.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (2 samples, 0.14%)</title><rect x="87.5980%" y="309" width="0.1426%" height="15" fill="rgb(224,8,20)" fg:x="1229" fg:w="2"/><text x="87.8480%" y="319.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (2 samples, 0.14%)</title><rect x="87.5980%" y="293" width="0.1426%" height="15" fill="rgb(214,12,52)" fg:x="1229" fg:w="2"/><text x="87.8480%" y="303.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (2 samples, 0.14%)</title><rect x="87.5980%" y="277" width="0.1426%" height="15" fill="rgb(211,220,47)" fg:x="1229" fg:w="2"/><text x="87.8480%" y="287.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (2 samples, 0.14%)</title><rect x="87.5980%" y="261" width="0.1426%" height="15" fill="rgb(250,173,5)" fg:x="1229" fg:w="2"/><text x="87.8480%" y="271.50"></text></g><g><title>rand_chacha::guts::round (2 samples, 0.14%)</title><rect x="87.5980%" y="245" width="0.1426%" height="15" fill="rgb(250,125,52)" fg:x="1229" fg:w="2"/><text x="87.8480%" y="255.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (1 samples, 0.07%)</title><rect x="87.6693%" y="229" width="0.0713%" height="15" fill="rgb(209,133,18)" fg:x="1230" fg:w="1"/><text x="87.9193%" y="239.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (1 samples, 0.07%)</title><rect x="87.6693%" y="213" width="0.0713%" height="15" fill="rgb(216,173,22)" fg:x="1230" fg:w="1"/><text x="87.9193%" y="223.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (1 samples, 0.07%)</title><rect x="87.6693%" y="197" width="0.0713%" height="15" fill="rgb(205,3,22)" fg:x="1230" fg:w="1"/><text x="87.9193%" y="207.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="87.7406%" y="821" width="0.0713%" height="15" fill="rgb(248,22,20)" fg:x="1231" fg:w="1"/><text x="87.9906%" y="831.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="87.7406%" y="805" width="0.0713%" height="15" fill="rgb(233,6,29)" fg:x="1231" fg:w="1"/><text x="87.9906%" y="815.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.07%)</title><rect x="87.7406%" y="789" width="0.0713%" height="15" fill="rgb(240,22,54)" fg:x="1231" fg:w="1"/><text x="87.9906%" y="799.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="87.7406%" y="773" width="0.0713%" height="15" fill="rgb(231,133,32)" fg:x="1231" fg:w="1"/><text x="87.9906%" y="783.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="87.7406%" y="757" width="0.0713%" height="15" fill="rgb(248,193,4)" fg:x="1231" fg:w="1"/><text x="87.9906%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="87.7406%" y="741" width="0.0713%" height="15" fill="rgb(211,178,46)" fg:x="1231" fg:w="1"/><text x="87.9906%" y="751.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="87.7406%" y="725" width="0.0713%" height="15" fill="rgb(224,5,42)" fg:x="1231" fg:w="1"/><text x="87.9906%" y="735.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="87.7406%" y="709" width="0.0713%" height="15" fill="rgb(239,176,25)" fg:x="1231" fg:w="1"/><text x="87.9906%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="87.7406%" y="693" width="0.0713%" height="15" fill="rgb(245,187,50)" fg:x="1231" fg:w="1"/><text x="87.9906%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="87.7406%" y="677" width="0.0713%" height="15" fill="rgb(248,24,15)" fg:x="1231" fg:w="1"/><text x="87.9906%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="87.7406%" y="661" width="0.0713%" height="15" fill="rgb(205,166,13)" fg:x="1231" fg:w="1"/><text x="87.9906%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="87.7406%" y="645" width="0.0713%" height="15" fill="rgb(208,114,23)" fg:x="1231" fg:w="1"/><text x="87.9906%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.07%)</title><rect x="87.7406%" y="629" width="0.0713%" height="15" fill="rgb(239,127,18)" fg:x="1231" fg:w="1"/><text x="87.9906%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="87.7406%" y="613" width="0.0713%" height="15" fill="rgb(219,154,28)" fg:x="1231" fg:w="1"/><text x="87.9906%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="87.7406%" y="597" width="0.0713%" height="15" fill="rgb(225,157,23)" fg:x="1231" fg:w="1"/><text x="87.9906%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.07%)</title><rect x="87.7406%" y="581" width="0.0713%" height="15" fill="rgb(219,8,6)" fg:x="1231" fg:w="1"/><text x="87.9906%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="87.7406%" y="565" width="0.0713%" height="15" fill="rgb(212,47,6)" fg:x="1231" fg:w="1"/><text x="87.9906%" y="575.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="87.7406%" y="549" width="0.0713%" height="15" fill="rgb(224,190,4)" fg:x="1231" fg:w="1"/><text x="87.9906%" y="559.50"></text></g><g><title>&lt;rand_distr::normal::Normal&lt;F&gt; as rand::distributions::distribution::Distribution&lt;F&gt;&gt;::sample (1 samples, 0.07%)</title><rect x="87.7406%" y="533" width="0.0713%" height="15" fill="rgb(239,183,29)" fg:x="1231" fg:w="1"/><text x="87.9906%" y="543.50"></text></g><g><title>rand_distr::normal::Normal&lt;F&gt;::from_zscore (1 samples, 0.07%)</title><rect x="87.7406%" y="517" width="0.0713%" height="15" fill="rgb(213,57,7)" fg:x="1231" fg:w="1"/><text x="87.9906%" y="527.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (1 samples, 0.07%)</title><rect x="87.7406%" y="501" width="0.0713%" height="15" fill="rgb(216,148,1)" fg:x="1231" fg:w="1"/><text x="87.9906%" y="511.50"></text></g><g><title>&lt;&amp;mut R as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="87.8118%" y="405" width="0.0713%" height="15" fill="rgb(236,182,29)" fg:x="1232" fg:w="1"/><text x="88.0618%" y="415.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="87.8118%" y="389" width="0.0713%" height="15" fill="rgb(244,120,48)" fg:x="1232" fg:w="1"/><text x="88.0618%" y="399.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="87.8118%" y="373" width="0.0713%" height="15" fill="rgb(206,71,34)" fg:x="1232" fg:w="1"/><text x="88.0618%" y="383.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="87.8118%" y="357" width="0.0713%" height="15" fill="rgb(242,32,6)" fg:x="1232" fg:w="1"/><text x="88.0618%" y="367.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (1 samples, 0.07%)</title><rect x="87.8118%" y="341" width="0.0713%" height="15" fill="rgb(241,35,3)" fg:x="1232" fg:w="1"/><text x="88.0618%" y="351.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.07%)</title><rect x="87.8118%" y="325" width="0.0713%" height="15" fill="rgb(222,62,19)" fg:x="1232" fg:w="1"/><text x="88.0618%" y="335.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.07%)</title><rect x="87.8118%" y="309" width="0.0713%" height="15" fill="rgb(223,110,41)" fg:x="1232" fg:w="1"/><text x="88.0618%" y="319.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (1 samples, 0.07%)</title><rect x="87.8118%" y="293" width="0.0713%" height="15" fill="rgb(208,224,4)" fg:x="1232" fg:w="1"/><text x="88.0618%" y="303.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (1 samples, 0.07%)</title><rect x="87.8118%" y="277" width="0.0713%" height="15" fill="rgb(241,137,19)" fg:x="1232" fg:w="1"/><text x="88.0618%" y="287.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (1 samples, 0.07%)</title><rect x="87.8118%" y="261" width="0.0713%" height="15" fill="rgb(244,24,17)" fg:x="1232" fg:w="1"/><text x="88.0618%" y="271.50"></text></g><g><title>rand_chacha::guts::round (1 samples, 0.07%)</title><rect x="87.8118%" y="245" width="0.0713%" height="15" fill="rgb(245,178,49)" fg:x="1232" fg:w="1"/><text x="88.0618%" y="255.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (1 samples, 0.07%)</title><rect x="87.8118%" y="229" width="0.0713%" height="15" fill="rgb(219,160,38)" fg:x="1232" fg:w="1"/><text x="88.0618%" y="239.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (1 samples, 0.07%)</title><rect x="87.8118%" y="213" width="0.0713%" height="15" fill="rgb(228,137,14)" fg:x="1232" fg:w="1"/><text x="88.0618%" y="223.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (1 samples, 0.07%)</title><rect x="87.8118%" y="197" width="0.0713%" height="15" fill="rgb(237,134,11)" fg:x="1232" fg:w="1"/><text x="88.0618%" y="207.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (3 samples, 0.21%)</title><rect x="87.7406%" y="885" width="0.2138%" height="15" fill="rgb(211,126,44)" fg:x="1231" fg:w="3"/><text x="87.9906%" y="895.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (3 samples, 0.21%)</title><rect x="87.7406%" y="869" width="0.2138%" height="15" fill="rgb(226,171,33)" fg:x="1231" fg:w="3"/><text x="87.9906%" y="879.50"></text></g><g><title>rayon_core::join::join_context (3 samples, 0.21%)</title><rect x="87.7406%" y="853" width="0.2138%" height="15" fill="rgb(253,99,13)" fg:x="1231" fg:w="3"/><text x="87.9906%" y="863.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3 samples, 0.21%)</title><rect x="87.7406%" y="837" width="0.2138%" height="15" fill="rgb(244,48,7)" fg:x="1231" fg:w="3"/><text x="87.9906%" y="847.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (2 samples, 0.14%)</title><rect x="87.8118%" y="821" width="0.1426%" height="15" fill="rgb(244,217,54)" fg:x="1232" fg:w="2"/><text x="88.0618%" y="831.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.14%)</title><rect x="87.8118%" y="805" width="0.1426%" height="15" fill="rgb(224,15,18)" fg:x="1232" fg:w="2"/><text x="88.0618%" y="815.50"></text></g><g><title>std::panicking::try (2 samples, 0.14%)</title><rect x="87.8118%" y="789" width="0.1426%" height="15" fill="rgb(244,99,12)" fg:x="1232" fg:w="2"/><text x="88.0618%" y="799.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.14%)</title><rect x="87.8118%" y="773" width="0.1426%" height="15" fill="rgb(233,226,8)" fg:x="1232" fg:w="2"/><text x="88.0618%" y="783.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.14%)</title><rect x="87.8118%" y="757" width="0.1426%" height="15" fill="rgb(229,211,3)" fg:x="1232" fg:w="2"/><text x="88.0618%" y="767.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (2 samples, 0.14%)</title><rect x="87.8118%" y="741" width="0.1426%" height="15" fill="rgb(216,140,21)" fg:x="1232" fg:w="2"/><text x="88.0618%" y="751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (2 samples, 0.14%)</title><rect x="87.8118%" y="725" width="0.1426%" height="15" fill="rgb(234,122,30)" fg:x="1232" fg:w="2"/><text x="88.0618%" y="735.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (2 samples, 0.14%)</title><rect x="87.8118%" y="709" width="0.1426%" height="15" fill="rgb(236,25,46)" fg:x="1232" fg:w="2"/><text x="88.0618%" y="719.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (2 samples, 0.14%)</title><rect x="87.8118%" y="693" width="0.1426%" height="15" fill="rgb(217,52,54)" fg:x="1232" fg:w="2"/><text x="88.0618%" y="703.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (2 samples, 0.14%)</title><rect x="87.8118%" y="677" width="0.1426%" height="15" fill="rgb(222,29,26)" fg:x="1232" fg:w="2"/><text x="88.0618%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.14%)</title><rect x="87.8118%" y="661" width="0.1426%" height="15" fill="rgb(216,177,29)" fg:x="1232" fg:w="2"/><text x="88.0618%" y="671.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.14%)</title><rect x="87.8118%" y="645" width="0.1426%" height="15" fill="rgb(247,136,51)" fg:x="1232" fg:w="2"/><text x="88.0618%" y="655.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (2 samples, 0.14%)</title><rect x="87.8118%" y="629" width="0.1426%" height="15" fill="rgb(231,47,47)" fg:x="1232" fg:w="2"/><text x="88.0618%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.14%)</title><rect x="87.8118%" y="613" width="0.1426%" height="15" fill="rgb(211,192,36)" fg:x="1232" fg:w="2"/><text x="88.0618%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.14%)</title><rect x="87.8118%" y="597" width="0.1426%" height="15" fill="rgb(229,156,32)" fg:x="1232" fg:w="2"/><text x="88.0618%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.14%)</title><rect x="87.8118%" y="581" width="0.1426%" height="15" fill="rgb(248,213,20)" fg:x="1232" fg:w="2"/><text x="88.0618%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.14%)</title><rect x="87.8118%" y="565" width="0.1426%" height="15" fill="rgb(217,64,7)" fg:x="1232" fg:w="2"/><text x="88.0618%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.14%)</title><rect x="87.8118%" y="549" width="0.1426%" height="15" fill="rgb(232,142,8)" fg:x="1232" fg:w="2"/><text x="88.0618%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="87.8118%" y="533" width="0.1426%" height="15" fill="rgb(224,92,44)" fg:x="1232" fg:w="2"/><text x="88.0618%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="87.8118%" y="517" width="0.1426%" height="15" fill="rgb(214,169,17)" fg:x="1232" fg:w="2"/><text x="88.0618%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (2 samples, 0.14%)</title><rect x="87.8118%" y="501" width="0.1426%" height="15" fill="rgb(210,59,37)" fg:x="1232" fg:w="2"/><text x="88.0618%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="87.8118%" y="485" width="0.1426%" height="15" fill="rgb(214,116,48)" fg:x="1232" fg:w="2"/><text x="88.0618%" y="495.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="87.8118%" y="469" width="0.1426%" height="15" fill="rgb(244,191,6)" fg:x="1232" fg:w="2"/><text x="88.0618%" y="479.50"></text></g><g><title>&lt;rand_distr::normal::Normal&lt;F&gt; as rand::distributions::distribution::Distribution&lt;F&gt;&gt;::sample (2 samples, 0.14%)</title><rect x="87.8118%" y="453" width="0.1426%" height="15" fill="rgb(241,50,52)" fg:x="1232" fg:w="2"/><text x="88.0618%" y="463.50"></text></g><g><title>rand::rng::Rng::sample (2 samples, 0.14%)</title><rect x="87.8118%" y="437" width="0.1426%" height="15" fill="rgb(236,75,39)" fg:x="1232" fg:w="2"/><text x="88.0618%" y="447.50"></text></g><g><title>rand_distr::utils::ziggurat (2 samples, 0.14%)</title><rect x="87.8118%" y="421" width="0.1426%" height="15" fill="rgb(236,99,0)" fg:x="1232" fg:w="2"/><text x="88.0618%" y="431.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::abs (1 samples, 0.07%)</title><rect x="87.8831%" y="405" width="0.0713%" height="15" fill="rgb(207,202,15)" fg:x="1233" fg:w="1"/><text x="88.1331%" y="415.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (5 samples, 0.36%)</title><rect x="87.7406%" y="949" width="0.3564%" height="15" fill="rgb(233,207,14)" fg:x="1231" fg:w="5"/><text x="87.9906%" y="959.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.36%)</title><rect x="87.7406%" y="933" width="0.3564%" height="15" fill="rgb(226,27,51)" fg:x="1231" fg:w="5"/><text x="87.9906%" y="943.50"></text></g><g><title>rayon_core::join::join_context (5 samples, 0.36%)</title><rect x="87.7406%" y="917" width="0.3564%" height="15" fill="rgb(206,104,42)" fg:x="1231" fg:w="5"/><text x="87.9906%" y="927.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5 samples, 0.36%)</title><rect x="87.7406%" y="901" width="0.3564%" height="15" fill="rgb(212,225,4)" fg:x="1231" fg:w="5"/><text x="87.9906%" y="911.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (2 samples, 0.14%)</title><rect x="87.9544%" y="885" width="0.1426%" height="15" fill="rgb(233,96,42)" fg:x="1234" fg:w="2"/><text x="88.2044%" y="895.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.14%)</title><rect x="87.9544%" y="869" width="0.1426%" height="15" fill="rgb(229,21,32)" fg:x="1234" fg:w="2"/><text x="88.2044%" y="879.50"></text></g><g><title>std::panicking::try (2 samples, 0.14%)</title><rect x="87.9544%" y="853" width="0.1426%" height="15" fill="rgb(226,216,24)" fg:x="1234" fg:w="2"/><text x="88.2044%" y="863.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.14%)</title><rect x="87.9544%" y="837" width="0.1426%" height="15" fill="rgb(221,163,17)" fg:x="1234" fg:w="2"/><text x="88.2044%" y="847.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.14%)</title><rect x="87.9544%" y="821" width="0.1426%" height="15" fill="rgb(216,216,42)" fg:x="1234" fg:w="2"/><text x="88.2044%" y="831.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (2 samples, 0.14%)</title><rect x="87.9544%" y="805" width="0.1426%" height="15" fill="rgb(240,118,7)" fg:x="1234" fg:w="2"/><text x="88.2044%" y="815.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (2 samples, 0.14%)</title><rect x="87.9544%" y="789" width="0.1426%" height="15" fill="rgb(221,67,37)" fg:x="1234" fg:w="2"/><text x="88.2044%" y="799.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 0.14%)</title><rect x="87.9544%" y="773" width="0.1426%" height="15" fill="rgb(241,32,44)" fg:x="1234" fg:w="2"/><text x="88.2044%" y="783.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2 samples, 0.14%)</title><rect x="87.9544%" y="757" width="0.1426%" height="15" fill="rgb(235,204,43)" fg:x="1234" fg:w="2"/><text x="88.2044%" y="767.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (2 samples, 0.14%)</title><rect x="87.9544%" y="741" width="0.1426%" height="15" fill="rgb(213,116,10)" fg:x="1234" fg:w="2"/><text x="88.2044%" y="751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (2 samples, 0.14%)</title><rect x="87.9544%" y="725" width="0.1426%" height="15" fill="rgb(239,15,48)" fg:x="1234" fg:w="2"/><text x="88.2044%" y="735.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (2 samples, 0.14%)</title><rect x="87.9544%" y="709" width="0.1426%" height="15" fill="rgb(207,123,36)" fg:x="1234" fg:w="2"/><text x="88.2044%" y="719.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (2 samples, 0.14%)</title><rect x="87.9544%" y="693" width="0.1426%" height="15" fill="rgb(209,103,30)" fg:x="1234" fg:w="2"/><text x="88.2044%" y="703.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (2 samples, 0.14%)</title><rect x="87.9544%" y="677" width="0.1426%" height="15" fill="rgb(238,100,19)" fg:x="1234" fg:w="2"/><text x="88.2044%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.14%)</title><rect x="87.9544%" y="661" width="0.1426%" height="15" fill="rgb(244,30,14)" fg:x="1234" fg:w="2"/><text x="88.2044%" y="671.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.14%)</title><rect x="87.9544%" y="645" width="0.1426%" height="15" fill="rgb(249,174,6)" fg:x="1234" fg:w="2"/><text x="88.2044%" y="655.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (2 samples, 0.14%)</title><rect x="87.9544%" y="629" width="0.1426%" height="15" fill="rgb(235,213,41)" fg:x="1234" fg:w="2"/><text x="88.2044%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.14%)</title><rect x="87.9544%" y="613" width="0.1426%" height="15" fill="rgb(213,118,6)" fg:x="1234" fg:w="2"/><text x="88.2044%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.14%)</title><rect x="87.9544%" y="597" width="0.1426%" height="15" fill="rgb(235,44,51)" fg:x="1234" fg:w="2"/><text x="88.2044%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.14%)</title><rect x="87.9544%" y="581" width="0.1426%" height="15" fill="rgb(217,9,53)" fg:x="1234" fg:w="2"/><text x="88.2044%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.14%)</title><rect x="87.9544%" y="565" width="0.1426%" height="15" fill="rgb(237,172,34)" fg:x="1234" fg:w="2"/><text x="88.2044%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.14%)</title><rect x="87.9544%" y="549" width="0.1426%" height="15" fill="rgb(206,206,11)" fg:x="1234" fg:w="2"/><text x="88.2044%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="87.9544%" y="533" width="0.1426%" height="15" fill="rgb(214,149,29)" fg:x="1234" fg:w="2"/><text x="88.2044%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="87.9544%" y="517" width="0.1426%" height="15" fill="rgb(208,123,3)" fg:x="1234" fg:w="2"/><text x="88.2044%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (2 samples, 0.14%)</title><rect x="87.9544%" y="501" width="0.1426%" height="15" fill="rgb(229,126,4)" fg:x="1234" fg:w="2"/><text x="88.2044%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="87.9544%" y="485" width="0.1426%" height="15" fill="rgb(222,92,36)" fg:x="1234" fg:w="2"/><text x="88.2044%" y="495.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="87.9544%" y="469" width="0.1426%" height="15" fill="rgb(216,39,41)" fg:x="1234" fg:w="2"/><text x="88.2044%" y="479.50"></text></g><g><title>&lt;rand_distr::normal::Normal&lt;F&gt; as rand::distributions::distribution::Distribution&lt;F&gt;&gt;::sample (2 samples, 0.14%)</title><rect x="87.9544%" y="453" width="0.1426%" height="15" fill="rgb(253,127,28)" fg:x="1234" fg:w="2"/><text x="88.2044%" y="463.50"></text></g><g><title>rand::rng::Rng::sample (2 samples, 0.14%)</title><rect x="87.9544%" y="437" width="0.1426%" height="15" fill="rgb(249,152,51)" fg:x="1234" fg:w="2"/><text x="88.2044%" y="447.50"></text></g><g><title>rand_distr::utils::ziggurat (2 samples, 0.14%)</title><rect x="87.9544%" y="421" width="0.1426%" height="15" fill="rgb(209,123,42)" fg:x="1234" fg:w="2"/><text x="88.2044%" y="431.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::abs (1 samples, 0.07%)</title><rect x="88.0257%" y="405" width="0.0713%" height="15" fill="rgb(241,118,22)" fg:x="1235" fg:w="1"/><text x="88.2757%" y="415.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::arith::AddAssign&gt;::add_assign (1 samples, 0.07%)</title><rect x="88.1682%" y="229" width="0.0713%" height="15" fill="rgb(208,25,7)" fg:x="1237" fg:w="1"/><text x="88.4182%" y="239.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::AddAssign&gt;::add_assign (1 samples, 0.07%)</title><rect x="88.1682%" y="213" width="0.0713%" height="15" fill="rgb(243,144,39)" fg:x="1237" fg:w="1"/><text x="88.4182%" y="223.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (1 samples, 0.07%)</title><rect x="88.1682%" y="197" width="0.0713%" height="15" fill="rgb(250,50,5)" fg:x="1237" fg:w="1"/><text x="88.4182%" y="207.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (3 samples, 0.21%)</title><rect x="88.0969%" y="741" width="0.2138%" height="15" fill="rgb(207,67,11)" fg:x="1236" fg:w="3"/><text x="88.3469%" y="751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (3 samples, 0.21%)</title><rect x="88.0969%" y="725" width="0.2138%" height="15" fill="rgb(245,204,40)" fg:x="1236" fg:w="3"/><text x="88.3469%" y="735.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (3 samples, 0.21%)</title><rect x="88.0969%" y="709" width="0.2138%" height="15" fill="rgb(238,228,24)" fg:x="1236" fg:w="3"/><text x="88.3469%" y="719.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (3 samples, 0.21%)</title><rect x="88.0969%" y="693" width="0.2138%" height="15" fill="rgb(217,116,22)" fg:x="1236" fg:w="3"/><text x="88.3469%" y="703.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (3 samples, 0.21%)</title><rect x="88.0969%" y="677" width="0.2138%" height="15" fill="rgb(234,98,12)" fg:x="1236" fg:w="3"/><text x="88.3469%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.21%)</title><rect x="88.0969%" y="661" width="0.2138%" height="15" fill="rgb(242,170,50)" fg:x="1236" fg:w="3"/><text x="88.3469%" y="671.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 0.21%)</title><rect x="88.0969%" y="645" width="0.2138%" height="15" fill="rgb(235,7,5)" fg:x="1236" fg:w="3"/><text x="88.3469%" y="655.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (3 samples, 0.21%)</title><rect x="88.0969%" y="629" width="0.2138%" height="15" fill="rgb(241,114,28)" fg:x="1236" fg:w="3"/><text x="88.3469%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.21%)</title><rect x="88.0969%" y="613" width="0.2138%" height="15" fill="rgb(246,112,42)" fg:x="1236" fg:w="3"/><text x="88.3469%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.21%)</title><rect x="88.0969%" y="597" width="0.2138%" height="15" fill="rgb(248,228,14)" fg:x="1236" fg:w="3"/><text x="88.3469%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.21%)</title><rect x="88.0969%" y="581" width="0.2138%" height="15" fill="rgb(208,133,18)" fg:x="1236" fg:w="3"/><text x="88.3469%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.21%)</title><rect x="88.0969%" y="565" width="0.2138%" height="15" fill="rgb(207,35,49)" fg:x="1236" fg:w="3"/><text x="88.3469%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3 samples, 0.21%)</title><rect x="88.0969%" y="549" width="0.2138%" height="15" fill="rgb(205,68,36)" fg:x="1236" fg:w="3"/><text x="88.3469%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.21%)</title><rect x="88.0969%" y="533" width="0.2138%" height="15" fill="rgb(245,62,40)" fg:x="1236" fg:w="3"/><text x="88.3469%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.21%)</title><rect x="88.0969%" y="517" width="0.2138%" height="15" fill="rgb(228,27,24)" fg:x="1236" fg:w="3"/><text x="88.3469%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (3 samples, 0.21%)</title><rect x="88.0969%" y="501" width="0.2138%" height="15" fill="rgb(253,19,12)" fg:x="1236" fg:w="3"/><text x="88.3469%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.21%)</title><rect x="88.0969%" y="485" width="0.2138%" height="15" fill="rgb(232,28,20)" fg:x="1236" fg:w="3"/><text x="88.3469%" y="495.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.21%)</title><rect x="88.0969%" y="469" width="0.2138%" height="15" fill="rgb(218,35,51)" fg:x="1236" fg:w="3"/><text x="88.3469%" y="479.50"></text></g><g><title>&lt;rand_distr::normal::Normal&lt;F&gt; as rand::distributions::distribution::Distribution&lt;F&gt;&gt;::sample (3 samples, 0.21%)</title><rect x="88.0969%" y="453" width="0.2138%" height="15" fill="rgb(212,90,40)" fg:x="1236" fg:w="3"/><text x="88.3469%" y="463.50"></text></g><g><title>rand::rng::Rng::sample (3 samples, 0.21%)</title><rect x="88.0969%" y="437" width="0.2138%" height="15" fill="rgb(220,172,12)" fg:x="1236" fg:w="3"/><text x="88.3469%" y="447.50"></text></g><g><title>rand_distr::utils::ziggurat (3 samples, 0.21%)</title><rect x="88.0969%" y="421" width="0.2138%" height="15" fill="rgb(226,159,20)" fg:x="1236" fg:w="3"/><text x="88.3469%" y="431.50"></text></g><g><title>&lt;&amp;mut R as rand_core::RngCore&gt;::next_u64 (2 samples, 0.14%)</title><rect x="88.1682%" y="405" width="0.1426%" height="15" fill="rgb(234,205,16)" fg:x="1237" fg:w="2"/><text x="88.4182%" y="415.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (2 samples, 0.14%)</title><rect x="88.1682%" y="389" width="0.1426%" height="15" fill="rgb(207,9,39)" fg:x="1237" fg:w="2"/><text x="88.4182%" y="399.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (2 samples, 0.14%)</title><rect x="88.1682%" y="373" width="0.1426%" height="15" fill="rgb(249,143,15)" fg:x="1237" fg:w="2"/><text x="88.4182%" y="383.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (2 samples, 0.14%)</title><rect x="88.1682%" y="357" width="0.1426%" height="15" fill="rgb(253,133,29)" fg:x="1237" fg:w="2"/><text x="88.4182%" y="367.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (2 samples, 0.14%)</title><rect x="88.1682%" y="341" width="0.1426%" height="15" fill="rgb(221,187,0)" fg:x="1237" fg:w="2"/><text x="88.4182%" y="351.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (2 samples, 0.14%)</title><rect x="88.1682%" y="325" width="0.1426%" height="15" fill="rgb(205,204,26)" fg:x="1237" fg:w="2"/><text x="88.4182%" y="335.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (2 samples, 0.14%)</title><rect x="88.1682%" y="309" width="0.1426%" height="15" fill="rgb(224,68,54)" fg:x="1237" fg:w="2"/><text x="88.4182%" y="319.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (2 samples, 0.14%)</title><rect x="88.1682%" y="293" width="0.1426%" height="15" fill="rgb(209,67,4)" fg:x="1237" fg:w="2"/><text x="88.4182%" y="303.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (2 samples, 0.14%)</title><rect x="88.1682%" y="277" width="0.1426%" height="15" fill="rgb(228,229,18)" fg:x="1237" fg:w="2"/><text x="88.4182%" y="287.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (2 samples, 0.14%)</title><rect x="88.1682%" y="261" width="0.1426%" height="15" fill="rgb(231,89,13)" fg:x="1237" fg:w="2"/><text x="88.4182%" y="271.50"></text></g><g><title>rand_chacha::guts::round (2 samples, 0.14%)</title><rect x="88.1682%" y="245" width="0.1426%" height="15" fill="rgb(210,182,18)" fg:x="1237" fg:w="2"/><text x="88.4182%" y="255.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (1 samples, 0.07%)</title><rect x="88.2395%" y="229" width="0.0713%" height="15" fill="rgb(240,105,2)" fg:x="1238" fg:w="1"/><text x="88.4895%" y="239.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (1 samples, 0.07%)</title><rect x="88.2395%" y="213" width="0.0713%" height="15" fill="rgb(207,170,50)" fg:x="1238" fg:w="1"/><text x="88.4895%" y="223.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (1 samples, 0.07%)</title><rect x="88.2395%" y="197" width="0.0713%" height="15" fill="rgb(232,133,24)" fg:x="1238" fg:w="1"/><text x="88.4895%" y="207.50"></text></g><g><title>start_thread (24 samples, 1.71%)</title><rect x="86.6714%" y="1621" width="1.7106%" height="15" fill="rgb(235,166,27)" fg:x="1216" fg:w="24"/><text x="86.9214%" y="1631.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (24 samples, 1.71%)</title><rect x="86.6714%" y="1605" width="1.7106%" height="15" fill="rgb(209,19,13)" fg:x="1216" fg:w="24"/><text x="86.9214%" y="1615.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (24 samples, 1.71%)</title><rect x="86.6714%" y="1589" width="1.7106%" height="15" fill="rgb(226,79,39)" fg:x="1216" fg:w="24"/><text x="86.9214%" y="1599.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (24 samples, 1.71%)</title><rect x="86.6714%" y="1573" width="1.7106%" height="15" fill="rgb(222,163,10)" fg:x="1216" fg:w="24"/><text x="86.9214%" y="1583.50"></text></g><g><title>std::panic::catch_unwind (24 samples, 1.71%)</title><rect x="86.6714%" y="1557" width="1.7106%" height="15" fill="rgb(214,44,19)" fg:x="1216" fg:w="24"/><text x="86.9214%" y="1567.50"></text></g><g><title>std::panicking::try (24 samples, 1.71%)</title><rect x="86.6714%" y="1541" width="1.7106%" height="15" fill="rgb(210,217,13)" fg:x="1216" fg:w="24"/><text x="86.9214%" y="1551.50"></text></g><g><title>std::panicking::try::do_call (24 samples, 1.71%)</title><rect x="86.6714%" y="1525" width="1.7106%" height="15" fill="rgb(237,61,54)" fg:x="1216" fg:w="24"/><text x="86.9214%" y="1535.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (24 samples, 1.71%)</title><rect x="86.6714%" y="1509" width="1.7106%" height="15" fill="rgb(226,184,24)" fg:x="1216" fg:w="24"/><text x="86.9214%" y="1519.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (24 samples, 1.71%)</title><rect x="86.6714%" y="1493" width="1.7106%" height="15" fill="rgb(223,226,4)" fg:x="1216" fg:w="24"/><text x="86.9214%" y="1503.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (24 samples, 1.71%)</title><rect x="86.6714%" y="1477" width="1.7106%" height="15" fill="rgb(210,26,41)" fg:x="1216" fg:w="24"/><text x="86.9214%" y="1487.50"></text></g><g><title>rayon_core::registry::main_loop (24 samples, 1.71%)</title><rect x="86.6714%" y="1461" width="1.7106%" height="15" fill="rgb(220,221,6)" fg:x="1216" fg:w="24"/><text x="86.9214%" y="1471.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (24 samples, 1.71%)</title><rect x="86.6714%" y="1445" width="1.7106%" height="15" fill="rgb(225,89,49)" fg:x="1216" fg:w="24"/><text x="86.9214%" y="1455.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (24 samples, 1.71%)</title><rect x="86.6714%" y="1429" width="1.7106%" height="15" fill="rgb(218,70,45)" fg:x="1216" fg:w="24"/><text x="86.9214%" y="1439.50"></text></g><g><title>rayon_core::job::JobRef::execute (24 samples, 1.71%)</title><rect x="86.6714%" y="1413" width="1.7106%" height="15" fill="rgb(238,166,21)" fg:x="1216" fg:w="24"/><text x="86.9214%" y="1423.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (24 samples, 1.71%)</title><rect x="86.6714%" y="1397" width="1.7106%" height="15" fill="rgb(224,141,44)" fg:x="1216" fg:w="24"/><text x="86.9214%" y="1407.50"></text></g><g><title>std::panic::catch_unwind (24 samples, 1.71%)</title><rect x="86.6714%" y="1381" width="1.7106%" height="15" fill="rgb(230,12,49)" fg:x="1216" fg:w="24"/><text x="86.9214%" y="1391.50"></text></g><g><title>std::panicking::try (24 samples, 1.71%)</title><rect x="86.6714%" y="1365" width="1.7106%" height="15" fill="rgb(212,174,12)" fg:x="1216" fg:w="24"/><text x="86.9214%" y="1375.50"></text></g><g><title>std::panicking::try::do_call (24 samples, 1.71%)</title><rect x="86.6714%" y="1349" width="1.7106%" height="15" fill="rgb(246,67,9)" fg:x="1216" fg:w="24"/><text x="86.9214%" y="1359.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (24 samples, 1.71%)</title><rect x="86.6714%" y="1333" width="1.7106%" height="15" fill="rgb(239,35,23)" fg:x="1216" fg:w="24"/><text x="86.9214%" y="1343.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (24 samples, 1.71%)</title><rect x="86.6714%" y="1317" width="1.7106%" height="15" fill="rgb(211,167,0)" fg:x="1216" fg:w="24"/><text x="86.9214%" y="1327.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (24 samples, 1.71%)</title><rect x="86.6714%" y="1301" width="1.7106%" height="15" fill="rgb(225,119,45)" fg:x="1216" fg:w="24"/><text x="86.9214%" y="1311.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (24 samples, 1.71%)</title><rect x="86.6714%" y="1285" width="1.7106%" height="15" fill="rgb(210,162,6)" fg:x="1216" fg:w="24"/><text x="86.9214%" y="1295.50"></text></g><g><title>rayon_core::join::join_context (24 samples, 1.71%)</title><rect x="86.6714%" y="1269" width="1.7106%" height="15" fill="rgb(208,118,35)" fg:x="1216" fg:w="24"/><text x="86.9214%" y="1279.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (24 samples, 1.71%)</title><rect x="86.6714%" y="1253" width="1.7106%" height="15" fill="rgb(239,4,53)" fg:x="1216" fg:w="24"/><text x="86.9214%" y="1263.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (21 samples, 1.50%)</title><rect x="86.8852%" y="1237" width="1.4968%" height="15" fill="rgb(213,130,21)" fg:x="1219" fg:w="21"/><text x="87.1352%" y="1247.50"></text></g><g><title>std::panic::catch_unwind (21 samples, 1.50%)</title><rect x="86.8852%" y="1221" width="1.4968%" height="15" fill="rgb(235,148,0)" fg:x="1219" fg:w="21"/><text x="87.1352%" y="1231.50"></text></g><g><title>std::panicking::try (21 samples, 1.50%)</title><rect x="86.8852%" y="1205" width="1.4968%" height="15" fill="rgb(244,224,18)" fg:x="1219" fg:w="21"/><text x="87.1352%" y="1215.50"></text></g><g><title>std::panicking::try::do_call (21 samples, 1.50%)</title><rect x="86.8852%" y="1189" width="1.4968%" height="15" fill="rgb(211,214,4)" fg:x="1219" fg:w="21"/><text x="87.1352%" y="1199.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (21 samples, 1.50%)</title><rect x="86.8852%" y="1173" width="1.4968%" height="15" fill="rgb(206,119,25)" fg:x="1219" fg:w="21"/><text x="87.1352%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (21 samples, 1.50%)</title><rect x="86.8852%" y="1157" width="1.4968%" height="15" fill="rgb(243,93,47)" fg:x="1219" fg:w="21"/><text x="87.1352%" y="1167.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (21 samples, 1.50%)</title><rect x="86.8852%" y="1141" width="1.4968%" height="15" fill="rgb(224,194,6)" fg:x="1219" fg:w="21"/><text x="87.1352%" y="1151.50"></text></g><g><title>rayon_core::join::join_context (21 samples, 1.50%)</title><rect x="86.8852%" y="1125" width="1.4968%" height="15" fill="rgb(243,229,6)" fg:x="1219" fg:w="21"/><text x="87.1352%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (21 samples, 1.50%)</title><rect x="86.8852%" y="1109" width="1.4968%" height="15" fill="rgb(207,23,50)" fg:x="1219" fg:w="21"/><text x="87.1352%" y="1119.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (9 samples, 0.64%)</title><rect x="87.7406%" y="1093" width="0.6415%" height="15" fill="rgb(253,192,32)" fg:x="1231" fg:w="9"/><text x="87.9906%" y="1103.50"></text></g><g><title>std::panic::catch_unwind (9 samples, 0.64%)</title><rect x="87.7406%" y="1077" width="0.6415%" height="15" fill="rgb(213,21,6)" fg:x="1231" fg:w="9"/><text x="87.9906%" y="1087.50"></text></g><g><title>std::panicking::try (9 samples, 0.64%)</title><rect x="87.7406%" y="1061" width="0.6415%" height="15" fill="rgb(243,151,13)" fg:x="1231" fg:w="9"/><text x="87.9906%" y="1071.50"></text></g><g><title>std::panicking::try::do_call (9 samples, 0.64%)</title><rect x="87.7406%" y="1045" width="0.6415%" height="15" fill="rgb(233,165,41)" fg:x="1231" fg:w="9"/><text x="87.9906%" y="1055.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (9 samples, 0.64%)</title><rect x="87.7406%" y="1029" width="0.6415%" height="15" fill="rgb(246,176,45)" fg:x="1231" fg:w="9"/><text x="87.9906%" y="1039.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (9 samples, 0.64%)</title><rect x="87.7406%" y="1013" width="0.6415%" height="15" fill="rgb(217,170,52)" fg:x="1231" fg:w="9"/><text x="87.9906%" y="1023.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (9 samples, 0.64%)</title><rect x="87.7406%" y="997" width="0.6415%" height="15" fill="rgb(214,203,54)" fg:x="1231" fg:w="9"/><text x="87.9906%" y="1007.50"></text></g><g><title>rayon_core::join::join_context (9 samples, 0.64%)</title><rect x="87.7406%" y="981" width="0.6415%" height="15" fill="rgb(248,215,49)" fg:x="1231" fg:w="9"/><text x="87.9906%" y="991.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (9 samples, 0.64%)</title><rect x="87.7406%" y="965" width="0.6415%" height="15" fill="rgb(208,46,10)" fg:x="1231" fg:w="9"/><text x="87.9906%" y="975.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.29%)</title><rect x="88.0969%" y="949" width="0.2851%" height="15" fill="rgb(254,5,31)" fg:x="1236" fg:w="4"/><text x="88.3469%" y="959.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.29%)</title><rect x="88.0969%" y="933" width="0.2851%" height="15" fill="rgb(222,104,33)" fg:x="1236" fg:w="4"/><text x="88.3469%" y="943.50"></text></g><g><title>std::panicking::try (4 samples, 0.29%)</title><rect x="88.0969%" y="917" width="0.2851%" height="15" fill="rgb(248,49,16)" fg:x="1236" fg:w="4"/><text x="88.3469%" y="927.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.29%)</title><rect x="88.0969%" y="901" width="0.2851%" height="15" fill="rgb(232,198,41)" fg:x="1236" fg:w="4"/><text x="88.3469%" y="911.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.29%)</title><rect x="88.0969%" y="885" width="0.2851%" height="15" fill="rgb(214,125,3)" fg:x="1236" fg:w="4"/><text x="88.3469%" y="895.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (4 samples, 0.29%)</title><rect x="88.0969%" y="869" width="0.2851%" height="15" fill="rgb(229,220,28)" fg:x="1236" fg:w="4"/><text x="88.3469%" y="879.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.29%)</title><rect x="88.0969%" y="853" width="0.2851%" height="15" fill="rgb(222,64,37)" fg:x="1236" fg:w="4"/><text x="88.3469%" y="863.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.29%)</title><rect x="88.0969%" y="837" width="0.2851%" height="15" fill="rgb(249,184,13)" fg:x="1236" fg:w="4"/><text x="88.3469%" y="847.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.29%)</title><rect x="88.0969%" y="821" width="0.2851%" height="15" fill="rgb(252,176,6)" fg:x="1236" fg:w="4"/><text x="88.3469%" y="831.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 0.29%)</title><rect x="88.0969%" y="805" width="0.2851%" height="15" fill="rgb(228,153,7)" fg:x="1236" fg:w="4"/><text x="88.3469%" y="815.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.29%)</title><rect x="88.0969%" y="789" width="0.2851%" height="15" fill="rgb(242,193,5)" fg:x="1236" fg:w="4"/><text x="88.3469%" y="799.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.29%)</title><rect x="88.0969%" y="773" width="0.2851%" height="15" fill="rgb(232,140,9)" fg:x="1236" fg:w="4"/><text x="88.3469%" y="783.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.29%)</title><rect x="88.0969%" y="757" width="0.2851%" height="15" fill="rgb(213,222,16)" fg:x="1236" fg:w="4"/><text x="88.3469%" y="767.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="88.3108%" y="741" width="0.0713%" height="15" fill="rgb(222,75,50)" fg:x="1239" fg:w="1"/><text x="88.5608%" y="751.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="88.3108%" y="725" width="0.0713%" height="15" fill="rgb(205,180,2)" fg:x="1239" fg:w="1"/><text x="88.5608%" y="735.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="88.3108%" y="709" width="0.0713%" height="15" fill="rgb(216,34,7)" fg:x="1239" fg:w="1"/><text x="88.5608%" y="719.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="88.3108%" y="693" width="0.0713%" height="15" fill="rgb(253,16,32)" fg:x="1239" fg:w="1"/><text x="88.5608%" y="703.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="88.3108%" y="677" width="0.0713%" height="15" fill="rgb(208,97,28)" fg:x="1239" fg:w="1"/><text x="88.5608%" y="687.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="88.3108%" y="661" width="0.0713%" height="15" fill="rgb(225,92,11)" fg:x="1239" fg:w="1"/><text x="88.5608%" y="671.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="88.3108%" y="645" width="0.0713%" height="15" fill="rgb(243,38,12)" fg:x="1239" fg:w="1"/><text x="88.5608%" y="655.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.07%)</title><rect x="88.3108%" y="629" width="0.0713%" height="15" fill="rgb(208,139,16)" fg:x="1239" fg:w="1"/><text x="88.5608%" y="639.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="88.3108%" y="613" width="0.0713%" height="15" fill="rgb(227,24,9)" fg:x="1239" fg:w="1"/><text x="88.5608%" y="623.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="88.3108%" y="597" width="0.0713%" height="15" fill="rgb(206,62,11)" fg:x="1239" fg:w="1"/><text x="88.5608%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="88.3108%" y="581" width="0.0713%" height="15" fill="rgb(228,134,27)" fg:x="1239" fg:w="1"/><text x="88.5608%" y="591.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="88.3108%" y="565" width="0.0713%" height="15" fill="rgb(205,55,33)" fg:x="1239" fg:w="1"/><text x="88.5608%" y="575.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="88.3108%" y="549" width="0.0713%" height="15" fill="rgb(243,75,43)" fg:x="1239" fg:w="1"/><text x="88.5608%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="88.3108%" y="533" width="0.0713%" height="15" fill="rgb(223,27,42)" fg:x="1239" fg:w="1"/><text x="88.5608%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="88.3108%" y="517" width="0.0713%" height="15" fill="rgb(232,189,33)" fg:x="1239" fg:w="1"/><text x="88.5608%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="88.3108%" y="501" width="0.0713%" height="15" fill="rgb(210,9,39)" fg:x="1239" fg:w="1"/><text x="88.5608%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="88.3108%" y="485" width="0.0713%" height="15" fill="rgb(242,85,26)" fg:x="1239" fg:w="1"/><text x="88.5608%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.07%)</title><rect x="88.3108%" y="469" width="0.0713%" height="15" fill="rgb(248,44,4)" fg:x="1239" fg:w="1"/><text x="88.5608%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="88.3108%" y="453" width="0.0713%" height="15" fill="rgb(250,96,46)" fg:x="1239" fg:w="1"/><text x="88.5608%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="88.3108%" y="437" width="0.0713%" height="15" fill="rgb(229,116,26)" fg:x="1239" fg:w="1"/><text x="88.5608%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.07%)</title><rect x="88.3108%" y="421" width="0.0713%" height="15" fill="rgb(246,94,34)" fg:x="1239" fg:w="1"/><text x="88.5608%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="88.3108%" y="405" width="0.0713%" height="15" fill="rgb(251,73,21)" fg:x="1239" fg:w="1"/><text x="88.5608%" y="415.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="88.3108%" y="389" width="0.0713%" height="15" fill="rgb(254,121,25)" fg:x="1239" fg:w="1"/><text x="88.5608%" y="399.50"></text></g><g><title>&lt;rand_distr::normal::Normal&lt;F&gt; as rand::distributions::distribution::Distribution&lt;F&gt;&gt;::sample (1 samples, 0.07%)</title><rect x="88.3108%" y="373" width="0.0713%" height="15" fill="rgb(215,161,49)" fg:x="1239" fg:w="1"/><text x="88.5608%" y="383.50"></text></g><g><title>rand::rng::Rng::sample (1 samples, 0.07%)</title><rect x="88.3108%" y="357" width="0.0713%" height="15" fill="rgb(221,43,13)" fg:x="1239" fg:w="1"/><text x="88.5608%" y="367.50"></text></g><g><title>rand_distr::utils::ziggurat (1 samples, 0.07%)</title><rect x="88.3108%" y="341" width="0.0713%" height="15" fill="rgb(249,5,37)" fg:x="1239" fg:w="1"/><text x="88.5608%" y="351.50"></text></g><g><title>&lt;&amp;mut R as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="88.3108%" y="325" width="0.0713%" height="15" fill="rgb(226,25,44)" fg:x="1239" fg:w="1"/><text x="88.5608%" y="335.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="88.3108%" y="309" width="0.0713%" height="15" fill="rgb(238,189,16)" fg:x="1239" fg:w="1"/><text x="88.5608%" y="319.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="88.3108%" y="293" width="0.0713%" height="15" fill="rgb(251,186,8)" fg:x="1239" fg:w="1"/><text x="88.5608%" y="303.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="88.3108%" y="277" width="0.0713%" height="15" fill="rgb(254,34,31)" fg:x="1239" fg:w="1"/><text x="88.5608%" y="287.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (1 samples, 0.07%)</title><rect x="88.3108%" y="261" width="0.0713%" height="15" fill="rgb(225,215,27)" fg:x="1239" fg:w="1"/><text x="88.5608%" y="271.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.07%)</title><rect x="88.3108%" y="245" width="0.0713%" height="15" fill="rgb(221,192,48)" fg:x="1239" fg:w="1"/><text x="88.5608%" y="255.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.07%)</title><rect x="88.3108%" y="229" width="0.0713%" height="15" fill="rgb(219,137,20)" fg:x="1239" fg:w="1"/><text x="88.5608%" y="239.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (1 samples, 0.07%)</title><rect x="88.3108%" y="213" width="0.0713%" height="15" fill="rgb(219,84,11)" fg:x="1239" fg:w="1"/><text x="88.5608%" y="223.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (1 samples, 0.07%)</title><rect x="88.3108%" y="197" width="0.0713%" height="15" fill="rgb(224,10,23)" fg:x="1239" fg:w="1"/><text x="88.5608%" y="207.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (1 samples, 0.07%)</title><rect x="88.3108%" y="181" width="0.0713%" height="15" fill="rgb(248,22,39)" fg:x="1239" fg:w="1"/><text x="88.5608%" y="191.50"></text></g><g><title>rand_chacha::guts::round (1 samples, 0.07%)</title><rect x="88.3108%" y="165" width="0.0713%" height="15" fill="rgb(212,154,20)" fg:x="1239" fg:w="1"/><text x="88.5608%" y="175.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::bit::BitXor&gt;::bitxor (1 samples, 0.07%)</title><rect x="88.3108%" y="149" width="0.0713%" height="15" fill="rgb(236,199,50)" fg:x="1239" fg:w="1"/><text x="88.5608%" y="159.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::bit::BitXor&gt;::bitxor (1 samples, 0.07%)</title><rect x="88.3108%" y="133" width="0.0713%" height="15" fill="rgb(211,9,17)" fg:x="1239" fg:w="1"/><text x="88.5608%" y="143.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.07%)</title><rect x="88.3108%" y="117" width="0.0713%" height="15" fill="rgb(243,216,36)" fg:x="1239" fg:w="1"/><text x="88.5608%" y="127.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="88.3820%" y="1221" width="0.0713%" height="15" fill="rgb(250,2,10)" fg:x="1240" fg:w="1"/><text x="88.6320%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="88.3820%" y="1205" width="0.0713%" height="15" fill="rgb(226,50,48)" fg:x="1240" fg:w="1"/><text x="88.6320%" y="1215.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="88.3820%" y="1189" width="0.0713%" height="15" fill="rgb(243,81,16)" fg:x="1240" fg:w="1"/><text x="88.6320%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="88.3820%" y="1173" width="0.0713%" height="15" fill="rgb(250,14,2)" fg:x="1240" fg:w="1"/><text x="88.6320%" y="1183.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="88.3820%" y="1157" width="0.0713%" height="15" fill="rgb(233,135,29)" fg:x="1240" fg:w="1"/><text x="88.6320%" y="1167.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="88.3820%" y="1141" width="0.0713%" height="15" fill="rgb(224,64,43)" fg:x="1240" fg:w="1"/><text x="88.6320%" y="1151.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="88.3820%" y="1125" width="0.0713%" height="15" fill="rgb(238,84,13)" fg:x="1240" fg:w="1"/><text x="88.6320%" y="1135.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="88.3820%" y="1109" width="0.0713%" height="15" fill="rgb(253,48,26)" fg:x="1240" fg:w="1"/><text x="88.6320%" y="1119.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="88.3820%" y="1093" width="0.0713%" height="15" fill="rgb(205,223,31)" fg:x="1240" fg:w="1"/><text x="88.6320%" y="1103.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="88.3820%" y="1077" width="0.0713%" height="15" fill="rgb(221,41,32)" fg:x="1240" fg:w="1"/><text x="88.6320%" y="1087.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="88.3820%" y="1061" width="0.0713%" height="15" fill="rgb(213,158,31)" fg:x="1240" fg:w="1"/><text x="88.6320%" y="1071.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="88.3820%" y="1045" width="0.0713%" height="15" fill="rgb(245,126,43)" fg:x="1240" fg:w="1"/><text x="88.6320%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="88.3820%" y="1029" width="0.0713%" height="15" fill="rgb(227,7,22)" fg:x="1240" fg:w="1"/><text x="88.6320%" y="1039.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="88.3820%" y="1013" width="0.0713%" height="15" fill="rgb(252,90,44)" fg:x="1240" fg:w="1"/><text x="88.6320%" y="1023.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="88.3820%" y="997" width="0.0713%" height="15" fill="rgb(253,91,0)" fg:x="1240" fg:w="1"/><text x="88.6320%" y="1007.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="88.3820%" y="981" width="0.0713%" height="15" fill="rgb(252,175,49)" fg:x="1240" fg:w="1"/><text x="88.6320%" y="991.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="88.3820%" y="965" width="0.0713%" height="15" fill="rgb(246,150,1)" fg:x="1240" fg:w="1"/><text x="88.6320%" y="975.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="88.3820%" y="949" width="0.0713%" height="15" fill="rgb(241,192,25)" fg:x="1240" fg:w="1"/><text x="88.6320%" y="959.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="88.3820%" y="933" width="0.0713%" height="15" fill="rgb(239,187,11)" fg:x="1240" fg:w="1"/><text x="88.6320%" y="943.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.07%)</title><rect x="88.3820%" y="917" width="0.0713%" height="15" fill="rgb(218,202,51)" fg:x="1240" fg:w="1"/><text x="88.6320%" y="927.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="88.3820%" y="901" width="0.0713%" height="15" fill="rgb(225,176,8)" fg:x="1240" fg:w="1"/><text x="88.6320%" y="911.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="88.3820%" y="885" width="0.0713%" height="15" fill="rgb(219,122,41)" fg:x="1240" fg:w="1"/><text x="88.6320%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="88.3820%" y="869" width="0.0713%" height="15" fill="rgb(248,140,20)" fg:x="1240" fg:w="1"/><text x="88.6320%" y="879.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="88.3820%" y="853" width="0.0713%" height="15" fill="rgb(245,41,37)" fg:x="1240" fg:w="1"/><text x="88.6320%" y="863.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="88.3820%" y="837" width="0.0713%" height="15" fill="rgb(235,82,39)" fg:x="1240" fg:w="1"/><text x="88.6320%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="88.3820%" y="821" width="0.0713%" height="15" fill="rgb(230,108,42)" fg:x="1240" fg:w="1"/><text x="88.6320%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="88.3820%" y="805" width="0.0713%" height="15" fill="rgb(215,150,50)" fg:x="1240" fg:w="1"/><text x="88.6320%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="88.3820%" y="789" width="0.0713%" height="15" fill="rgb(233,212,5)" fg:x="1240" fg:w="1"/><text x="88.6320%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="88.3820%" y="773" width="0.0713%" height="15" fill="rgb(245,80,22)" fg:x="1240" fg:w="1"/><text x="88.6320%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.07%)</title><rect x="88.3820%" y="757" width="0.0713%" height="15" fill="rgb(238,129,16)" fg:x="1240" fg:w="1"/><text x="88.6320%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="88.3820%" y="741" width="0.0713%" height="15" fill="rgb(240,19,0)" fg:x="1240" fg:w="1"/><text x="88.6320%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="88.3820%" y="725" width="0.0713%" height="15" fill="rgb(232,42,35)" fg:x="1240" fg:w="1"/><text x="88.6320%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.07%)</title><rect x="88.3820%" y="709" width="0.0713%" height="15" fill="rgb(223,130,24)" fg:x="1240" fg:w="1"/><text x="88.6320%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="88.3820%" y="693" width="0.0713%" height="15" fill="rgb(237,16,22)" fg:x="1240" fg:w="1"/><text x="88.6320%" y="703.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="88.3820%" y="677" width="0.0713%" height="15" fill="rgb(248,192,20)" fg:x="1240" fg:w="1"/><text x="88.6320%" y="687.50"></text></g><g><title>&lt;rand_distr::normal::Normal&lt;F&gt; as rand::distributions::distribution::Distribution&lt;F&gt;&gt;::sample (1 samples, 0.07%)</title><rect x="88.3820%" y="661" width="0.0713%" height="15" fill="rgb(233,167,2)" fg:x="1240" fg:w="1"/><text x="88.6320%" y="671.50"></text></g><g><title>rand::rng::Rng::sample (1 samples, 0.07%)</title><rect x="88.3820%" y="645" width="0.0713%" height="15" fill="rgb(252,71,44)" fg:x="1240" fg:w="1"/><text x="88.6320%" y="655.50"></text></g><g><title>rand_distr::utils::ziggurat (1 samples, 0.07%)</title><rect x="88.3820%" y="629" width="0.0713%" height="15" fill="rgb(238,37,47)" fg:x="1240" fg:w="1"/><text x="88.6320%" y="639.50"></text></g><g><title>&lt;&amp;mut R as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="88.3820%" y="613" width="0.0713%" height="15" fill="rgb(214,202,54)" fg:x="1240" fg:w="1"/><text x="88.6320%" y="623.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="88.3820%" y="597" width="0.0713%" height="15" fill="rgb(254,165,40)" fg:x="1240" fg:w="1"/><text x="88.6320%" y="607.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="88.3820%" y="581" width="0.0713%" height="15" fill="rgb(246,173,38)" fg:x="1240" fg:w="1"/><text x="88.6320%" y="591.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="88.3820%" y="565" width="0.0713%" height="15" fill="rgb(215,3,27)" fg:x="1240" fg:w="1"/><text x="88.6320%" y="575.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (1 samples, 0.07%)</title><rect x="88.3820%" y="549" width="0.0713%" height="15" fill="rgb(239,169,51)" fg:x="1240" fg:w="1"/><text x="88.6320%" y="559.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.07%)</title><rect x="88.3820%" y="533" width="0.0713%" height="15" fill="rgb(212,5,25)" fg:x="1240" fg:w="1"/><text x="88.6320%" y="543.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.07%)</title><rect x="88.3820%" y="517" width="0.0713%" height="15" fill="rgb(243,45,17)" fg:x="1240" fg:w="1"/><text x="88.6320%" y="527.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (1 samples, 0.07%)</title><rect x="88.3820%" y="501" width="0.0713%" height="15" fill="rgb(242,97,9)" fg:x="1240" fg:w="1"/><text x="88.6320%" y="511.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (1 samples, 0.07%)</title><rect x="88.3820%" y="485" width="0.0713%" height="15" fill="rgb(228,71,31)" fg:x="1240" fg:w="1"/><text x="88.6320%" y="495.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (1 samples, 0.07%)</title><rect x="88.3820%" y="469" width="0.0713%" height="15" fill="rgb(252,184,16)" fg:x="1240" fg:w="1"/><text x="88.6320%" y="479.50"></text></g><g><title>rand_chacha::guts::round (1 samples, 0.07%)</title><rect x="88.3820%" y="453" width="0.0713%" height="15" fill="rgb(236,169,46)" fg:x="1240" fg:w="1"/><text x="88.6320%" y="463.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (1 samples, 0.07%)</title><rect x="88.3820%" y="437" width="0.0713%" height="15" fill="rgb(207,17,47)" fg:x="1240" fg:w="1"/><text x="88.6320%" y="447.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (1 samples, 0.07%)</title><rect x="88.3820%" y="421" width="0.0713%" height="15" fill="rgb(206,201,28)" fg:x="1240" fg:w="1"/><text x="88.6320%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.07%)</title><rect x="88.3820%" y="405" width="0.0713%" height="15" fill="rgb(224,184,23)" fg:x="1240" fg:w="1"/><text x="88.6320%" y="415.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (2 samples, 0.14%)</title><rect x="88.3820%" y="1621" width="0.1426%" height="15" fill="rgb(208,139,48)" fg:x="1240" fg:w="2"/><text x="88.6320%" y="1631.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.14%)</title><rect x="88.3820%" y="1605" width="0.1426%" height="15" fill="rgb(208,130,10)" fg:x="1240" fg:w="2"/><text x="88.6320%" y="1615.50"></text></g><g><title>std::panicking::try (2 samples, 0.14%)</title><rect x="88.3820%" y="1589" width="0.1426%" height="15" fill="rgb(211,213,45)" fg:x="1240" fg:w="2"/><text x="88.6320%" y="1599.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.14%)</title><rect x="88.3820%" y="1573" width="0.1426%" height="15" fill="rgb(235,100,30)" fg:x="1240" fg:w="2"/><text x="88.6320%" y="1583.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.14%)</title><rect x="88.3820%" y="1557" width="0.1426%" height="15" fill="rgb(206,144,31)" fg:x="1240" fg:w="2"/><text x="88.6320%" y="1567.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (2 samples, 0.14%)</title><rect x="88.3820%" y="1541" width="0.1426%" height="15" fill="rgb(224,200,26)" fg:x="1240" fg:w="2"/><text x="88.6320%" y="1551.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (2 samples, 0.14%)</title><rect x="88.3820%" y="1525" width="0.1426%" height="15" fill="rgb(247,104,53)" fg:x="1240" fg:w="2"/><text x="88.6320%" y="1535.50"></text></g><g><title>rayon_core::registry::main_loop (2 samples, 0.14%)</title><rect x="88.3820%" y="1509" width="0.1426%" height="15" fill="rgb(220,14,17)" fg:x="1240" fg:w="2"/><text x="88.6320%" y="1519.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (2 samples, 0.14%)</title><rect x="88.3820%" y="1493" width="0.1426%" height="15" fill="rgb(230,140,40)" fg:x="1240" fg:w="2"/><text x="88.6320%" y="1503.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (2 samples, 0.14%)</title><rect x="88.3820%" y="1477" width="0.1426%" height="15" fill="rgb(229,2,41)" fg:x="1240" fg:w="2"/><text x="88.6320%" y="1487.50"></text></g><g><title>rayon_core::job::JobRef::execute (2 samples, 0.14%)</title><rect x="88.3820%" y="1461" width="0.1426%" height="15" fill="rgb(232,89,16)" fg:x="1240" fg:w="2"/><text x="88.6320%" y="1471.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (2 samples, 0.14%)</title><rect x="88.3820%" y="1445" width="0.1426%" height="15" fill="rgb(247,59,52)" fg:x="1240" fg:w="2"/><text x="88.6320%" y="1455.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.14%)</title><rect x="88.3820%" y="1429" width="0.1426%" height="15" fill="rgb(226,110,21)" fg:x="1240" fg:w="2"/><text x="88.6320%" y="1439.50"></text></g><g><title>std::panicking::try (2 samples, 0.14%)</title><rect x="88.3820%" y="1413" width="0.1426%" height="15" fill="rgb(224,176,43)" fg:x="1240" fg:w="2"/><text x="88.6320%" y="1423.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.14%)</title><rect x="88.3820%" y="1397" width="0.1426%" height="15" fill="rgb(221,73,6)" fg:x="1240" fg:w="2"/><text x="88.6320%" y="1407.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.14%)</title><rect x="88.3820%" y="1381" width="0.1426%" height="15" fill="rgb(232,78,19)" fg:x="1240" fg:w="2"/><text x="88.6320%" y="1391.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (2 samples, 0.14%)</title><rect x="88.3820%" y="1365" width="0.1426%" height="15" fill="rgb(233,112,48)" fg:x="1240" fg:w="2"/><text x="88.6320%" y="1375.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (2 samples, 0.14%)</title><rect x="88.3820%" y="1349" width="0.1426%" height="15" fill="rgb(243,131,47)" fg:x="1240" fg:w="2"/><text x="88.6320%" y="1359.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (2 samples, 0.14%)</title><rect x="88.3820%" y="1333" width="0.1426%" height="15" fill="rgb(226,51,1)" fg:x="1240" fg:w="2"/><text x="88.6320%" y="1343.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 0.14%)</title><rect x="88.3820%" y="1317" width="0.1426%" height="15" fill="rgb(247,58,7)" fg:x="1240" fg:w="2"/><text x="88.6320%" y="1327.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2 samples, 0.14%)</title><rect x="88.3820%" y="1301" width="0.1426%" height="15" fill="rgb(209,7,32)" fg:x="1240" fg:w="2"/><text x="88.6320%" y="1311.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (2 samples, 0.14%)</title><rect x="88.3820%" y="1285" width="0.1426%" height="15" fill="rgb(209,39,41)" fg:x="1240" fg:w="2"/><text x="88.6320%" y="1295.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (2 samples, 0.14%)</title><rect x="88.3820%" y="1269" width="0.1426%" height="15" fill="rgb(226,182,46)" fg:x="1240" fg:w="2"/><text x="88.6320%" y="1279.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 0.14%)</title><rect x="88.3820%" y="1253" width="0.1426%" height="15" fill="rgb(230,219,10)" fg:x="1240" fg:w="2"/><text x="88.6320%" y="1263.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2 samples, 0.14%)</title><rect x="88.3820%" y="1237" width="0.1426%" height="15" fill="rgb(227,175,30)" fg:x="1240" fg:w="2"/><text x="88.6320%" y="1247.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="88.4533%" y="1221" width="0.0713%" height="15" fill="rgb(217,2,50)" fg:x="1241" fg:w="1"/><text x="88.7033%" y="1231.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="88.4533%" y="1205" width="0.0713%" height="15" fill="rgb(229,160,0)" fg:x="1241" fg:w="1"/><text x="88.7033%" y="1215.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="88.4533%" y="1189" width="0.0713%" height="15" fill="rgb(207,78,37)" fg:x="1241" fg:w="1"/><text x="88.7033%" y="1199.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="88.4533%" y="1173" width="0.0713%" height="15" fill="rgb(225,57,0)" fg:x="1241" fg:w="1"/><text x="88.7033%" y="1183.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="88.4533%" y="1157" width="0.0713%" height="15" fill="rgb(232,154,2)" fg:x="1241" fg:w="1"/><text x="88.7033%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="88.4533%" y="1141" width="0.0713%" height="15" fill="rgb(241,212,25)" fg:x="1241" fg:w="1"/><text x="88.7033%" y="1151.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="88.4533%" y="1125" width="0.0713%" height="15" fill="rgb(226,69,20)" fg:x="1241" fg:w="1"/><text x="88.7033%" y="1135.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="88.4533%" y="1109" width="0.0713%" height="15" fill="rgb(247,184,54)" fg:x="1241" fg:w="1"/><text x="88.7033%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="88.4533%" y="1093" width="0.0713%" height="15" fill="rgb(210,145,0)" fg:x="1241" fg:w="1"/><text x="88.7033%" y="1103.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="88.4533%" y="1077" width="0.0713%" height="15" fill="rgb(253,82,12)" fg:x="1241" fg:w="1"/><text x="88.7033%" y="1087.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="88.4533%" y="1061" width="0.0713%" height="15" fill="rgb(245,42,11)" fg:x="1241" fg:w="1"/><text x="88.7033%" y="1071.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="88.4533%" y="1045" width="0.0713%" height="15" fill="rgb(219,147,32)" fg:x="1241" fg:w="1"/><text x="88.7033%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="88.4533%" y="1029" width="0.0713%" height="15" fill="rgb(246,12,7)" fg:x="1241" fg:w="1"/><text x="88.7033%" y="1039.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="88.4533%" y="1013" width="0.0713%" height="15" fill="rgb(243,50,9)" fg:x="1241" fg:w="1"/><text x="88.7033%" y="1023.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="88.4533%" y="997" width="0.0713%" height="15" fill="rgb(219,149,6)" fg:x="1241" fg:w="1"/><text x="88.7033%" y="1007.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="88.4533%" y="981" width="0.0713%" height="15" fill="rgb(241,51,42)" fg:x="1241" fg:w="1"/><text x="88.7033%" y="991.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="88.4533%" y="965" width="0.0713%" height="15" fill="rgb(226,128,27)" fg:x="1241" fg:w="1"/><text x="88.7033%" y="975.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="88.4533%" y="949" width="0.0713%" height="15" fill="rgb(244,144,4)" fg:x="1241" fg:w="1"/><text x="88.7033%" y="959.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="88.4533%" y="933" width="0.0713%" height="15" fill="rgb(221,4,13)" fg:x="1241" fg:w="1"/><text x="88.7033%" y="943.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.07%)</title><rect x="88.4533%" y="917" width="0.0713%" height="15" fill="rgb(208,170,28)" fg:x="1241" fg:w="1"/><text x="88.7033%" y="927.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="88.4533%" y="901" width="0.0713%" height="15" fill="rgb(226,131,13)" fg:x="1241" fg:w="1"/><text x="88.7033%" y="911.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="88.4533%" y="885" width="0.0713%" height="15" fill="rgb(215,72,41)" fg:x="1241" fg:w="1"/><text x="88.7033%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="88.4533%" y="869" width="0.0713%" height="15" fill="rgb(243,108,20)" fg:x="1241" fg:w="1"/><text x="88.7033%" y="879.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="88.4533%" y="853" width="0.0713%" height="15" fill="rgb(230,189,17)" fg:x="1241" fg:w="1"/><text x="88.7033%" y="863.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="88.4533%" y="837" width="0.0713%" height="15" fill="rgb(220,50,17)" fg:x="1241" fg:w="1"/><text x="88.7033%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="88.4533%" y="821" width="0.0713%" height="15" fill="rgb(248,152,48)" fg:x="1241" fg:w="1"/><text x="88.7033%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="88.4533%" y="805" width="0.0713%" height="15" fill="rgb(244,91,11)" fg:x="1241" fg:w="1"/><text x="88.7033%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="88.4533%" y="789" width="0.0713%" height="15" fill="rgb(220,157,5)" fg:x="1241" fg:w="1"/><text x="88.7033%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="88.4533%" y="773" width="0.0713%" height="15" fill="rgb(253,137,8)" fg:x="1241" fg:w="1"/><text x="88.7033%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.07%)</title><rect x="88.4533%" y="757" width="0.0713%" height="15" fill="rgb(217,137,51)" fg:x="1241" fg:w="1"/><text x="88.7033%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="88.4533%" y="741" width="0.0713%" height="15" fill="rgb(218,209,53)" fg:x="1241" fg:w="1"/><text x="88.7033%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="88.4533%" y="725" width="0.0713%" height="15" fill="rgb(249,137,25)" fg:x="1241" fg:w="1"/><text x="88.7033%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.07%)</title><rect x="88.4533%" y="709" width="0.0713%" height="15" fill="rgb(239,155,26)" fg:x="1241" fg:w="1"/><text x="88.7033%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="88.4533%" y="693" width="0.0713%" height="15" fill="rgb(227,85,46)" fg:x="1241" fg:w="1"/><text x="88.7033%" y="703.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="88.4533%" y="677" width="0.0713%" height="15" fill="rgb(251,107,43)" fg:x="1241" fg:w="1"/><text x="88.7033%" y="687.50"></text></g><g><title>&lt;rand_distr::normal::Normal&lt;F&gt; as rand::distributions::distribution::Distribution&lt;F&gt;&gt;::sample (1 samples, 0.07%)</title><rect x="88.4533%" y="661" width="0.0713%" height="15" fill="rgb(234,170,33)" fg:x="1241" fg:w="1"/><text x="88.7033%" y="671.50"></text></g><g><title>rand::rng::Rng::sample (1 samples, 0.07%)</title><rect x="88.4533%" y="645" width="0.0713%" height="15" fill="rgb(206,29,35)" fg:x="1241" fg:w="1"/><text x="88.7033%" y="655.50"></text></g><g><title>rand_distr::utils::ziggurat (1 samples, 0.07%)</title><rect x="88.4533%" y="629" width="0.0713%" height="15" fill="rgb(227,138,25)" fg:x="1241" fg:w="1"/><text x="88.7033%" y="639.50"></text></g><g><title>[unknown] (1,195 samples, 85.17%)</title><rect x="3.4212%" y="1637" width="85.1746%" height="15" fill="rgb(249,131,35)" fg:x="48" fg:w="1195"/><text x="3.6712%" y="1647.50">[unknown]</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.07%)</title><rect x="88.5246%" y="1621" width="0.0713%" height="15" fill="rgb(239,6,40)" fg:x="1242" fg:w="1"/><text x="88.7746%" y="1631.50"></text></g><g><title>__pthread_getattr_np (2 samples, 0.14%)</title><rect x="91.4469%" y="1557" width="0.1426%" height="15" fill="rgb(246,136,47)" fg:x="1283" fg:w="2"/><text x="91.6969%" y="1567.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.14%)</title><rect x="91.4469%" y="1541" width="0.1426%" height="15" fill="rgb(253,58,26)" fg:x="1283" fg:w="2"/><text x="91.6969%" y="1551.50"></text></g><g><title>tcache_init.part.0 (1 samples, 0.07%)</title><rect x="91.5182%" y="1525" width="0.0713%" height="15" fill="rgb(237,141,10)" fg:x="1284" fg:w="1"/><text x="91.7682%" y="1535.50"></text></g><g><title>arena_get2.part.0 (1 samples, 0.07%)</title><rect x="91.5182%" y="1509" width="0.0713%" height="15" fill="rgb(234,156,12)" fg:x="1284" fg:w="1"/><text x="91.7682%" y="1519.50"></text></g><g><title>new_heap (1 samples, 0.07%)</title><rect x="91.5182%" y="1493" width="0.0713%" height="15" fill="rgb(243,224,36)" fg:x="1284" fg:w="1"/><text x="91.7682%" y="1503.50"></text></g><g><title>rayon_core::registry::Registry::pop_injected_job (1 samples, 0.07%)</title><rect x="91.6607%" y="1397" width="0.0713%" height="15" fill="rgb(205,229,51)" fg:x="1286" fg:w="1"/><text x="91.9107%" y="1407.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.07%)</title><rect x="91.6607%" y="1381" width="0.0713%" height="15" fill="rgb(223,189,4)" fg:x="1286" fg:w="1"/><text x="91.9107%" y="1391.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.07%)</title><rect x="91.6607%" y="1365" width="0.0713%" height="15" fill="rgb(249,167,54)" fg:x="1286" fg:w="1"/><text x="91.9107%" y="1375.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (1 samples, 0.07%)</title><rect x="91.7320%" y="1381" width="0.0713%" height="15" fill="rgb(218,34,28)" fg:x="1287" fg:w="1"/><text x="91.9820%" y="1391.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.07%)</title><rect x="91.7320%" y="1365" width="0.0713%" height="15" fill="rgb(232,109,42)" fg:x="1287" fg:w="1"/><text x="91.9820%" y="1375.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.07%)</title><rect x="91.7320%" y="1349" width="0.0713%" height="15" fill="rgb(248,214,46)" fg:x="1287" fg:w="1"/><text x="91.9820%" y="1359.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.07%)</title><rect x="91.8033%" y="1333" width="0.0713%" height="15" fill="rgb(244,216,40)" fg:x="1288" fg:w="1"/><text x="92.0533%" y="1343.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.07%)</title><rect x="91.8033%" y="1317" width="0.0713%" height="15" fill="rgb(231,226,31)" fg:x="1288" fg:w="1"/><text x="92.0533%" y="1327.50"></text></g><g><title>core::mem::replace (1 samples, 0.07%)</title><rect x="91.8033%" y="1301" width="0.0713%" height="15" fill="rgb(238,38,43)" fg:x="1288" fg:w="1"/><text x="92.0533%" y="1311.50"></text></g><g><title>core::ptr::write (1 samples, 0.07%)</title><rect x="91.8033%" y="1285" width="0.0713%" height="15" fill="rgb(208,88,43)" fg:x="1288" fg:w="1"/><text x="92.0533%" y="1295.50"></text></g><g><title>core::sync::atomic::AtomicIsize::load (1 samples, 0.07%)</title><rect x="91.8746%" y="1269" width="0.0713%" height="15" fill="rgb(205,136,37)" fg:x="1289" fg:w="1"/><text x="92.1246%" y="1279.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.07%)</title><rect x="91.8746%" y="1253" width="0.0713%" height="15" fill="rgb(237,34,14)" fg:x="1289" fg:w="1"/><text x="92.1246%" y="1263.50"></text></g><g><title>crossbeam_epoch::default::is_pinned (1 samples, 0.07%)</title><rect x="91.9458%" y="1269" width="0.0713%" height="15" fill="rgb(236,193,44)" fg:x="1290" fg:w="1"/><text x="92.1958%" y="1279.50"></text></g><g><title>crossbeam_epoch::default::with_handle (1 samples, 0.07%)</title><rect x="91.9458%" y="1253" width="0.0713%" height="15" fill="rgb(231,48,10)" fg:x="1290" fg:w="1"/><text x="92.1958%" y="1263.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.07%)</title><rect x="91.9458%" y="1237" width="0.0713%" height="15" fill="rgb(213,141,34)" fg:x="1290" fg:w="1"/><text x="92.1958%" y="1247.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::__getit (1 samples, 0.07%)</title><rect x="91.9458%" y="1221" width="0.0713%" height="15" fill="rgb(249,130,34)" fg:x="1290" fg:w="1"/><text x="92.1958%" y="1231.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.07%)</title><rect x="91.9458%" y="1205" width="0.0713%" height="15" fill="rgb(219,42,41)" fg:x="1290" fg:w="1"/><text x="92.1958%" y="1215.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::initialize (1 samples, 0.07%)</title><rect x="91.9458%" y="1189" width="0.0713%" height="15" fill="rgb(224,100,54)" fg:x="1290" fg:w="1"/><text x="92.1958%" y="1199.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.07%)</title><rect x="91.9458%" y="1173" width="0.0713%" height="15" fill="rgb(229,200,27)" fg:x="1290" fg:w="1"/><text x="92.1958%" y="1183.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::__init (1 samples, 0.07%)</title><rect x="91.9458%" y="1157" width="0.0713%" height="15" fill="rgb(217,118,10)" fg:x="1290" fg:w="1"/><text x="92.1958%" y="1167.50"></text></g><g><title>crossbeam_epoch::internal::Local::register (1 samples, 0.07%)</title><rect x="91.9458%" y="1141" width="0.0713%" height="15" fill="rgb(206,22,3)" fg:x="1290" fg:w="1"/><text x="92.1958%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (6 samples, 0.43%)</title><rect x="91.6607%" y="1429" width="0.4277%" height="15" fill="rgb(232,163,46)" fg:x="1286" fg:w="6"/><text x="91.9107%" y="1439.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold::{{closure}} (6 samples, 0.43%)</title><rect x="91.6607%" y="1413" width="0.4277%" height="15" fill="rgb(206,95,13)" fg:x="1286" fg:w="6"/><text x="91.9107%" y="1423.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal (5 samples, 0.36%)</title><rect x="91.7320%" y="1397" width="0.3564%" height="15" fill="rgb(253,154,18)" fg:x="1287" fg:w="5"/><text x="91.9820%" y="1407.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (4 samples, 0.29%)</title><rect x="91.8033%" y="1381" width="0.2851%" height="15" fill="rgb(219,32,23)" fg:x="1288" fg:w="4"/><text x="92.0533%" y="1391.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.29%)</title><rect x="91.8033%" y="1365" width="0.2851%" height="15" fill="rgb(230,191,45)" fg:x="1288" fg:w="4"/><text x="92.0533%" y="1375.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.29%)</title><rect x="91.8033%" y="1349" width="0.2851%" height="15" fill="rgb(229,64,36)" fg:x="1288" fg:w="4"/><text x="92.0533%" y="1359.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 0.21%)</title><rect x="91.8746%" y="1333" width="0.2138%" height="15" fill="rgb(205,129,25)" fg:x="1289" fg:w="3"/><text x="92.1246%" y="1343.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (3 samples, 0.21%)</title><rect x="91.8746%" y="1317" width="0.2138%" height="15" fill="rgb(254,112,7)" fg:x="1289" fg:w="3"/><text x="92.1246%" y="1327.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (3 samples, 0.21%)</title><rect x="91.8746%" y="1301" width="0.2138%" height="15" fill="rgb(226,53,48)" fg:x="1289" fg:w="3"/><text x="92.1246%" y="1311.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::{{closure}} (3 samples, 0.21%)</title><rect x="91.8746%" y="1285" width="0.2138%" height="15" fill="rgb(214,153,38)" fg:x="1289" fg:w="3"/><text x="92.1246%" y="1295.50"></text></g><g><title>crossbeam_epoch::default::with_handle (1 samples, 0.07%)</title><rect x="92.0171%" y="1269" width="0.0713%" height="15" fill="rgb(243,101,7)" fg:x="1291" fg:w="1"/><text x="92.2671%" y="1279.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.07%)</title><rect x="92.0171%" y="1253" width="0.0713%" height="15" fill="rgb(240,140,22)" fg:x="1291" fg:w="1"/><text x="92.2671%" y="1263.50"></text></g><g><title>crossbeam_epoch::default::with_handle::{{closure}} (1 samples, 0.07%)</title><rect x="92.0171%" y="1237" width="0.0713%" height="15" fill="rgb(235,114,2)" fg:x="1291" fg:w="1"/><text x="92.2671%" y="1247.50"></text></g><g><title>crossbeam_epoch::default::pin::{{closure}} (1 samples, 0.07%)</title><rect x="92.0171%" y="1221" width="0.0713%" height="15" fill="rgb(242,59,12)" fg:x="1291" fg:w="1"/><text x="92.2671%" y="1231.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (1 samples, 0.07%)</title><rect x="92.0171%" y="1205" width="0.0713%" height="15" fill="rgb(252,134,9)" fg:x="1291" fg:w="1"/><text x="92.2671%" y="1215.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (1 samples, 0.07%)</title><rect x="92.0171%" y="1189" width="0.0713%" height="15" fill="rgb(236,4,44)" fg:x="1291" fg:w="1"/><text x="92.2671%" y="1199.50"></text></g><g><title>crossbeam_epoch::atomic::Atomic&lt;T&gt;::load (1 samples, 0.07%)</title><rect x="92.0171%" y="1173" width="0.0713%" height="15" fill="rgb(254,172,41)" fg:x="1291" fg:w="1"/><text x="92.2671%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.07%)</title><rect x="92.0171%" y="1157" width="0.0713%" height="15" fill="rgb(244,63,20)" fg:x="1291" fg:w="1"/><text x="92.2671%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.07%)</title><rect x="92.0171%" y="1141" width="0.0713%" height="15" fill="rgb(250,73,31)" fg:x="1291" fg:w="1"/><text x="92.2671%" y="1151.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="92.0884%" y="1365" width="0.0713%" height="15" fill="rgb(241,38,36)" fg:x="1292" fg:w="1"/><text x="92.3384%" y="1375.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (1 samples, 0.07%)</title><rect x="92.0884%" y="1349" width="0.0713%" height="15" fill="rgb(245,211,2)" fg:x="1292" fg:w="1"/><text x="92.3384%" y="1359.50"></text></g><g><title>rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="92.0884%" y="1333" width="0.0713%" height="15" fill="rgb(206,120,28)" fg:x="1292" fg:w="1"/><text x="92.3384%" y="1343.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="92.0884%" y="1317" width="0.0713%" height="15" fill="rgb(211,59,34)" fg:x="1292" fg:w="1"/><text x="92.3384%" y="1327.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="92.0884%" y="1301" width="0.0713%" height="15" fill="rgb(233,168,5)" fg:x="1292" fg:w="1"/><text x="92.3384%" y="1311.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="92.0884%" y="1285" width="0.0713%" height="15" fill="rgb(234,33,13)" fg:x="1292" fg:w="1"/><text x="92.3384%" y="1295.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="92.0884%" y="1269" width="0.0713%" height="15" fill="rgb(231,150,26)" fg:x="1292" fg:w="1"/><text x="92.3384%" y="1279.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="92.0884%" y="1253" width="0.0713%" height="15" fill="rgb(217,191,4)" fg:x="1292" fg:w="1"/><text x="92.3384%" y="1263.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="92.0884%" y="1237" width="0.0713%" height="15" fill="rgb(246,198,38)" fg:x="1292" fg:w="1"/><text x="92.3384%" y="1247.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="92.0884%" y="1221" width="0.0713%" height="15" fill="rgb(245,64,37)" fg:x="1292" fg:w="1"/><text x="92.3384%" y="1231.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="92.0884%" y="1205" width="0.0713%" height="15" fill="rgb(250,30,36)" fg:x="1292" fg:w="1"/><text x="92.3384%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="92.0884%" y="1189" width="0.0713%" height="15" fill="rgb(217,86,53)" fg:x="1292" fg:w="1"/><text x="92.3384%" y="1199.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.07%)</title><rect x="92.0884%" y="1173" width="0.0713%" height="15" fill="rgb(228,157,16)" fg:x="1292" fg:w="1"/><text x="92.3384%" y="1183.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (1 samples, 0.07%)</title><rect x="92.0884%" y="1157" width="0.0713%" height="15" fill="rgb(217,59,31)" fg:x="1292" fg:w="1"/><text x="92.3384%" y="1167.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold::{{closure}} (1 samples, 0.07%)</title><rect x="92.0884%" y="1141" width="0.0713%" height="15" fill="rgb(237,138,41)" fg:x="1292" fg:w="1"/><text x="92.3384%" y="1151.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal (1 samples, 0.07%)</title><rect x="92.0884%" y="1125" width="0.0713%" height="15" fill="rgb(227,91,49)" fg:x="1292" fg:w="1"/><text x="92.3384%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (1 samples, 0.07%)</title><rect x="92.0884%" y="1109" width="0.0713%" height="15" fill="rgb(247,21,44)" fg:x="1292" fg:w="1"/><text x="92.3384%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.07%)</title><rect x="92.0884%" y="1093" width="0.0713%" height="15" fill="rgb(219,210,51)" fg:x="1292" fg:w="1"/><text x="92.3384%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.07%)</title><rect x="92.0884%" y="1077" width="0.0713%" height="15" fill="rgb(209,140,6)" fg:x="1292" fg:w="1"/><text x="92.3384%" y="1087.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (1 samples, 0.07%)</title><rect x="92.0884%" y="1061" width="0.0713%" height="15" fill="rgb(221,188,24)" fg:x="1292" fg:w="1"/><text x="92.3384%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (1 samples, 0.07%)</title><rect x="92.0884%" y="1045" width="0.0713%" height="15" fill="rgb(232,154,20)" fg:x="1292" fg:w="1"/><text x="92.3384%" y="1055.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::{{closure}} (1 samples, 0.07%)</title><rect x="92.0884%" y="1029" width="0.0713%" height="15" fill="rgb(244,137,50)" fg:x="1292" fg:w="1"/><text x="92.3384%" y="1039.50"></text></g><g><title>crossbeam_epoch::default::with_handle (1 samples, 0.07%)</title><rect x="92.0884%" y="1013" width="0.0713%" height="15" fill="rgb(225,185,43)" fg:x="1292" fg:w="1"/><text x="92.3384%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.07%)</title><rect x="92.0884%" y="997" width="0.0713%" height="15" fill="rgb(213,205,38)" fg:x="1292" fg:w="1"/><text x="92.3384%" y="1007.50"></text></g><g><title>crossbeam_epoch::default::with_handle::{{closure}} (1 samples, 0.07%)</title><rect x="92.0884%" y="981" width="0.0713%" height="15" fill="rgb(236,73,12)" fg:x="1292" fg:w="1"/><text x="92.3384%" y="991.50"></text></g><g><title>crossbeam_epoch::default::pin::{{closure}} (1 samples, 0.07%)</title><rect x="92.0884%" y="965" width="0.0713%" height="15" fill="rgb(235,219,13)" fg:x="1292" fg:w="1"/><text x="92.3384%" y="975.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (1 samples, 0.07%)</title><rect x="92.0884%" y="949" width="0.0713%" height="15" fill="rgb(218,59,36)" fg:x="1292" fg:w="1"/><text x="92.3384%" y="959.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (1 samples, 0.07%)</title><rect x="92.0884%" y="933" width="0.0713%" height="15" fill="rgb(205,110,39)" fg:x="1292" fg:w="1"/><text x="92.3384%" y="943.50"></text></g><g><title>crossbeam_epoch::atomic::Atomic&lt;T&gt;::load (1 samples, 0.07%)</title><rect x="92.0884%" y="917" width="0.0713%" height="15" fill="rgb(218,206,42)" fg:x="1292" fg:w="1"/><text x="92.3384%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.07%)</title><rect x="92.0884%" y="901" width="0.0713%" height="15" fill="rgb(248,125,24)" fg:x="1292" fg:w="1"/><text x="92.3384%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.07%)</title><rect x="92.0884%" y="885" width="0.0713%" height="15" fill="rgb(242,28,27)" fg:x="1292" fg:w="1"/><text x="92.3384%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="92.1597%" y="917" width="0.0713%" height="15" fill="rgb(216,228,15)" fg:x="1293" fg:w="1"/><text x="92.4097%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="92.1597%" y="901" width="0.0713%" height="15" fill="rgb(235,116,46)" fg:x="1293" fg:w="1"/><text x="92.4097%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="92.1597%" y="885" width="0.0713%" height="15" fill="rgb(224,18,32)" fg:x="1293" fg:w="1"/><text x="92.4097%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="92.1597%" y="869" width="0.0713%" height="15" fill="rgb(252,5,12)" fg:x="1293" fg:w="1"/><text x="92.4097%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.07%)</title><rect x="92.1597%" y="853" width="0.0713%" height="15" fill="rgb(251,36,5)" fg:x="1293" fg:w="1"/><text x="92.4097%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="92.1597%" y="837" width="0.0713%" height="15" fill="rgb(217,53,14)" fg:x="1293" fg:w="1"/><text x="92.4097%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="92.1597%" y="821" width="0.0713%" height="15" fill="rgb(215,86,45)" fg:x="1293" fg:w="1"/><text x="92.4097%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.07%)</title><rect x="92.1597%" y="805" width="0.0713%" height="15" fill="rgb(242,169,11)" fg:x="1293" fg:w="1"/><text x="92.4097%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="92.1597%" y="789" width="0.0713%" height="15" fill="rgb(211,213,45)" fg:x="1293" fg:w="1"/><text x="92.4097%" y="799.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="92.1597%" y="773" width="0.0713%" height="15" fill="rgb(205,88,11)" fg:x="1293" fg:w="1"/><text x="92.4097%" y="783.50"></text></g><g><title>&lt;rand_distr::normal::Normal&lt;F&gt; as rand::distributions::distribution::Distribution&lt;F&gt;&gt;::sample (1 samples, 0.07%)</title><rect x="92.1597%" y="757" width="0.0713%" height="15" fill="rgb(252,69,26)" fg:x="1293" fg:w="1"/><text x="92.4097%" y="767.50"></text></g><g><title>rand::rng::Rng::sample (1 samples, 0.07%)</title><rect x="92.1597%" y="741" width="0.0713%" height="15" fill="rgb(246,123,37)" fg:x="1293" fg:w="1"/><text x="92.4097%" y="751.50"></text></g><g><title>rand_distr::utils::ziggurat (1 samples, 0.07%)</title><rect x="92.1597%" y="725" width="0.0713%" height="15" fill="rgb(212,205,5)" fg:x="1293" fg:w="1"/><text x="92.4097%" y="735.50"></text></g><g><title>&lt;&amp;mut R as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="92.1597%" y="709" width="0.0713%" height="15" fill="rgb(253,148,0)" fg:x="1293" fg:w="1"/><text x="92.4097%" y="719.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="92.1597%" y="693" width="0.0713%" height="15" fill="rgb(239,22,4)" fg:x="1293" fg:w="1"/><text x="92.4097%" y="703.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="92.1597%" y="677" width="0.0713%" height="15" fill="rgb(226,26,53)" fg:x="1293" fg:w="1"/><text x="92.4097%" y="687.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (1 samples, 0.07%)</title><rect x="92.1597%" y="661" width="0.0713%" height="15" fill="rgb(225,229,45)" fg:x="1293" fg:w="1"/><text x="92.4097%" y="671.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (1 samples, 0.07%)</title><rect x="92.1597%" y="645" width="0.0713%" height="15" fill="rgb(220,60,37)" fg:x="1293" fg:w="1"/><text x="92.4097%" y="655.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.07%)</title><rect x="92.1597%" y="629" width="0.0713%" height="15" fill="rgb(217,180,35)" fg:x="1293" fg:w="1"/><text x="92.4097%" y="639.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.07%)</title><rect x="92.1597%" y="613" width="0.0713%" height="15" fill="rgb(229,7,53)" fg:x="1293" fg:w="1"/><text x="92.4097%" y="623.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (1 samples, 0.07%)</title><rect x="92.1597%" y="597" width="0.0713%" height="15" fill="rgb(254,137,3)" fg:x="1293" fg:w="1"/><text x="92.4097%" y="607.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (1 samples, 0.07%)</title><rect x="92.1597%" y="581" width="0.0713%" height="15" fill="rgb(215,140,41)" fg:x="1293" fg:w="1"/><text x="92.4097%" y="591.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (1 samples, 0.07%)</title><rect x="92.1597%" y="565" width="0.0713%" height="15" fill="rgb(250,80,15)" fg:x="1293" fg:w="1"/><text x="92.4097%" y="575.50"></text></g><g><title>rand_chacha::guts::round (1 samples, 0.07%)</title><rect x="92.1597%" y="549" width="0.0713%" height="15" fill="rgb(252,191,6)" fg:x="1293" fg:w="1"/><text x="92.4097%" y="559.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (1 samples, 0.07%)</title><rect x="92.1597%" y="533" width="0.0713%" height="15" fill="rgb(246,217,18)" fg:x="1293" fg:w="1"/><text x="92.4097%" y="543.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (1 samples, 0.07%)</title><rect x="92.1597%" y="517" width="0.0713%" height="15" fill="rgb(223,93,7)" fg:x="1293" fg:w="1"/><text x="92.4097%" y="527.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (1 samples, 0.07%)</title><rect x="92.1597%" y="501" width="0.0713%" height="15" fill="rgb(225,55,52)" fg:x="1293" fg:w="1"/><text x="92.4097%" y="511.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (2 samples, 0.14%)</title><rect x="92.1597%" y="1173" width="0.1426%" height="15" fill="rgb(240,31,24)" fg:x="1293" fg:w="2"/><text x="92.4097%" y="1183.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (2 samples, 0.14%)</title><rect x="92.1597%" y="1157" width="0.1426%" height="15" fill="rgb(205,56,52)" fg:x="1293" fg:w="2"/><text x="92.4097%" y="1167.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 0.14%)</title><rect x="92.1597%" y="1141" width="0.1426%" height="15" fill="rgb(246,146,12)" fg:x="1293" fg:w="2"/><text x="92.4097%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2 samples, 0.14%)</title><rect x="92.1597%" y="1125" width="0.1426%" height="15" fill="rgb(239,84,36)" fg:x="1293" fg:w="2"/><text x="92.4097%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (2 samples, 0.14%)</title><rect x="92.1597%" y="1109" width="0.1426%" height="15" fill="rgb(207,41,40)" fg:x="1293" fg:w="2"/><text x="92.4097%" y="1119.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (2 samples, 0.14%)</title><rect x="92.1597%" y="1093" width="0.1426%" height="15" fill="rgb(241,179,25)" fg:x="1293" fg:w="2"/><text x="92.4097%" y="1103.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 0.14%)</title><rect x="92.1597%" y="1077" width="0.1426%" height="15" fill="rgb(210,0,34)" fg:x="1293" fg:w="2"/><text x="92.4097%" y="1087.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2 samples, 0.14%)</title><rect x="92.1597%" y="1061" width="0.1426%" height="15" fill="rgb(225,217,29)" fg:x="1293" fg:w="2"/><text x="92.4097%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (2 samples, 0.14%)</title><rect x="92.1597%" y="1045" width="0.1426%" height="15" fill="rgb(216,191,38)" fg:x="1293" fg:w="2"/><text x="92.4097%" y="1055.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (2 samples, 0.14%)</title><rect x="92.1597%" y="1029" width="0.1426%" height="15" fill="rgb(232,140,52)" fg:x="1293" fg:w="2"/><text x="92.4097%" y="1039.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (2 samples, 0.14%)</title><rect x="92.1597%" y="1013" width="0.1426%" height="15" fill="rgb(223,158,51)" fg:x="1293" fg:w="2"/><text x="92.4097%" y="1023.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (2 samples, 0.14%)</title><rect x="92.1597%" y="997" width="0.1426%" height="15" fill="rgb(235,29,51)" fg:x="1293" fg:w="2"/><text x="92.4097%" y="1007.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (2 samples, 0.14%)</title><rect x="92.1597%" y="981" width="0.1426%" height="15" fill="rgb(215,181,18)" fg:x="1293" fg:w="2"/><text x="92.4097%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.14%)</title><rect x="92.1597%" y="965" width="0.1426%" height="15" fill="rgb(227,125,34)" fg:x="1293" fg:w="2"/><text x="92.4097%" y="975.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.14%)</title><rect x="92.1597%" y="949" width="0.1426%" height="15" fill="rgb(230,197,49)" fg:x="1293" fg:w="2"/><text x="92.4097%" y="959.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (2 samples, 0.14%)</title><rect x="92.1597%" y="933" width="0.1426%" height="15" fill="rgb(239,141,16)" fg:x="1293" fg:w="2"/><text x="92.4097%" y="943.50"></text></g><g><title>ldpc::utils::count_differences (1 samples, 0.07%)</title><rect x="92.2309%" y="917" width="0.0713%" height="15" fill="rgb(225,105,43)" fg:x="1294" fg:w="1"/><text x="92.4809%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (1 samples, 0.07%)</title><rect x="92.2309%" y="901" width="0.0713%" height="15" fill="rgb(214,131,14)" fg:x="1294" fg:w="1"/><text x="92.4809%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.07%)</title><rect x="92.2309%" y="885" width="0.0713%" height="15" fill="rgb(229,177,11)" fg:x="1294" fg:w="1"/><text x="92.4809%" y="895.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.07%)</title><rect x="92.2309%" y="869" width="0.0713%" height="15" fill="rgb(231,180,14)" fg:x="1294" fg:w="1"/><text x="92.4809%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="92.2309%" y="853" width="0.0713%" height="15" fill="rgb(232,88,2)" fg:x="1294" fg:w="1"/><text x="92.4809%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="92.2309%" y="837" width="0.0713%" height="15" fill="rgb(205,220,8)" fg:x="1294" fg:w="1"/><text x="92.4809%" y="847.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="92.2309%" y="821" width="0.0713%" height="15" fill="rgb(225,23,53)" fg:x="1294" fg:w="1"/><text x="92.4809%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (1 samples, 0.07%)</title><rect x="92.2309%" y="805" width="0.0713%" height="15" fill="rgb(213,62,29)" fg:x="1294" fg:w="1"/><text x="92.4809%" y="815.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (5 samples, 0.36%)</title><rect x="92.3022%" y="1173" width="0.3564%" height="15" fill="rgb(227,75,7)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="1183.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (5 samples, 0.36%)</title><rect x="92.3022%" y="1157" width="0.3564%" height="15" fill="rgb(207,105,14)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="1167.50"></text></g><g><title>rayon_core::job::JobRef::execute (5 samples, 0.36%)</title><rect x="92.3022%" y="1141" width="0.3564%" height="15" fill="rgb(245,62,29)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="1151.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (5 samples, 0.36%)</title><rect x="92.3022%" y="1125" width="0.3564%" height="15" fill="rgb(236,202,4)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="1135.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.36%)</title><rect x="92.3022%" y="1109" width="0.3564%" height="15" fill="rgb(250,67,1)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="1119.50"></text></g><g><title>std::panicking::try (5 samples, 0.36%)</title><rect x="92.3022%" y="1093" width="0.3564%" height="15" fill="rgb(253,115,44)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="1103.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.36%)</title><rect x="92.3022%" y="1077" width="0.3564%" height="15" fill="rgb(251,139,18)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="1087.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.36%)</title><rect x="92.3022%" y="1061" width="0.3564%" height="15" fill="rgb(218,22,32)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="1071.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (5 samples, 0.36%)</title><rect x="92.3022%" y="1045" width="0.3564%" height="15" fill="rgb(243,53,5)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (5 samples, 0.36%)</title><rect x="92.3022%" y="1029" width="0.3564%" height="15" fill="rgb(227,56,16)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="1039.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.36%)</title><rect x="92.3022%" y="1013" width="0.3564%" height="15" fill="rgb(245,53,0)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="1023.50"></text></g><g><title>rayon_core::join::join_context (5 samples, 0.36%)</title><rect x="92.3022%" y="997" width="0.3564%" height="15" fill="rgb(216,170,35)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="1007.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5 samples, 0.36%)</title><rect x="92.3022%" y="981" width="0.3564%" height="15" fill="rgb(211,200,8)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="991.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (5 samples, 0.36%)</title><rect x="92.3022%" y="965" width="0.3564%" height="15" fill="rgb(228,204,44)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="975.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.36%)</title><rect x="92.3022%" y="949" width="0.3564%" height="15" fill="rgb(214,121,17)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="959.50"></text></g><g><title>std::panicking::try (5 samples, 0.36%)</title><rect x="92.3022%" y="933" width="0.3564%" height="15" fill="rgb(233,64,38)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="943.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.36%)</title><rect x="92.3022%" y="917" width="0.3564%" height="15" fill="rgb(253,54,19)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="927.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.36%)</title><rect x="92.3022%" y="901" width="0.3564%" height="15" fill="rgb(253,94,18)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="911.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (5 samples, 0.36%)</title><rect x="92.3022%" y="885" width="0.3564%" height="15" fill="rgb(227,57,52)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="895.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.36%)</title><rect x="92.3022%" y="869" width="0.3564%" height="15" fill="rgb(230,228,50)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="879.50"></text></g><g><title>rayon_core::join::join_context (5 samples, 0.36%)</title><rect x="92.3022%" y="853" width="0.3564%" height="15" fill="rgb(217,205,27)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="863.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5 samples, 0.36%)</title><rect x="92.3022%" y="837" width="0.3564%" height="15" fill="rgb(252,71,50)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="847.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (5 samples, 0.36%)</title><rect x="92.3022%" y="821" width="0.3564%" height="15" fill="rgb(209,86,4)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="831.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (5 samples, 0.36%)</title><rect x="92.3022%" y="805" width="0.3564%" height="15" fill="rgb(229,94,0)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="815.50"></text></g><g><title>rayon_core::job::JobRef::execute (5 samples, 0.36%)</title><rect x="92.3022%" y="789" width="0.3564%" height="15" fill="rgb(252,223,21)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="799.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (5 samples, 0.36%)</title><rect x="92.3022%" y="773" width="0.3564%" height="15" fill="rgb(230,210,4)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="783.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.36%)</title><rect x="92.3022%" y="757" width="0.3564%" height="15" fill="rgb(240,149,38)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="767.50"></text></g><g><title>std::panicking::try (5 samples, 0.36%)</title><rect x="92.3022%" y="741" width="0.3564%" height="15" fill="rgb(254,105,20)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="751.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.36%)</title><rect x="92.3022%" y="725" width="0.3564%" height="15" fill="rgb(253,87,46)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="735.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.36%)</title><rect x="92.3022%" y="709" width="0.3564%" height="15" fill="rgb(253,116,33)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="719.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (5 samples, 0.36%)</title><rect x="92.3022%" y="693" width="0.3564%" height="15" fill="rgb(229,198,5)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="703.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (5 samples, 0.36%)</title><rect x="92.3022%" y="677" width="0.3564%" height="15" fill="rgb(242,38,37)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="687.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.36%)</title><rect x="92.3022%" y="661" width="0.3564%" height="15" fill="rgb(242,69,53)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="671.50"></text></g><g><title>rayon_core::join::join_context (5 samples, 0.36%)</title><rect x="92.3022%" y="645" width="0.3564%" height="15" fill="rgb(249,80,16)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="655.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5 samples, 0.36%)</title><rect x="92.3022%" y="629" width="0.3564%" height="15" fill="rgb(206,128,11)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="639.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (5 samples, 0.36%)</title><rect x="92.3022%" y="613" width="0.3564%" height="15" fill="rgb(212,35,20)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="623.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.36%)</title><rect x="92.3022%" y="597" width="0.3564%" height="15" fill="rgb(236,79,13)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="607.50"></text></g><g><title>std::panicking::try (5 samples, 0.36%)</title><rect x="92.3022%" y="581" width="0.3564%" height="15" fill="rgb(233,123,3)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="591.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.36%)</title><rect x="92.3022%" y="565" width="0.3564%" height="15" fill="rgb(214,93,52)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="575.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.36%)</title><rect x="92.3022%" y="549" width="0.3564%" height="15" fill="rgb(251,37,40)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="559.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (5 samples, 0.36%)</title><rect x="92.3022%" y="533" width="0.3564%" height="15" fill="rgb(227,80,54)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="543.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.36%)</title><rect x="92.3022%" y="517" width="0.3564%" height="15" fill="rgb(254,48,11)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="527.50"></text></g><g><title>rayon_core::join::join_context (5 samples, 0.36%)</title><rect x="92.3022%" y="501" width="0.3564%" height="15" fill="rgb(235,193,26)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="511.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5 samples, 0.36%)</title><rect x="92.3022%" y="485" width="0.3564%" height="15" fill="rgb(229,99,21)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="495.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (5 samples, 0.36%)</title><rect x="92.3022%" y="469" width="0.3564%" height="15" fill="rgb(211,140,41)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="479.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.36%)</title><rect x="92.3022%" y="453" width="0.3564%" height="15" fill="rgb(240,227,30)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="463.50"></text></g><g><title>std::panicking::try (5 samples, 0.36%)</title><rect x="92.3022%" y="437" width="0.3564%" height="15" fill="rgb(215,224,45)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="447.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.36%)</title><rect x="92.3022%" y="421" width="0.3564%" height="15" fill="rgb(206,123,31)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="431.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.36%)</title><rect x="92.3022%" y="405" width="0.3564%" height="15" fill="rgb(210,138,16)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="415.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (5 samples, 0.36%)</title><rect x="92.3022%" y="389" width="0.3564%" height="15" fill="rgb(228,57,28)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="399.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.36%)</title><rect x="92.3022%" y="373" width="0.3564%" height="15" fill="rgb(242,170,10)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="383.50"></text></g><g><title>rayon_core::join::join_context (5 samples, 0.36%)</title><rect x="92.3022%" y="357" width="0.3564%" height="15" fill="rgb(228,214,39)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="367.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5 samples, 0.36%)</title><rect x="92.3022%" y="341" width="0.3564%" height="15" fill="rgb(218,179,33)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="351.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (5 samples, 0.36%)</title><rect x="92.3022%" y="325" width="0.3564%" height="15" fill="rgb(235,193,39)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="335.50"></text></g><g><title>rayon_core::sleep::Sleep::no_work_found (5 samples, 0.36%)</title><rect x="92.3022%" y="309" width="0.3564%" height="15" fill="rgb(219,221,36)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="319.50"></text></g><g><title>std::sync::condvar::Condvar::wait (5 samples, 0.36%)</title><rect x="92.3022%" y="293" width="0.3564%" height="15" fill="rgb(248,218,19)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="303.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (5 samples, 0.36%)</title><rect x="92.3022%" y="277" width="0.3564%" height="15" fill="rgb(205,50,9)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="287.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (5 samples, 0.36%)</title><rect x="92.3022%" y="261" width="0.3564%" height="15" fill="rgb(238,81,28)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="271.50"></text></g><g><title>__pthread_cond_wait (5 samples, 0.36%)</title><rect x="92.3022%" y="245" width="0.3564%" height="15" fill="rgb(235,110,19)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="255.50"></text></g><g><title>__futex_abstimed_wait_common64 (5 samples, 0.36%)</title><rect x="92.3022%" y="229" width="0.3564%" height="15" fill="rgb(214,7,14)" fg:x="1295" fg:w="5"/><text x="92.5522%" y="239.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (8 samples, 0.57%)</title><rect x="92.1597%" y="1237" width="0.5702%" height="15" fill="rgb(211,77,3)" fg:x="1293" fg:w="8"/><text x="92.4097%" y="1247.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (8 samples, 0.57%)</title><rect x="92.1597%" y="1221" width="0.5702%" height="15" fill="rgb(229,5,9)" fg:x="1293" fg:w="8"/><text x="92.4097%" y="1231.50"></text></g><g><title>rayon_core::join::join_context (8 samples, 0.57%)</title><rect x="92.1597%" y="1205" width="0.5702%" height="15" fill="rgb(225,90,11)" fg:x="1293" fg:w="8"/><text x="92.4097%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (8 samples, 0.57%)</title><rect x="92.1597%" y="1189" width="0.5702%" height="15" fill="rgb(242,56,8)" fg:x="1293" fg:w="8"/><text x="92.4097%" y="1199.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="92.6586%" y="1173" width="0.0713%" height="15" fill="rgb(249,212,39)" fg:x="1300" fg:w="1"/><text x="92.9086%" y="1183.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="92.6586%" y="1157" width="0.0713%" height="15" fill="rgb(236,90,9)" fg:x="1300" fg:w="1"/><text x="92.9086%" y="1167.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="92.6586%" y="1141" width="0.0713%" height="15" fill="rgb(206,88,35)" fg:x="1300" fg:w="1"/><text x="92.9086%" y="1151.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="92.6586%" y="1125" width="0.0713%" height="15" fill="rgb(205,126,30)" fg:x="1300" fg:w="1"/><text x="92.9086%" y="1135.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="92.6586%" y="1109" width="0.0713%" height="15" fill="rgb(230,176,12)" fg:x="1300" fg:w="1"/><text x="92.9086%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="92.6586%" y="1093" width="0.0713%" height="15" fill="rgb(243,19,9)" fg:x="1300" fg:w="1"/><text x="92.9086%" y="1103.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="92.6586%" y="1077" width="0.0713%" height="15" fill="rgb(245,171,17)" fg:x="1300" fg:w="1"/><text x="92.9086%" y="1087.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="92.6586%" y="1061" width="0.0713%" height="15" fill="rgb(227,52,21)" fg:x="1300" fg:w="1"/><text x="92.9086%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="92.6586%" y="1045" width="0.0713%" height="15" fill="rgb(238,69,14)" fg:x="1300" fg:w="1"/><text x="92.9086%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="92.6586%" y="1029" width="0.0713%" height="15" fill="rgb(241,156,39)" fg:x="1300" fg:w="1"/><text x="92.9086%" y="1039.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="92.6586%" y="1013" width="0.0713%" height="15" fill="rgb(212,227,28)" fg:x="1300" fg:w="1"/><text x="92.9086%" y="1023.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="92.6586%" y="997" width="0.0713%" height="15" fill="rgb(209,118,27)" fg:x="1300" fg:w="1"/><text x="92.9086%" y="1007.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="92.6586%" y="981" width="0.0713%" height="15" fill="rgb(226,102,5)" fg:x="1300" fg:w="1"/><text x="92.9086%" y="991.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="92.6586%" y="965" width="0.0713%" height="15" fill="rgb(223,34,3)" fg:x="1300" fg:w="1"/><text x="92.9086%" y="975.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="92.6586%" y="949" width="0.0713%" height="15" fill="rgb(221,81,38)" fg:x="1300" fg:w="1"/><text x="92.9086%" y="959.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="92.6586%" y="933" width="0.0713%" height="15" fill="rgb(236,219,28)" fg:x="1300" fg:w="1"/><text x="92.9086%" y="943.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="92.6586%" y="917" width="0.0713%" height="15" fill="rgb(213,200,14)" fg:x="1300" fg:w="1"/><text x="92.9086%" y="927.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="92.6586%" y="901" width="0.0713%" height="15" fill="rgb(240,33,19)" fg:x="1300" fg:w="1"/><text x="92.9086%" y="911.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="92.6586%" y="885" width="0.0713%" height="15" fill="rgb(233,113,27)" fg:x="1300" fg:w="1"/><text x="92.9086%" y="895.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="92.6586%" y="869" width="0.0713%" height="15" fill="rgb(220,221,18)" fg:x="1300" fg:w="1"/><text x="92.9086%" y="879.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.07%)</title><rect x="92.6586%" y="853" width="0.0713%" height="15" fill="rgb(238,92,8)" fg:x="1300" fg:w="1"/><text x="92.9086%" y="863.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="92.6586%" y="837" width="0.0713%" height="15" fill="rgb(222,164,16)" fg:x="1300" fg:w="1"/><text x="92.9086%" y="847.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="92.6586%" y="821" width="0.0713%" height="15" fill="rgb(241,119,3)" fg:x="1300" fg:w="1"/><text x="92.9086%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="92.6586%" y="805" width="0.0713%" height="15" fill="rgb(241,44,8)" fg:x="1300" fg:w="1"/><text x="92.9086%" y="815.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="92.6586%" y="789" width="0.0713%" height="15" fill="rgb(230,36,40)" fg:x="1300" fg:w="1"/><text x="92.9086%" y="799.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="92.6586%" y="773" width="0.0713%" height="15" fill="rgb(243,16,36)" fg:x="1300" fg:w="1"/><text x="92.9086%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="92.6586%" y="757" width="0.0713%" height="15" fill="rgb(231,4,26)" fg:x="1300" fg:w="1"/><text x="92.9086%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="92.6586%" y="741" width="0.0713%" height="15" fill="rgb(240,9,31)" fg:x="1300" fg:w="1"/><text x="92.9086%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="92.6586%" y="725" width="0.0713%" height="15" fill="rgb(207,173,15)" fg:x="1300" fg:w="1"/><text x="92.9086%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="92.6586%" y="709" width="0.0713%" height="15" fill="rgb(224,192,53)" fg:x="1300" fg:w="1"/><text x="92.9086%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.07%)</title><rect x="92.6586%" y="693" width="0.0713%" height="15" fill="rgb(223,67,28)" fg:x="1300" fg:w="1"/><text x="92.9086%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="92.6586%" y="677" width="0.0713%" height="15" fill="rgb(211,20,47)" fg:x="1300" fg:w="1"/><text x="92.9086%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="92.6586%" y="661" width="0.0713%" height="15" fill="rgb(240,228,2)" fg:x="1300" fg:w="1"/><text x="92.9086%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.07%)</title><rect x="92.6586%" y="645" width="0.0713%" height="15" fill="rgb(248,151,12)" fg:x="1300" fg:w="1"/><text x="92.9086%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="92.6586%" y="629" width="0.0713%" height="15" fill="rgb(244,8,39)" fg:x="1300" fg:w="1"/><text x="92.9086%" y="639.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="92.6586%" y="613" width="0.0713%" height="15" fill="rgb(222,26,8)" fg:x="1300" fg:w="1"/><text x="92.9086%" y="623.50"></text></g><g><title>&lt;rand_distr::normal::Normal&lt;F&gt; as rand::distributions::distribution::Distribution&lt;F&gt;&gt;::sample (1 samples, 0.07%)</title><rect x="92.6586%" y="597" width="0.0713%" height="15" fill="rgb(213,106,44)" fg:x="1300" fg:w="1"/><text x="92.9086%" y="607.50"></text></g><g><title>rand::rng::Rng::sample (1 samples, 0.07%)</title><rect x="92.6586%" y="581" width="0.0713%" height="15" fill="rgb(214,129,20)" fg:x="1300" fg:w="1"/><text x="92.9086%" y="591.50"></text></g><g><title>rand_distr::utils::ziggurat (1 samples, 0.07%)</title><rect x="92.6586%" y="565" width="0.0713%" height="15" fill="rgb(212,32,13)" fg:x="1300" fg:w="1"/><text x="92.9086%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (1 samples, 0.07%)</title><rect x="92.7299%" y="1221" width="0.0713%" height="15" fill="rgb(208,168,33)" fg:x="1301" fg:w="1"/><text x="92.9799%" y="1231.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold::{{closure}} (1 samples, 0.07%)</title><rect x="92.7299%" y="1205" width="0.0713%" height="15" fill="rgb(231,207,8)" fg:x="1301" fg:w="1"/><text x="92.9799%" y="1215.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal (1 samples, 0.07%)</title><rect x="92.7299%" y="1189" width="0.0713%" height="15" fill="rgb(235,219,23)" fg:x="1301" fg:w="1"/><text x="92.9799%" y="1199.50"></text></g><g><title>rayon_core::registry::XorShift64Star::next_usize (1 samples, 0.07%)</title><rect x="92.7299%" y="1173" width="0.0713%" height="15" fill="rgb(226,216,26)" fg:x="1301" fg:w="1"/><text x="92.9799%" y="1183.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (6 samples, 0.43%)</title><rect x="92.7299%" y="1237" width="0.4277%" height="15" fill="rgb(239,137,16)" fg:x="1301" fg:w="6"/><text x="92.9799%" y="1247.50"></text></g><g><title>rayon_core::sleep::Sleep::no_work_found (5 samples, 0.36%)</title><rect x="92.8011%" y="1221" width="0.3564%" height="15" fill="rgb(207,12,36)" fg:x="1302" fg:w="5"/><text x="93.0511%" y="1231.50"></text></g><g><title>std::sync::condvar::Condvar::wait (5 samples, 0.36%)</title><rect x="92.8011%" y="1205" width="0.3564%" height="15" fill="rgb(210,214,24)" fg:x="1302" fg:w="5"/><text x="93.0511%" y="1215.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (5 samples, 0.36%)</title><rect x="92.8011%" y="1189" width="0.3564%" height="15" fill="rgb(206,56,30)" fg:x="1302" fg:w="5"/><text x="93.0511%" y="1199.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (5 samples, 0.36%)</title><rect x="92.8011%" y="1173" width="0.3564%" height="15" fill="rgb(228,143,26)" fg:x="1302" fg:w="5"/><text x="93.0511%" y="1183.50"></text></g><g><title>__pthread_cond_wait (5 samples, 0.36%)</title><rect x="92.8011%" y="1157" width="0.3564%" height="15" fill="rgb(216,218,46)" fg:x="1302" fg:w="5"/><text x="93.0511%" y="1167.50"></text></g><g><title>__futex_abstimed_wait_common64 (4 samples, 0.29%)</title><rect x="92.8724%" y="1141" width="0.2851%" height="15" fill="rgb(206,6,19)" fg:x="1303" fg:w="4"/><text x="93.1224%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="93.1575%" y="1029" width="0.0713%" height="15" fill="rgb(239,177,51)" fg:x="1307" fg:w="1"/><text x="93.4075%" y="1039.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="93.1575%" y="1013" width="0.0713%" height="15" fill="rgb(216,55,25)" fg:x="1307" fg:w="1"/><text x="93.4075%" y="1023.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="93.1575%" y="997" width="0.0713%" height="15" fill="rgb(231,163,29)" fg:x="1307" fg:w="1"/><text x="93.4075%" y="1007.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="93.1575%" y="981" width="0.0713%" height="15" fill="rgb(232,149,50)" fg:x="1307" fg:w="1"/><text x="93.4075%" y="991.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="93.1575%" y="965" width="0.0713%" height="15" fill="rgb(223,142,48)" fg:x="1307" fg:w="1"/><text x="93.4075%" y="975.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="93.1575%" y="949" width="0.0713%" height="15" fill="rgb(245,83,23)" fg:x="1307" fg:w="1"/><text x="93.4075%" y="959.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="93.1575%" y="933" width="0.0713%" height="15" fill="rgb(224,63,2)" fg:x="1307" fg:w="1"/><text x="93.4075%" y="943.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="93.1575%" y="917" width="0.0713%" height="15" fill="rgb(218,65,53)" fg:x="1307" fg:w="1"/><text x="93.4075%" y="927.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="93.1575%" y="901" width="0.0713%" height="15" fill="rgb(221,84,29)" fg:x="1307" fg:w="1"/><text x="93.4075%" y="911.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="93.1575%" y="885" width="0.0713%" height="15" fill="rgb(234,0,32)" fg:x="1307" fg:w="1"/><text x="93.4075%" y="895.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="93.1575%" y="869" width="0.0713%" height="15" fill="rgb(206,20,16)" fg:x="1307" fg:w="1"/><text x="93.4075%" y="879.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="93.1575%" y="853" width="0.0713%" height="15" fill="rgb(244,172,18)" fg:x="1307" fg:w="1"/><text x="93.4075%" y="863.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="93.1575%" y="837" width="0.0713%" height="15" fill="rgb(254,133,1)" fg:x="1307" fg:w="1"/><text x="93.4075%" y="847.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="93.1575%" y="821" width="0.0713%" height="15" fill="rgb(222,206,41)" fg:x="1307" fg:w="1"/><text x="93.4075%" y="831.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="93.1575%" y="805" width="0.0713%" height="15" fill="rgb(212,3,42)" fg:x="1307" fg:w="1"/><text x="93.4075%" y="815.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="93.1575%" y="789" width="0.0713%" height="15" fill="rgb(241,11,4)" fg:x="1307" fg:w="1"/><text x="93.4075%" y="799.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="93.1575%" y="773" width="0.0713%" height="15" fill="rgb(205,19,26)" fg:x="1307" fg:w="1"/><text x="93.4075%" y="783.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="93.1575%" y="757" width="0.0713%" height="15" fill="rgb(210,179,32)" fg:x="1307" fg:w="1"/><text x="93.4075%" y="767.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="93.1575%" y="741" width="0.0713%" height="15" fill="rgb(227,116,49)" fg:x="1307" fg:w="1"/><text x="93.4075%" y="751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="93.1575%" y="725" width="0.0713%" height="15" fill="rgb(211,146,6)" fg:x="1307" fg:w="1"/><text x="93.4075%" y="735.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.07%)</title><rect x="93.1575%" y="709" width="0.0713%" height="15" fill="rgb(219,44,39)" fg:x="1307" fg:w="1"/><text x="93.4075%" y="719.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="93.1575%" y="693" width="0.0713%" height="15" fill="rgb(234,128,11)" fg:x="1307" fg:w="1"/><text x="93.4075%" y="703.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="93.1575%" y="677" width="0.0713%" height="15" fill="rgb(220,183,53)" fg:x="1307" fg:w="1"/><text x="93.4075%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="93.1575%" y="661" width="0.0713%" height="15" fill="rgb(213,219,32)" fg:x="1307" fg:w="1"/><text x="93.4075%" y="671.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="93.1575%" y="645" width="0.0713%" height="15" fill="rgb(232,156,16)" fg:x="1307" fg:w="1"/><text x="93.4075%" y="655.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="93.1575%" y="629" width="0.0713%" height="15" fill="rgb(246,135,34)" fg:x="1307" fg:w="1"/><text x="93.4075%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="93.1575%" y="613" width="0.0713%" height="15" fill="rgb(241,99,0)" fg:x="1307" fg:w="1"/><text x="93.4075%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="93.1575%" y="597" width="0.0713%" height="15" fill="rgb(222,103,45)" fg:x="1307" fg:w="1"/><text x="93.4075%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="93.1575%" y="581" width="0.0713%" height="15" fill="rgb(212,57,4)" fg:x="1307" fg:w="1"/><text x="93.4075%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="93.1575%" y="565" width="0.0713%" height="15" fill="rgb(215,68,47)" fg:x="1307" fg:w="1"/><text x="93.4075%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.07%)</title><rect x="93.1575%" y="549" width="0.0713%" height="15" fill="rgb(230,84,2)" fg:x="1307" fg:w="1"/><text x="93.4075%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="93.1575%" y="533" width="0.0713%" height="15" fill="rgb(220,102,14)" fg:x="1307" fg:w="1"/><text x="93.4075%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="93.1575%" y="517" width="0.0713%" height="15" fill="rgb(240,10,32)" fg:x="1307" fg:w="1"/><text x="93.4075%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.07%)</title><rect x="93.1575%" y="501" width="0.0713%" height="15" fill="rgb(215,47,27)" fg:x="1307" fg:w="1"/><text x="93.4075%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="93.1575%" y="485" width="0.0713%" height="15" fill="rgb(233,188,43)" fg:x="1307" fg:w="1"/><text x="93.4075%" y="495.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="93.1575%" y="469" width="0.0713%" height="15" fill="rgb(253,190,1)" fg:x="1307" fg:w="1"/><text x="93.4075%" y="479.50"></text></g><g><title>&lt;rand_distr::normal::Normal&lt;F&gt; as rand::distributions::distribution::Distribution&lt;F&gt;&gt;::sample (1 samples, 0.07%)</title><rect x="93.1575%" y="453" width="0.0713%" height="15" fill="rgb(206,114,52)" fg:x="1307" fg:w="1"/><text x="93.4075%" y="463.50"></text></g><g><title>rand_distr::normal::Normal&lt;F&gt;::from_zscore (1 samples, 0.07%)</title><rect x="93.1575%" y="437" width="0.0713%" height="15" fill="rgb(233,120,37)" fg:x="1307" fg:w="1"/><text x="93.4075%" y="447.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (1 samples, 0.07%)</title><rect x="93.1575%" y="421" width="0.0713%" height="15" fill="rgb(214,52,39)" fg:x="1307" fg:w="1"/><text x="93.4075%" y="431.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (2 samples, 0.14%)</title><rect x="93.1575%" y="1093" width="0.1426%" height="15" fill="rgb(223,80,29)" fg:x="1307" fg:w="2"/><text x="93.4075%" y="1103.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (2 samples, 0.14%)</title><rect x="93.1575%" y="1077" width="0.1426%" height="15" fill="rgb(230,101,40)" fg:x="1307" fg:w="2"/><text x="93.4075%" y="1087.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 0.14%)</title><rect x="93.1575%" y="1061" width="0.1426%" height="15" fill="rgb(219,211,8)" fg:x="1307" fg:w="2"/><text x="93.4075%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2 samples, 0.14%)</title><rect x="93.1575%" y="1045" width="0.1426%" height="15" fill="rgb(252,126,28)" fg:x="1307" fg:w="2"/><text x="93.4075%" y="1055.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="93.2288%" y="1029" width="0.0713%" height="15" fill="rgb(215,56,38)" fg:x="1308" fg:w="1"/><text x="93.4788%" y="1039.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="93.2288%" y="1013" width="0.0713%" height="15" fill="rgb(249,55,44)" fg:x="1308" fg:w="1"/><text x="93.4788%" y="1023.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="93.2288%" y="997" width="0.0713%" height="15" fill="rgb(220,221,32)" fg:x="1308" fg:w="1"/><text x="93.4788%" y="1007.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="93.2288%" y="981" width="0.0713%" height="15" fill="rgb(212,216,41)" fg:x="1308" fg:w="1"/><text x="93.4788%" y="991.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="93.2288%" y="965" width="0.0713%" height="15" fill="rgb(228,213,43)" fg:x="1308" fg:w="1"/><text x="93.4788%" y="975.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="93.2288%" y="949" width="0.0713%" height="15" fill="rgb(211,31,26)" fg:x="1308" fg:w="1"/><text x="93.4788%" y="959.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="93.2288%" y="933" width="0.0713%" height="15" fill="rgb(229,202,19)" fg:x="1308" fg:w="1"/><text x="93.4788%" y="943.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="93.2288%" y="917" width="0.0713%" height="15" fill="rgb(229,105,46)" fg:x="1308" fg:w="1"/><text x="93.4788%" y="927.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="93.2288%" y="901" width="0.0713%" height="15" fill="rgb(235,108,1)" fg:x="1308" fg:w="1"/><text x="93.4788%" y="911.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="93.2288%" y="885" width="0.0713%" height="15" fill="rgb(245,111,35)" fg:x="1308" fg:w="1"/><text x="93.4788%" y="895.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="93.2288%" y="869" width="0.0713%" height="15" fill="rgb(219,185,31)" fg:x="1308" fg:w="1"/><text x="93.4788%" y="879.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="93.2288%" y="853" width="0.0713%" height="15" fill="rgb(214,4,43)" fg:x="1308" fg:w="1"/><text x="93.4788%" y="863.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="93.2288%" y="837" width="0.0713%" height="15" fill="rgb(235,227,40)" fg:x="1308" fg:w="1"/><text x="93.4788%" y="847.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="93.2288%" y="821" width="0.0713%" height="15" fill="rgb(230,88,30)" fg:x="1308" fg:w="1"/><text x="93.4788%" y="831.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="93.2288%" y="805" width="0.0713%" height="15" fill="rgb(216,217,1)" fg:x="1308" fg:w="1"/><text x="93.4788%" y="815.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="93.2288%" y="789" width="0.0713%" height="15" fill="rgb(248,139,50)" fg:x="1308" fg:w="1"/><text x="93.4788%" y="799.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="93.2288%" y="773" width="0.0713%" height="15" fill="rgb(233,1,21)" fg:x="1308" fg:w="1"/><text x="93.4788%" y="783.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="93.2288%" y="757" width="0.0713%" height="15" fill="rgb(215,183,12)" fg:x="1308" fg:w="1"/><text x="93.4788%" y="767.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="93.2288%" y="741" width="0.0713%" height="15" fill="rgb(229,104,42)" fg:x="1308" fg:w="1"/><text x="93.4788%" y="751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="93.2288%" y="725" width="0.0713%" height="15" fill="rgb(243,34,48)" fg:x="1308" fg:w="1"/><text x="93.4788%" y="735.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.07%)</title><rect x="93.2288%" y="709" width="0.0713%" height="15" fill="rgb(239,11,44)" fg:x="1308" fg:w="1"/><text x="93.4788%" y="719.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="93.2288%" y="693" width="0.0713%" height="15" fill="rgb(231,98,35)" fg:x="1308" fg:w="1"/><text x="93.4788%" y="703.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="93.2288%" y="677" width="0.0713%" height="15" fill="rgb(233,28,25)" fg:x="1308" fg:w="1"/><text x="93.4788%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="93.2288%" y="661" width="0.0713%" height="15" fill="rgb(234,123,11)" fg:x="1308" fg:w="1"/><text x="93.4788%" y="671.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="93.2288%" y="645" width="0.0713%" height="15" fill="rgb(220,69,3)" fg:x="1308" fg:w="1"/><text x="93.4788%" y="655.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="93.2288%" y="629" width="0.0713%" height="15" fill="rgb(214,64,36)" fg:x="1308" fg:w="1"/><text x="93.4788%" y="639.50"></text></g><g><title>ldpc::utils::count_differences (1 samples, 0.07%)</title><rect x="93.2288%" y="613" width="0.0713%" height="15" fill="rgb(211,138,32)" fg:x="1308" fg:w="1"/><text x="93.4788%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (1 samples, 0.07%)</title><rect x="93.2288%" y="597" width="0.0713%" height="15" fill="rgb(213,118,47)" fg:x="1308" fg:w="1"/><text x="93.4788%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.07%)</title><rect x="93.2288%" y="581" width="0.0713%" height="15" fill="rgb(243,124,49)" fg:x="1308" fg:w="1"/><text x="93.4788%" y="591.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.07%)</title><rect x="93.2288%" y="565" width="0.0713%" height="15" fill="rgb(221,30,28)" fg:x="1308" fg:w="1"/><text x="93.4788%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="93.2288%" y="549" width="0.0713%" height="15" fill="rgb(246,37,13)" fg:x="1308" fg:w="1"/><text x="93.4788%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="93.2288%" y="533" width="0.0713%" height="15" fill="rgb(249,66,14)" fg:x="1308" fg:w="1"/><text x="93.4788%" y="543.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="93.2288%" y="517" width="0.0713%" height="15" fill="rgb(213,166,5)" fg:x="1308" fg:w="1"/><text x="93.4788%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (1 samples, 0.07%)</title><rect x="93.2288%" y="501" width="0.0713%" height="15" fill="rgb(221,66,24)" fg:x="1308" fg:w="1"/><text x="93.4788%" y="511.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (1 samples, 0.07%)</title><rect x="93.3001%" y="1077" width="0.0713%" height="15" fill="rgb(210,132,17)" fg:x="1309" fg:w="1"/><text x="93.5501%" y="1087.50"></text></g><g><title>rayon_core::job::JobRef::execute (1 samples, 0.07%)</title><rect x="93.3001%" y="1061" width="0.0713%" height="15" fill="rgb(243,202,5)" fg:x="1309" fg:w="1"/><text x="93.5501%" y="1071.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="93.3001%" y="1045" width="0.0713%" height="15" fill="rgb(233,70,48)" fg:x="1309" fg:w="1"/><text x="93.5501%" y="1055.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="93.3001%" y="1029" width="0.0713%" height="15" fill="rgb(238,41,26)" fg:x="1309" fg:w="1"/><text x="93.5501%" y="1039.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="93.3001%" y="1013" width="0.0713%" height="15" fill="rgb(241,19,31)" fg:x="1309" fg:w="1"/><text x="93.5501%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="93.3001%" y="997" width="0.0713%" height="15" fill="rgb(214,76,10)" fg:x="1309" fg:w="1"/><text x="93.5501%" y="1007.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="93.3001%" y="981" width="0.0713%" height="15" fill="rgb(254,202,22)" fg:x="1309" fg:w="1"/><text x="93.5501%" y="991.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (1 samples, 0.07%)</title><rect x="93.3001%" y="965" width="0.0713%" height="15" fill="rgb(214,72,24)" fg:x="1309" fg:w="1"/><text x="93.5501%" y="975.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="93.3001%" y="949" width="0.0713%" height="15" fill="rgb(221,92,46)" fg:x="1309" fg:w="1"/><text x="93.5501%" y="959.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="93.3001%" y="933" width="0.0713%" height="15" fill="rgb(246,13,50)" fg:x="1309" fg:w="1"/><text x="93.5501%" y="943.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="93.3001%" y="917" width="0.0713%" height="15" fill="rgb(240,165,38)" fg:x="1309" fg:w="1"/><text x="93.5501%" y="927.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="93.3001%" y="901" width="0.0713%" height="15" fill="rgb(241,24,51)" fg:x="1309" fg:w="1"/><text x="93.5501%" y="911.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.07%)</title><rect x="93.3001%" y="885" width="0.0713%" height="15" fill="rgb(227,51,44)" fg:x="1309" fg:w="1"/><text x="93.5501%" y="895.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (1 samples, 0.07%)</title><rect x="93.3001%" y="869" width="0.0713%" height="15" fill="rgb(231,121,3)" fg:x="1309" fg:w="1"/><text x="93.5501%" y="879.50"></text></g><g><title>rayon_core::job::JobRef::execute (1 samples, 0.07%)</title><rect x="93.3001%" y="853" width="0.0713%" height="15" fill="rgb(245,3,41)" fg:x="1309" fg:w="1"/><text x="93.5501%" y="863.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="93.3001%" y="837" width="0.0713%" height="15" fill="rgb(214,13,26)" fg:x="1309" fg:w="1"/><text x="93.5501%" y="847.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="93.3001%" y="821" width="0.0713%" height="15" fill="rgb(252,75,11)" fg:x="1309" fg:w="1"/><text x="93.5501%" y="831.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="93.3001%" y="805" width="0.0713%" height="15" fill="rgb(218,226,17)" fg:x="1309" fg:w="1"/><text x="93.5501%" y="815.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="93.3001%" y="789" width="0.0713%" height="15" fill="rgb(248,89,38)" fg:x="1309" fg:w="1"/><text x="93.5501%" y="799.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="93.3001%" y="773" width="0.0713%" height="15" fill="rgb(237,73,46)" fg:x="1309" fg:w="1"/><text x="93.5501%" y="783.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (1 samples, 0.07%)</title><rect x="93.3001%" y="757" width="0.0713%" height="15" fill="rgb(242,78,33)" fg:x="1309" fg:w="1"/><text x="93.5501%" y="767.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="93.3001%" y="741" width="0.0713%" height="15" fill="rgb(235,60,3)" fg:x="1309" fg:w="1"/><text x="93.5501%" y="751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="93.3001%" y="725" width="0.0713%" height="15" fill="rgb(216,172,19)" fg:x="1309" fg:w="1"/><text x="93.5501%" y="735.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="93.3001%" y="709" width="0.0713%" height="15" fill="rgb(227,6,42)" fg:x="1309" fg:w="1"/><text x="93.5501%" y="719.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="93.3001%" y="693" width="0.0713%" height="15" fill="rgb(223,207,42)" fg:x="1309" fg:w="1"/><text x="93.5501%" y="703.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.07%)</title><rect x="93.3001%" y="677" width="0.0713%" height="15" fill="rgb(246,138,30)" fg:x="1309" fg:w="1"/><text x="93.5501%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (1 samples, 0.07%)</title><rect x="93.3001%" y="661" width="0.0713%" height="15" fill="rgb(251,199,47)" fg:x="1309" fg:w="1"/><text x="93.5501%" y="671.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold::{{closure}} (1 samples, 0.07%)</title><rect x="93.3001%" y="645" width="0.0713%" height="15" fill="rgb(228,218,44)" fg:x="1309" fg:w="1"/><text x="93.5501%" y="655.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal (1 samples, 0.07%)</title><rect x="93.3001%" y="629" width="0.0713%" height="15" fill="rgb(220,68,6)" fg:x="1309" fg:w="1"/><text x="93.5501%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (1 samples, 0.07%)</title><rect x="93.3001%" y="613" width="0.0713%" height="15" fill="rgb(240,60,26)" fg:x="1309" fg:w="1"/><text x="93.5501%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.07%)</title><rect x="93.3001%" y="597" width="0.0713%" height="15" fill="rgb(211,200,19)" fg:x="1309" fg:w="1"/><text x="93.5501%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.07%)</title><rect x="93.3001%" y="581" width="0.0713%" height="15" fill="rgb(242,145,30)" fg:x="1309" fg:w="1"/><text x="93.5501%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.07%)</title><rect x="93.3001%" y="565" width="0.0713%" height="15" fill="rgb(225,64,13)" fg:x="1309" fg:w="1"/><text x="93.5501%" y="575.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (1 samples, 0.07%)</title><rect x="93.3001%" y="549" width="0.0713%" height="15" fill="rgb(218,103,35)" fg:x="1309" fg:w="1"/><text x="93.5501%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (1 samples, 0.07%)</title><rect x="93.3001%" y="533" width="0.0713%" height="15" fill="rgb(216,93,46)" fg:x="1309" fg:w="1"/><text x="93.5501%" y="543.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::{{closure}} (1 samples, 0.07%)</title><rect x="93.3001%" y="517" width="0.0713%" height="15" fill="rgb(225,159,27)" fg:x="1309" fg:w="1"/><text x="93.5501%" y="527.50"></text></g><g><title>crossbeam_epoch::default::with_handle (1 samples, 0.07%)</title><rect x="93.3001%" y="501" width="0.0713%" height="15" fill="rgb(225,204,11)" fg:x="1309" fg:w="1"/><text x="93.5501%" y="511.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.07%)</title><rect x="93.3001%" y="485" width="0.0713%" height="15" fill="rgb(205,56,4)" fg:x="1309" fg:w="1"/><text x="93.5501%" y="495.50"></text></g><g><title>crossbeam_epoch::default::with_handle::{{closure}} (1 samples, 0.07%)</title><rect x="93.3001%" y="469" width="0.0713%" height="15" fill="rgb(206,6,35)" fg:x="1309" fg:w="1"/><text x="93.5501%" y="479.50"></text></g><g><title>crossbeam_epoch::default::pin::{{closure}} (1 samples, 0.07%)</title><rect x="93.3001%" y="453" width="0.0713%" height="15" fill="rgb(247,73,52)" fg:x="1309" fg:w="1"/><text x="93.5501%" y="463.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (1 samples, 0.07%)</title><rect x="93.3001%" y="437" width="0.0713%" height="15" fill="rgb(246,97,4)" fg:x="1309" fg:w="1"/><text x="93.5501%" y="447.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (1 samples, 0.07%)</title><rect x="93.3001%" y="421" width="0.0713%" height="15" fill="rgb(212,37,15)" fg:x="1309" fg:w="1"/><text x="93.5501%" y="431.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::compare_exchange (1 samples, 0.07%)</title><rect x="93.3001%" y="405" width="0.0713%" height="15" fill="rgb(208,130,40)" fg:x="1309" fg:w="1"/><text x="93.5501%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.07%)</title><rect x="93.3001%" y="389" width="0.0713%" height="15" fill="rgb(236,55,29)" fg:x="1309" fg:w="1"/><text x="93.5501%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.07%)</title><rect x="93.3001%" y="373" width="0.0713%" height="15" fill="rgb(209,156,45)" fg:x="1309" fg:w="1"/><text x="93.5501%" y="383.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (10 samples, 0.71%)</title><rect x="93.3001%" y="1093" width="0.7128%" height="15" fill="rgb(249,107,4)" fg:x="1309" fg:w="10"/><text x="93.5501%" y="1103.50"></text></g><g><title>rayon_core::sleep::Sleep::no_work_found (9 samples, 0.64%)</title><rect x="93.3713%" y="1077" width="0.6415%" height="15" fill="rgb(227,7,13)" fg:x="1310" fg:w="9"/><text x="93.6213%" y="1087.50"></text></g><g><title>std::sync::condvar::Condvar::wait (9 samples, 0.64%)</title><rect x="93.3713%" y="1061" width="0.6415%" height="15" fill="rgb(250,129,14)" fg:x="1310" fg:w="9"/><text x="93.6213%" y="1071.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (9 samples, 0.64%)</title><rect x="93.3713%" y="1045" width="0.6415%" height="15" fill="rgb(229,92,13)" fg:x="1310" fg:w="9"/><text x="93.6213%" y="1055.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (9 samples, 0.64%)</title><rect x="93.3713%" y="1029" width="0.6415%" height="15" fill="rgb(245,98,39)" fg:x="1310" fg:w="9"/><text x="93.6213%" y="1039.50"></text></g><g><title>__pthread_cond_wait (9 samples, 0.64%)</title><rect x="93.3713%" y="1013" width="0.6415%" height="15" fill="rgb(234,135,48)" fg:x="1310" fg:w="9"/><text x="93.6213%" y="1023.50"></text></g><g><title>__futex_abstimed_wait_common64 (9 samples, 0.64%)</title><rect x="93.3713%" y="997" width="0.6415%" height="15" fill="rgb(230,98,28)" fg:x="1310" fg:w="9"/><text x="93.6213%" y="1007.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.07%)</title><rect x="94.0128%" y="853" width="0.0713%" height="15" fill="rgb(223,121,0)" fg:x="1319" fg:w="1"/><text x="94.2628%" y="863.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="94.0128%" y="837" width="0.0713%" height="15" fill="rgb(234,173,33)" fg:x="1319" fg:w="1"/><text x="94.2628%" y="847.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="94.0128%" y="821" width="0.0713%" height="15" fill="rgb(245,47,8)" fg:x="1319" fg:w="1"/><text x="94.2628%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="94.0128%" y="805" width="0.0713%" height="15" fill="rgb(205,17,20)" fg:x="1319" fg:w="1"/><text x="94.2628%" y="815.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="94.0128%" y="789" width="0.0713%" height="15" fill="rgb(232,151,16)" fg:x="1319" fg:w="1"/><text x="94.2628%" y="799.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="94.0128%" y="773" width="0.0713%" height="15" fill="rgb(208,30,32)" fg:x="1319" fg:w="1"/><text x="94.2628%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="94.0128%" y="757" width="0.0713%" height="15" fill="rgb(254,26,3)" fg:x="1319" fg:w="1"/><text x="94.2628%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="94.0128%" y="741" width="0.0713%" height="15" fill="rgb(240,177,30)" fg:x="1319" fg:w="1"/><text x="94.2628%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="94.0128%" y="725" width="0.0713%" height="15" fill="rgb(248,76,44)" fg:x="1319" fg:w="1"/><text x="94.2628%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="94.0128%" y="709" width="0.0713%" height="15" fill="rgb(241,186,54)" fg:x="1319" fg:w="1"/><text x="94.2628%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.07%)</title><rect x="94.0128%" y="693" width="0.0713%" height="15" fill="rgb(249,171,29)" fg:x="1319" fg:w="1"/><text x="94.2628%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="94.0128%" y="677" width="0.0713%" height="15" fill="rgb(237,151,44)" fg:x="1319" fg:w="1"/><text x="94.2628%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="94.0128%" y="661" width="0.0713%" height="15" fill="rgb(228,174,30)" fg:x="1319" fg:w="1"/><text x="94.2628%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.07%)</title><rect x="94.0128%" y="645" width="0.0713%" height="15" fill="rgb(252,14,37)" fg:x="1319" fg:w="1"/><text x="94.2628%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="94.0128%" y="629" width="0.0713%" height="15" fill="rgb(207,111,40)" fg:x="1319" fg:w="1"/><text x="94.2628%" y="639.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="94.0128%" y="613" width="0.0713%" height="15" fill="rgb(248,171,54)" fg:x="1319" fg:w="1"/><text x="94.2628%" y="623.50"></text></g><g><title>&lt;rand_distr::normal::Normal&lt;F&gt; as rand::distributions::distribution::Distribution&lt;F&gt;&gt;::sample (1 samples, 0.07%)</title><rect x="94.0128%" y="597" width="0.0713%" height="15" fill="rgb(211,127,2)" fg:x="1319" fg:w="1"/><text x="94.2628%" y="607.50"></text></g><g><title>rand::rng::Rng::sample (1 samples, 0.07%)</title><rect x="94.0128%" y="581" width="0.0713%" height="15" fill="rgb(236,87,47)" fg:x="1319" fg:w="1"/><text x="94.2628%" y="591.50"></text></g><g><title>rand_distr::utils::ziggurat (1 samples, 0.07%)</title><rect x="94.0128%" y="565" width="0.0713%" height="15" fill="rgb(223,190,45)" fg:x="1319" fg:w="1"/><text x="94.2628%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="94.0841%" y="517" width="0.0713%" height="15" fill="rgb(215,5,16)" fg:x="1320" fg:w="1"/><text x="94.3341%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.07%)</title><rect x="94.0841%" y="501" width="0.0713%" height="15" fill="rgb(252,82,33)" fg:x="1320" fg:w="1"/><text x="94.3341%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="94.0841%" y="485" width="0.0713%" height="15" fill="rgb(247,213,44)" fg:x="1320" fg:w="1"/><text x="94.3341%" y="495.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (3 samples, 0.21%)</title><rect x="94.0128%" y="885" width="0.2138%" height="15" fill="rgb(205,196,44)" fg:x="1319" fg:w="3"/><text x="94.2628%" y="895.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (3 samples, 0.21%)</title><rect x="94.0128%" y="869" width="0.2138%" height="15" fill="rgb(237,96,54)" fg:x="1319" fg:w="3"/><text x="94.2628%" y="879.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 0.14%)</title><rect x="94.0841%" y="853" width="0.1426%" height="15" fill="rgb(230,113,34)" fg:x="1320" fg:w="2"/><text x="94.3341%" y="863.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2 samples, 0.14%)</title><rect x="94.0841%" y="837" width="0.1426%" height="15" fill="rgb(221,224,12)" fg:x="1320" fg:w="2"/><text x="94.3341%" y="847.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (2 samples, 0.14%)</title><rect x="94.0841%" y="821" width="0.1426%" height="15" fill="rgb(219,112,44)" fg:x="1320" fg:w="2"/><text x="94.3341%" y="831.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.14%)</title><rect x="94.0841%" y="805" width="0.1426%" height="15" fill="rgb(210,31,13)" fg:x="1320" fg:w="2"/><text x="94.3341%" y="815.50"></text></g><g><title>std::panicking::try (2 samples, 0.14%)</title><rect x="94.0841%" y="789" width="0.1426%" height="15" fill="rgb(230,25,16)" fg:x="1320" fg:w="2"/><text x="94.3341%" y="799.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.14%)</title><rect x="94.0841%" y="773" width="0.1426%" height="15" fill="rgb(246,108,53)" fg:x="1320" fg:w="2"/><text x="94.3341%" y="783.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.14%)</title><rect x="94.0841%" y="757" width="0.1426%" height="15" fill="rgb(241,172,50)" fg:x="1320" fg:w="2"/><text x="94.3341%" y="767.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (2 samples, 0.14%)</title><rect x="94.0841%" y="741" width="0.1426%" height="15" fill="rgb(235,141,10)" fg:x="1320" fg:w="2"/><text x="94.3341%" y="751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (2 samples, 0.14%)</title><rect x="94.0841%" y="725" width="0.1426%" height="15" fill="rgb(220,174,43)" fg:x="1320" fg:w="2"/><text x="94.3341%" y="735.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (2 samples, 0.14%)</title><rect x="94.0841%" y="709" width="0.1426%" height="15" fill="rgb(215,181,40)" fg:x="1320" fg:w="2"/><text x="94.3341%" y="719.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (2 samples, 0.14%)</title><rect x="94.0841%" y="693" width="0.1426%" height="15" fill="rgb(230,97,2)" fg:x="1320" fg:w="2"/><text x="94.3341%" y="703.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (2 samples, 0.14%)</title><rect x="94.0841%" y="677" width="0.1426%" height="15" fill="rgb(211,25,27)" fg:x="1320" fg:w="2"/><text x="94.3341%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.14%)</title><rect x="94.0841%" y="661" width="0.1426%" height="15" fill="rgb(230,87,26)" fg:x="1320" fg:w="2"/><text x="94.3341%" y="671.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.14%)</title><rect x="94.0841%" y="645" width="0.1426%" height="15" fill="rgb(227,160,17)" fg:x="1320" fg:w="2"/><text x="94.3341%" y="655.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (2 samples, 0.14%)</title><rect x="94.0841%" y="629" width="0.1426%" height="15" fill="rgb(244,85,34)" fg:x="1320" fg:w="2"/><text x="94.3341%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.14%)</title><rect x="94.0841%" y="613" width="0.1426%" height="15" fill="rgb(207,70,0)" fg:x="1320" fg:w="2"/><text x="94.3341%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.14%)</title><rect x="94.0841%" y="597" width="0.1426%" height="15" fill="rgb(223,129,7)" fg:x="1320" fg:w="2"/><text x="94.3341%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.14%)</title><rect x="94.0841%" y="581" width="0.1426%" height="15" fill="rgb(246,105,7)" fg:x="1320" fg:w="2"/><text x="94.3341%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.14%)</title><rect x="94.0841%" y="565" width="0.1426%" height="15" fill="rgb(215,154,42)" fg:x="1320" fg:w="2"/><text x="94.3341%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.14%)</title><rect x="94.0841%" y="549" width="0.1426%" height="15" fill="rgb(220,215,30)" fg:x="1320" fg:w="2"/><text x="94.3341%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="94.0841%" y="533" width="0.1426%" height="15" fill="rgb(228,81,51)" fg:x="1320" fg:w="2"/><text x="94.3341%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.07%)</title><rect x="94.1554%" y="517" width="0.0713%" height="15" fill="rgb(247,71,54)" fg:x="1321" fg:w="1"/><text x="94.4054%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.07%)</title><rect x="94.1554%" y="501" width="0.0713%" height="15" fill="rgb(234,176,34)" fg:x="1321" fg:w="1"/><text x="94.4054%" y="511.50"></text></g><g><title>&lt;ldpc::channel::BinaryMemorylessChannel as ldpc::channel::Channel&gt;::transmit::{{closure}} (1 samples, 0.07%)</title><rect x="94.1554%" y="485" width="0.0713%" height="15" fill="rgb(241,103,54)" fg:x="1321" fg:w="1"/><text x="94.4054%" y="495.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 0.29%)</title><rect x="94.0128%" y="949" width="0.2851%" height="15" fill="rgb(228,22,34)" fg:x="1319" fg:w="4"/><text x="94.2628%" y="959.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.29%)</title><rect x="94.0128%" y="933" width="0.2851%" height="15" fill="rgb(241,179,48)" fg:x="1319" fg:w="4"/><text x="94.2628%" y="943.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.29%)</title><rect x="94.0128%" y="917" width="0.2851%" height="15" fill="rgb(235,167,37)" fg:x="1319" fg:w="4"/><text x="94.2628%" y="927.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.29%)</title><rect x="94.0128%" y="901" width="0.2851%" height="15" fill="rgb(213,109,30)" fg:x="1319" fg:w="4"/><text x="94.2628%" y="911.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="94.2267%" y="885" width="0.0713%" height="15" fill="rgb(222,172,16)" fg:x="1322" fg:w="1"/><text x="94.4767%" y="895.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="94.2267%" y="869" width="0.0713%" height="15" fill="rgb(233,192,5)" fg:x="1322" fg:w="1"/><text x="94.4767%" y="879.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="94.2267%" y="853" width="0.0713%" height="15" fill="rgb(247,189,41)" fg:x="1322" fg:w="1"/><text x="94.4767%" y="863.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="94.2267%" y="837" width="0.0713%" height="15" fill="rgb(218,134,47)" fg:x="1322" fg:w="1"/><text x="94.4767%" y="847.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="94.2267%" y="821" width="0.0713%" height="15" fill="rgb(216,29,3)" fg:x="1322" fg:w="1"/><text x="94.4767%" y="831.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="94.2267%" y="805" width="0.0713%" height="15" fill="rgb(246,140,12)" fg:x="1322" fg:w="1"/><text x="94.4767%" y="815.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="94.2267%" y="789" width="0.0713%" height="15" fill="rgb(230,136,11)" fg:x="1322" fg:w="1"/><text x="94.4767%" y="799.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="94.2267%" y="773" width="0.0713%" height="15" fill="rgb(247,22,47)" fg:x="1322" fg:w="1"/><text x="94.4767%" y="783.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="94.2267%" y="757" width="0.0713%" height="15" fill="rgb(218,84,22)" fg:x="1322" fg:w="1"/><text x="94.4767%" y="767.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="94.2267%" y="741" width="0.0713%" height="15" fill="rgb(216,87,39)" fg:x="1322" fg:w="1"/><text x="94.4767%" y="751.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="94.2267%" y="725" width="0.0713%" height="15" fill="rgb(221,178,8)" fg:x="1322" fg:w="1"/><text x="94.4767%" y="735.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="94.2267%" y="709" width="0.0713%" height="15" fill="rgb(230,42,11)" fg:x="1322" fg:w="1"/><text x="94.4767%" y="719.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="94.2267%" y="693" width="0.0713%" height="15" fill="rgb(237,229,4)" fg:x="1322" fg:w="1"/><text x="94.4767%" y="703.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="94.2267%" y="677" width="0.0713%" height="15" fill="rgb(222,31,33)" fg:x="1322" fg:w="1"/><text x="94.4767%" y="687.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="94.2267%" y="661" width="0.0713%" height="15" fill="rgb(210,17,39)" fg:x="1322" fg:w="1"/><text x="94.4767%" y="671.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="94.2267%" y="645" width="0.0713%" height="15" fill="rgb(244,93,20)" fg:x="1322" fg:w="1"/><text x="94.4767%" y="655.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.07%)</title><rect x="94.2267%" y="629" width="0.0713%" height="15" fill="rgb(210,40,47)" fg:x="1322" fg:w="1"/><text x="94.4767%" y="639.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="94.2267%" y="613" width="0.0713%" height="15" fill="rgb(239,211,47)" fg:x="1322" fg:w="1"/><text x="94.4767%" y="623.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="94.2267%" y="597" width="0.0713%" height="15" fill="rgb(251,223,49)" fg:x="1322" fg:w="1"/><text x="94.4767%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="94.2267%" y="581" width="0.0713%" height="15" fill="rgb(221,149,5)" fg:x="1322" fg:w="1"/><text x="94.4767%" y="591.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="94.2267%" y="565" width="0.0713%" height="15" fill="rgb(219,224,51)" fg:x="1322" fg:w="1"/><text x="94.4767%" y="575.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="94.2267%" y="549" width="0.0713%" height="15" fill="rgb(223,7,8)" fg:x="1322" fg:w="1"/><text x="94.4767%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="94.2267%" y="533" width="0.0713%" height="15" fill="rgb(241,217,22)" fg:x="1322" fg:w="1"/><text x="94.4767%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="94.2267%" y="517" width="0.0713%" height="15" fill="rgb(248,209,0)" fg:x="1322" fg:w="1"/><text x="94.4767%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="94.2267%" y="501" width="0.0713%" height="15" fill="rgb(217,205,4)" fg:x="1322" fg:w="1"/><text x="94.4767%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="94.2267%" y="485" width="0.0713%" height="15" fill="rgb(228,124,39)" fg:x="1322" fg:w="1"/><text x="94.4767%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.07%)</title><rect x="94.2267%" y="469" width="0.0713%" height="15" fill="rgb(250,116,42)" fg:x="1322" fg:w="1"/><text x="94.4767%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="94.2979%" y="533" width="0.0713%" height="15" fill="rgb(223,202,9)" fg:x="1323" fg:w="1"/><text x="94.5479%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.07%)</title><rect x="94.2979%" y="517" width="0.0713%" height="15" fill="rgb(242,222,40)" fg:x="1323" fg:w="1"/><text x="94.5479%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.07%)</title><rect x="94.2979%" y="501" width="0.0713%" height="15" fill="rgb(229,99,46)" fg:x="1323" fg:w="1"/><text x="94.5479%" y="511.50"></text></g><g><title>&lt;ldpc::channel::BinaryMemorylessChannel as ldpc::channel::Channel&gt;::transmit::{{closure}} (1 samples, 0.07%)</title><rect x="94.2979%" y="485" width="0.0713%" height="15" fill="rgb(225,56,46)" fg:x="1323" fg:w="1"/><text x="94.5479%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.14%)</title><rect x="94.2979%" y="613" width="0.1426%" height="15" fill="rgb(227,94,5)" fg:x="1323" fg:w="2"/><text x="94.5479%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.14%)</title><rect x="94.2979%" y="597" width="0.1426%" height="15" fill="rgb(205,112,38)" fg:x="1323" fg:w="2"/><text x="94.5479%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.14%)</title><rect x="94.2979%" y="581" width="0.1426%" height="15" fill="rgb(231,133,46)" fg:x="1323" fg:w="2"/><text x="94.5479%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.14%)</title><rect x="94.2979%" y="565" width="0.1426%" height="15" fill="rgb(217,16,9)" fg:x="1323" fg:w="2"/><text x="94.5479%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.14%)</title><rect x="94.2979%" y="549" width="0.1426%" height="15" fill="rgb(249,173,9)" fg:x="1323" fg:w="2"/><text x="94.5479%" y="559.50"></text></g><g><title>core::ptr::write (1 samples, 0.07%)</title><rect x="94.3692%" y="533" width="0.0713%" height="15" fill="rgb(205,163,53)" fg:x="1324" fg:w="1"/><text x="94.6192%" y="543.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (3 samples, 0.21%)</title><rect x="94.2979%" y="741" width="0.2138%" height="15" fill="rgb(217,54,41)" fg:x="1323" fg:w="3"/><text x="94.5479%" y="751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (3 samples, 0.21%)</title><rect x="94.2979%" y="725" width="0.2138%" height="15" fill="rgb(228,216,12)" fg:x="1323" fg:w="3"/><text x="94.5479%" y="735.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (3 samples, 0.21%)</title><rect x="94.2979%" y="709" width="0.2138%" height="15" fill="rgb(244,228,15)" fg:x="1323" fg:w="3"/><text x="94.5479%" y="719.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (3 samples, 0.21%)</title><rect x="94.2979%" y="693" width="0.2138%" height="15" fill="rgb(221,176,53)" fg:x="1323" fg:w="3"/><text x="94.5479%" y="703.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (3 samples, 0.21%)</title><rect x="94.2979%" y="677" width="0.2138%" height="15" fill="rgb(205,94,34)" fg:x="1323" fg:w="3"/><text x="94.5479%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.21%)</title><rect x="94.2979%" y="661" width="0.2138%" height="15" fill="rgb(213,110,48)" fg:x="1323" fg:w="3"/><text x="94.5479%" y="671.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 0.21%)</title><rect x="94.2979%" y="645" width="0.2138%" height="15" fill="rgb(236,142,28)" fg:x="1323" fg:w="3"/><text x="94.5479%" y="655.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (3 samples, 0.21%)</title><rect x="94.2979%" y="629" width="0.2138%" height="15" fill="rgb(225,135,29)" fg:x="1323" fg:w="3"/><text x="94.5479%" y="639.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.07%)</title><rect x="94.4405%" y="613" width="0.0713%" height="15" fill="rgb(252,45,31)" fg:x="1325" fg:w="1"/><text x="94.6905%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="94.4405%" y="597" width="0.0713%" height="15" fill="rgb(211,187,50)" fg:x="1325" fg:w="1"/><text x="94.6905%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.07%)</title><rect x="94.4405%" y="581" width="0.0713%" height="15" fill="rgb(229,109,7)" fg:x="1325" fg:w="1"/><text x="94.6905%" y="591.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 0.29%)</title><rect x="94.2979%" y="805" width="0.2851%" height="15" fill="rgb(251,131,51)" fg:x="1323" fg:w="4"/><text x="94.5479%" y="815.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.29%)</title><rect x="94.2979%" y="789" width="0.2851%" height="15" fill="rgb(251,180,35)" fg:x="1323" fg:w="4"/><text x="94.5479%" y="799.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.29%)</title><rect x="94.2979%" y="773" width="0.2851%" height="15" fill="rgb(211,46,32)" fg:x="1323" fg:w="4"/><text x="94.5479%" y="783.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.29%)</title><rect x="94.2979%" y="757" width="0.2851%" height="15" fill="rgb(248,123,17)" fg:x="1323" fg:w="4"/><text x="94.5479%" y="767.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="94.5118%" y="741" width="0.0713%" height="15" fill="rgb(227,141,18)" fg:x="1326" fg:w="1"/><text x="94.7618%" y="751.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="94.5118%" y="725" width="0.0713%" height="15" fill="rgb(216,102,9)" fg:x="1326" fg:w="1"/><text x="94.7618%" y="735.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="94.5118%" y="709" width="0.0713%" height="15" fill="rgb(253,47,13)" fg:x="1326" fg:w="1"/><text x="94.7618%" y="719.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="94.5118%" y="693" width="0.0713%" height="15" fill="rgb(226,93,23)" fg:x="1326" fg:w="1"/><text x="94.7618%" y="703.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="94.5118%" y="677" width="0.0713%" height="15" fill="rgb(247,104,17)" fg:x="1326" fg:w="1"/><text x="94.7618%" y="687.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="94.5118%" y="661" width="0.0713%" height="15" fill="rgb(233,203,26)" fg:x="1326" fg:w="1"/><text x="94.7618%" y="671.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="94.5118%" y="645" width="0.0713%" height="15" fill="rgb(244,98,49)" fg:x="1326" fg:w="1"/><text x="94.7618%" y="655.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.07%)</title><rect x="94.5118%" y="629" width="0.0713%" height="15" fill="rgb(235,134,22)" fg:x="1326" fg:w="1"/><text x="94.7618%" y="639.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="94.5118%" y="613" width="0.0713%" height="15" fill="rgb(221,70,32)" fg:x="1326" fg:w="1"/><text x="94.7618%" y="623.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="94.5118%" y="597" width="0.0713%" height="15" fill="rgb(238,15,50)" fg:x="1326" fg:w="1"/><text x="94.7618%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="94.5118%" y="581" width="0.0713%" height="15" fill="rgb(215,221,48)" fg:x="1326" fg:w="1"/><text x="94.7618%" y="591.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="94.5118%" y="565" width="0.0713%" height="15" fill="rgb(236,73,3)" fg:x="1326" fg:w="1"/><text x="94.7618%" y="575.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="94.5118%" y="549" width="0.0713%" height="15" fill="rgb(250,107,11)" fg:x="1326" fg:w="1"/><text x="94.7618%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="94.5118%" y="533" width="0.0713%" height="15" fill="rgb(242,39,14)" fg:x="1326" fg:w="1"/><text x="94.7618%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="94.5118%" y="517" width="0.0713%" height="15" fill="rgb(248,164,37)" fg:x="1326" fg:w="1"/><text x="94.7618%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="94.5118%" y="501" width="0.0713%" height="15" fill="rgb(217,60,12)" fg:x="1326" fg:w="1"/><text x="94.7618%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="94.5118%" y="485" width="0.0713%" height="15" fill="rgb(240,125,29)" fg:x="1326" fg:w="1"/><text x="94.7618%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.07%)</title><rect x="94.5118%" y="469" width="0.0713%" height="15" fill="rgb(208,207,28)" fg:x="1326" fg:w="1"/><text x="94.7618%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="94.5118%" y="453" width="0.0713%" height="15" fill="rgb(209,159,27)" fg:x="1326" fg:w="1"/><text x="94.7618%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="94.5118%" y="437" width="0.0713%" height="15" fill="rgb(251,176,53)" fg:x="1326" fg:w="1"/><text x="94.7618%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.07%)</title><rect x="94.5118%" y="421" width="0.0713%" height="15" fill="rgb(211,85,7)" fg:x="1326" fg:w="1"/><text x="94.7618%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="94.5118%" y="405" width="0.0713%" height="15" fill="rgb(216,64,54)" fg:x="1326" fg:w="1"/><text x="94.7618%" y="415.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="94.5118%" y="389" width="0.0713%" height="15" fill="rgb(217,54,24)" fg:x="1326" fg:w="1"/><text x="94.7618%" y="399.50"></text></g><g><title>&lt;rand_distr::normal::Normal&lt;F&gt; as rand::distributions::distribution::Distribution&lt;F&gt;&gt;::sample (1 samples, 0.07%)</title><rect x="94.5118%" y="373" width="0.0713%" height="15" fill="rgb(208,206,53)" fg:x="1326" fg:w="1"/><text x="94.7618%" y="383.50"></text></g><g><title>rand::rng::Rng::sample (1 samples, 0.07%)</title><rect x="94.5118%" y="357" width="0.0713%" height="15" fill="rgb(251,74,39)" fg:x="1326" fg:w="1"/><text x="94.7618%" y="367.50"></text></g><g><title>rand_distr::utils::ziggurat (1 samples, 0.07%)</title><rect x="94.5118%" y="341" width="0.0713%" height="15" fill="rgb(226,47,5)" fg:x="1326" fg:w="1"/><text x="94.7618%" y="351.50"></text></g><g><title>rayon_core::registry::WorkerThread::take_local_job (1 samples, 0.07%)</title><rect x="94.5830%" y="805" width="0.0713%" height="15" fill="rgb(234,111,33)" fg:x="1327" fg:w="1"/><text x="94.8330%" y="815.50"></text></g><g><title>core::sync::atomic::fence (1 samples, 0.07%)</title><rect x="94.5830%" y="789" width="0.0713%" height="15" fill="rgb(251,14,10)" fg:x="1327" fg:w="1"/><text x="94.8330%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="94.6543%" y="501" width="0.1426%" height="15" fill="rgb(232,43,0)" fg:x="1328" fg:w="2"/><text x="94.9043%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (2 samples, 0.14%)</title><rect x="94.6543%" y="485" width="0.1426%" height="15" fill="rgb(222,68,43)" fg:x="1328" fg:w="2"/><text x="94.9043%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="94.6543%" y="469" width="0.1426%" height="15" fill="rgb(217,24,23)" fg:x="1328" fg:w="2"/><text x="94.9043%" y="479.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="94.6543%" y="453" width="0.1426%" height="15" fill="rgb(229,209,14)" fg:x="1328" fg:w="2"/><text x="94.9043%" y="463.50"></text></g><g><title>&lt;rand_distr::normal::Normal&lt;F&gt; as rand::distributions::distribution::Distribution&lt;F&gt;&gt;::sample (2 samples, 0.14%)</title><rect x="94.6543%" y="437" width="0.1426%" height="15" fill="rgb(250,149,48)" fg:x="1328" fg:w="2"/><text x="94.9043%" y="447.50"></text></g><g><title>rand::rng::Rng::sample (2 samples, 0.14%)</title><rect x="94.6543%" y="421" width="0.1426%" height="15" fill="rgb(210,120,37)" fg:x="1328" fg:w="2"/><text x="94.9043%" y="431.50"></text></g><g><title>rand_distr::utils::ziggurat (2 samples, 0.14%)</title><rect x="94.6543%" y="405" width="0.1426%" height="15" fill="rgb(210,21,8)" fg:x="1328" fg:w="2"/><text x="94.9043%" y="415.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::abs (1 samples, 0.07%)</title><rect x="94.7256%" y="389" width="0.0713%" height="15" fill="rgb(243,145,7)" fg:x="1329" fg:w="1"/><text x="94.9756%" y="399.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (3 samples, 0.21%)</title><rect x="94.6543%" y="693" width="0.2138%" height="15" fill="rgb(238,178,32)" fg:x="1328" fg:w="3"/><text x="94.9043%" y="703.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (3 samples, 0.21%)</title><rect x="94.6543%" y="677" width="0.2138%" height="15" fill="rgb(222,4,10)" fg:x="1328" fg:w="3"/><text x="94.9043%" y="687.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (3 samples, 0.21%)</title><rect x="94.6543%" y="661" width="0.2138%" height="15" fill="rgb(239,7,37)" fg:x="1328" fg:w="3"/><text x="94.9043%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.21%)</title><rect x="94.6543%" y="645" width="0.2138%" height="15" fill="rgb(215,31,37)" fg:x="1328" fg:w="3"/><text x="94.9043%" y="655.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 0.21%)</title><rect x="94.6543%" y="629" width="0.2138%" height="15" fill="rgb(224,83,33)" fg:x="1328" fg:w="3"/><text x="94.9043%" y="639.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (3 samples, 0.21%)</title><rect x="94.6543%" y="613" width="0.2138%" height="15" fill="rgb(239,55,3)" fg:x="1328" fg:w="3"/><text x="94.9043%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.21%)</title><rect x="94.6543%" y="597" width="0.2138%" height="15" fill="rgb(247,92,11)" fg:x="1328" fg:w="3"/><text x="94.9043%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.21%)</title><rect x="94.6543%" y="581" width="0.2138%" height="15" fill="rgb(239,200,7)" fg:x="1328" fg:w="3"/><text x="94.9043%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.21%)</title><rect x="94.6543%" y="565" width="0.2138%" height="15" fill="rgb(227,115,8)" fg:x="1328" fg:w="3"/><text x="94.9043%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.21%)</title><rect x="94.6543%" y="549" width="0.2138%" height="15" fill="rgb(215,189,27)" fg:x="1328" fg:w="3"/><text x="94.9043%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3 samples, 0.21%)</title><rect x="94.6543%" y="533" width="0.2138%" height="15" fill="rgb(251,216,39)" fg:x="1328" fg:w="3"/><text x="94.9043%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.21%)</title><rect x="94.6543%" y="517" width="0.2138%" height="15" fill="rgb(207,29,47)" fg:x="1328" fg:w="3"/><text x="94.9043%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.07%)</title><rect x="94.7969%" y="501" width="0.0713%" height="15" fill="rgb(210,71,34)" fg:x="1330" fg:w="1"/><text x="95.0469%" y="511.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.07%)</title><rect x="94.7969%" y="485" width="0.0713%" height="15" fill="rgb(253,217,51)" fg:x="1330" fg:w="1"/><text x="95.0469%" y="495.50"></text></g><g><title>&lt;ldpc::channel::BinaryMemorylessChannel as ldpc::channel::Channel&gt;::transmit::{{closure}} (1 samples, 0.07%)</title><rect x="94.7969%" y="469" width="0.0713%" height="15" fill="rgb(222,117,46)" fg:x="1330" fg:w="1"/><text x="95.0469%" y="479.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="94.8681%" y="661" width="0.0713%" height="15" fill="rgb(226,132,6)" fg:x="1331" fg:w="1"/><text x="95.1181%" y="671.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="94.8681%" y="645" width="0.0713%" height="15" fill="rgb(254,145,51)" fg:x="1331" fg:w="1"/><text x="95.1181%" y="655.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.07%)</title><rect x="94.8681%" y="629" width="0.0713%" height="15" fill="rgb(231,199,27)" fg:x="1331" fg:w="1"/><text x="95.1181%" y="639.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="94.8681%" y="613" width="0.0713%" height="15" fill="rgb(245,158,14)" fg:x="1331" fg:w="1"/><text x="95.1181%" y="623.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.07%)</title><rect x="94.8681%" y="597" width="0.0713%" height="15" fill="rgb(240,113,14)" fg:x="1331" fg:w="1"/><text x="95.1181%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="94.8681%" y="581" width="0.0713%" height="15" fill="rgb(210,20,13)" fg:x="1331" fg:w="1"/><text x="95.1181%" y="591.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="94.8681%" y="565" width="0.0713%" height="15" fill="rgb(241,144,13)" fg:x="1331" fg:w="1"/><text x="95.1181%" y="575.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="94.8681%" y="549" width="0.0713%" height="15" fill="rgb(235,43,34)" fg:x="1331" fg:w="1"/><text x="95.1181%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="94.8681%" y="533" width="0.0713%" height="15" fill="rgb(208,36,20)" fg:x="1331" fg:w="1"/><text x="95.1181%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="94.8681%" y="517" width="0.0713%" height="15" fill="rgb(239,204,10)" fg:x="1331" fg:w="1"/><text x="95.1181%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="94.8681%" y="501" width="0.0713%" height="15" fill="rgb(217,84,43)" fg:x="1331" fg:w="1"/><text x="95.1181%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="94.8681%" y="485" width="0.0713%" height="15" fill="rgb(241,170,50)" fg:x="1331" fg:w="1"/><text x="95.1181%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.07%)</title><rect x="94.8681%" y="469" width="0.0713%" height="15" fill="rgb(226,205,29)" fg:x="1331" fg:w="1"/><text x="95.1181%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="94.8681%" y="453" width="0.0713%" height="15" fill="rgb(233,113,1)" fg:x="1331" fg:w="1"/><text x="95.1181%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="94.8681%" y="437" width="0.0713%" height="15" fill="rgb(253,98,13)" fg:x="1331" fg:w="1"/><text x="95.1181%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.07%)</title><rect x="94.8681%" y="421" width="0.0713%" height="15" fill="rgb(211,115,12)" fg:x="1331" fg:w="1"/><text x="95.1181%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="94.8681%" y="405" width="0.0713%" height="15" fill="rgb(208,12,16)" fg:x="1331" fg:w="1"/><text x="95.1181%" y="415.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="94.8681%" y="389" width="0.0713%" height="15" fill="rgb(237,193,54)" fg:x="1331" fg:w="1"/><text x="95.1181%" y="399.50"></text></g><g><title>&lt;rand_distr::normal::Normal&lt;F&gt; as rand::distributions::distribution::Distribution&lt;F&gt;&gt;::sample (1 samples, 0.07%)</title><rect x="94.8681%" y="373" width="0.0713%" height="15" fill="rgb(243,22,42)" fg:x="1331" fg:w="1"/><text x="95.1181%" y="383.50"></text></g><g><title>rand::rng::Rng::sample (1 samples, 0.07%)</title><rect x="94.8681%" y="357" width="0.0713%" height="15" fill="rgb(233,151,36)" fg:x="1331" fg:w="1"/><text x="95.1181%" y="367.50"></text></g><g><title>rand_distr::utils::ziggurat (1 samples, 0.07%)</title><rect x="94.8681%" y="341" width="0.0713%" height="15" fill="rgb(237,57,45)" fg:x="1331" fg:w="1"/><text x="95.1181%" y="351.50"></text></g><g><title>&lt;u64 as rand::distributions::float::IntoFloat&gt;::into_float_with_exponent (1 samples, 0.07%)</title><rect x="94.8681%" y="325" width="0.0713%" height="15" fill="rgb(221,88,17)" fg:x="1331" fg:w="1"/><text x="95.1181%" y="335.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::from_bits (1 samples, 0.07%)</title><rect x="94.8681%" y="309" width="0.0713%" height="15" fill="rgb(230,79,15)" fg:x="1331" fg:w="1"/><text x="95.1181%" y="319.50"></text></g><g><title>rayon_core::registry::WorkerThread::push (1 samples, 0.07%)</title><rect x="94.9394%" y="661" width="0.0713%" height="15" fill="rgb(213,57,13)" fg:x="1332" fg:w="1"/><text x="95.1894%" y="671.50"></text></g><g><title>rayon_core::sleep::Sleep::new_internal_jobs (1 samples, 0.07%)</title><rect x="94.9394%" y="645" width="0.0713%" height="15" fill="rgb(222,116,39)" fg:x="1332" fg:w="1"/><text x="95.1894%" y="655.50"></text></g><g><title>rayon_core::sleep::Sleep::new_jobs (1 samples, 0.07%)</title><rect x="94.9394%" y="629" width="0.0713%" height="15" fill="rgb(245,107,2)" fg:x="1332" fg:w="1"/><text x="95.1894%" y="639.50"></text></g><g><title>rayon_core::sleep::counters::AtomicCounters::increment_jobs_event_counter_if (1 samples, 0.07%)</title><rect x="94.9394%" y="613" width="0.0713%" height="15" fill="rgb(238,1,10)" fg:x="1332" fg:w="1"/><text x="95.1894%" y="623.50"></text></g><g><title>rayon_core::sleep::counters::AtomicCounters::load (1 samples, 0.07%)</title><rect x="94.9394%" y="597" width="0.0713%" height="15" fill="rgb(249,4,48)" fg:x="1332" fg:w="1"/><text x="95.1894%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.07%)</title><rect x="94.9394%" y="581" width="0.0713%" height="15" fill="rgb(223,151,18)" fg:x="1332" fg:w="1"/><text x="95.1894%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.07%)</title><rect x="94.9394%" y="565" width="0.0713%" height="15" fill="rgb(227,65,43)" fg:x="1332" fg:w="1"/><text x="95.1894%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="95.0107%" y="357" width="0.0713%" height="15" fill="rgb(218,40,45)" fg:x="1333" fg:w="1"/><text x="95.2607%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.07%)</title><rect x="95.0107%" y="341" width="0.0713%" height="15" fill="rgb(252,121,31)" fg:x="1333" fg:w="1"/><text x="95.2607%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="95.0107%" y="325" width="0.0713%" height="15" fill="rgb(219,158,43)" fg:x="1333" fg:w="1"/><text x="95.2607%" y="335.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="95.0107%" y="309" width="0.0713%" height="15" fill="rgb(231,162,42)" fg:x="1333" fg:w="1"/><text x="95.2607%" y="319.50"></text></g><g><title>&lt;rand_distr::normal::Normal&lt;F&gt; as rand::distributions::distribution::Distribution&lt;F&gt;&gt;::sample (1 samples, 0.07%)</title><rect x="95.0107%" y="293" width="0.0713%" height="15" fill="rgb(217,179,25)" fg:x="1333" fg:w="1"/><text x="95.2607%" y="303.50"></text></g><g><title>rand::rng::Rng::sample (1 samples, 0.07%)</title><rect x="95.0107%" y="277" width="0.0713%" height="15" fill="rgb(206,212,31)" fg:x="1333" fg:w="1"/><text x="95.2607%" y="287.50"></text></g><g><title>rand_distr::utils::ziggurat (1 samples, 0.07%)</title><rect x="95.0107%" y="261" width="0.0713%" height="15" fill="rgb(235,144,12)" fg:x="1333" fg:w="1"/><text x="95.2607%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.21%)</title><rect x="95.0107%" y="405" width="0.2138%" height="15" fill="rgb(213,51,10)" fg:x="1333" fg:w="3"/><text x="95.2607%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3 samples, 0.21%)</title><rect x="95.0107%" y="389" width="0.2138%" height="15" fill="rgb(231,145,14)" fg:x="1333" fg:w="3"/><text x="95.2607%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.21%)</title><rect x="95.0107%" y="373" width="0.2138%" height="15" fill="rgb(235,15,28)" fg:x="1333" fg:w="3"/><text x="95.2607%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.14%)</title><rect x="95.0820%" y="357" width="0.1426%" height="15" fill="rgb(237,206,10)" fg:x="1334" fg:w="2"/><text x="95.3320%" y="367.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.14%)</title><rect x="95.0820%" y="341" width="0.1426%" height="15" fill="rgb(236,227,27)" fg:x="1334" fg:w="2"/><text x="95.3320%" y="351.50"></text></g><g><title>&lt;ldpc::channel::BinaryMemorylessChannel as ldpc::channel::Channel&gt;::transmit::{{closure}} (2 samples, 0.14%)</title><rect x="95.0820%" y="325" width="0.1426%" height="15" fill="rgb(246,83,35)" fg:x="1334" fg:w="2"/><text x="95.3320%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.29%)</title><rect x="95.0107%" y="453" width="0.2851%" height="15" fill="rgb(220,136,24)" fg:x="1333" fg:w="4"/><text x="95.2607%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4 samples, 0.29%)</title><rect x="95.0107%" y="437" width="0.2851%" height="15" fill="rgb(217,3,25)" fg:x="1333" fg:w="4"/><text x="95.2607%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4 samples, 0.29%)</title><rect x="95.0107%" y="421" width="0.2851%" height="15" fill="rgb(239,24,14)" fg:x="1333" fg:w="4"/><text x="95.2607%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="95.2245%" y="405" width="0.0713%" height="15" fill="rgb(244,16,53)" fg:x="1336" fg:w="1"/><text x="95.4745%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="95.2245%" y="389" width="0.0713%" height="15" fill="rgb(208,175,44)" fg:x="1336" fg:w="1"/><text x="95.4745%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.07%)</title><rect x="95.2245%" y="373" width="0.0713%" height="15" fill="rgb(252,18,48)" fg:x="1336" fg:w="1"/><text x="95.4745%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="95.2245%" y="357" width="0.0713%" height="15" fill="rgb(234,199,32)" fg:x="1336" fg:w="1"/><text x="95.4745%" y="367.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="95.2245%" y="341" width="0.0713%" height="15" fill="rgb(225,77,54)" fg:x="1336" fg:w="1"/><text x="95.4745%" y="351.50"></text></g><g><title>&lt;rand_distr::normal::Normal&lt;F&gt; as rand::distributions::distribution::Distribution&lt;F&gt;&gt;::sample (1 samples, 0.07%)</title><rect x="95.2245%" y="325" width="0.0713%" height="15" fill="rgb(225,42,25)" fg:x="1336" fg:w="1"/><text x="95.4745%" y="335.50"></text></g><g><title>rand::rng::Rng::sample (1 samples, 0.07%)</title><rect x="95.2245%" y="309" width="0.0713%" height="15" fill="rgb(242,227,46)" fg:x="1336" fg:w="1"/><text x="95.4745%" y="319.50"></text></g><g><title>rand_distr::utils::ziggurat (1 samples, 0.07%)</title><rect x="95.2245%" y="293" width="0.0713%" height="15" fill="rgb(246,197,35)" fg:x="1336" fg:w="1"/><text x="95.4745%" y="303.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (46 samples, 3.28%)</title><rect x="92.0884%" y="1429" width="3.2787%" height="15" fill="rgb(215,159,26)" fg:x="1292" fg:w="46"/><text x="92.3384%" y="1439.50">ray..</text></g><g><title>rayon_core::job::JobRef::execute (46 samples, 3.28%)</title><rect x="92.0884%" y="1413" width="3.2787%" height="15" fill="rgb(212,194,50)" fg:x="1292" fg:w="46"/><text x="92.3384%" y="1423.50">ray..</text></g><g><title>rayon_core::unwind::halt_unwinding (46 samples, 3.28%)</title><rect x="92.0884%" y="1397" width="3.2787%" height="15" fill="rgb(246,132,1)" fg:x="1292" fg:w="46"/><text x="92.3384%" y="1407.50">ray..</text></g><g><title>std::panic::catch_unwind (46 samples, 3.28%)</title><rect x="92.0884%" y="1381" width="3.2787%" height="15" fill="rgb(217,71,7)" fg:x="1292" fg:w="46"/><text x="92.3384%" y="1391.50">std..</text></g><g><title>std::panicking::try (45 samples, 3.21%)</title><rect x="92.1597%" y="1365" width="3.2074%" height="15" fill="rgb(252,59,32)" fg:x="1293" fg:w="45"/><text x="92.4097%" y="1375.50">std..</text></g><g><title>std::panicking::try::do_call (45 samples, 3.21%)</title><rect x="92.1597%" y="1349" width="3.2074%" height="15" fill="rgb(253,204,25)" fg:x="1293" fg:w="45"/><text x="92.4097%" y="1359.50">std..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (45 samples, 3.21%)</title><rect x="92.1597%" y="1333" width="3.2074%" height="15" fill="rgb(232,21,16)" fg:x="1293" fg:w="45"/><text x="92.4097%" y="1343.50">&lt;co..</text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (45 samples, 3.21%)</title><rect x="92.1597%" y="1317" width="3.2074%" height="15" fill="rgb(248,90,29)" fg:x="1293" fg:w="45"/><text x="92.4097%" y="1327.50">&lt;ra..</text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (45 samples, 3.21%)</title><rect x="92.1597%" y="1301" width="3.2074%" height="15" fill="rgb(249,223,7)" fg:x="1293" fg:w="45"/><text x="92.4097%" y="1311.50">ray..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (45 samples, 3.21%)</title><rect x="92.1597%" y="1285" width="3.2074%" height="15" fill="rgb(231,119,42)" fg:x="1293" fg:w="45"/><text x="92.4097%" y="1295.50">ray..</text></g><g><title>rayon_core::join::join_context (45 samples, 3.21%)</title><rect x="92.1597%" y="1269" width="3.2074%" height="15" fill="rgb(215,41,35)" fg:x="1293" fg:w="45"/><text x="92.4097%" y="1279.50">ray..</text></g><g><title>rayon_core::join::join_context::{{closure}} (45 samples, 3.21%)</title><rect x="92.1597%" y="1253" width="3.2074%" height="15" fill="rgb(220,44,45)" fg:x="1293" fg:w="45"/><text x="92.4097%" y="1263.50">ray..</text></g><g><title>rayon_core::unwind::halt_unwinding (31 samples, 2.21%)</title><rect x="93.1575%" y="1237" width="2.2096%" height="15" fill="rgb(253,197,36)" fg:x="1307" fg:w="31"/><text x="93.4075%" y="1247.50">r..</text></g><g><title>std::panic::catch_unwind (31 samples, 2.21%)</title><rect x="93.1575%" y="1221" width="2.2096%" height="15" fill="rgb(245,225,54)" fg:x="1307" fg:w="31"/><text x="93.4075%" y="1231.50">s..</text></g><g><title>std::panicking::try (31 samples, 2.21%)</title><rect x="93.1575%" y="1205" width="2.2096%" height="15" fill="rgb(239,94,37)" fg:x="1307" fg:w="31"/><text x="93.4075%" y="1215.50">s..</text></g><g><title>std::panicking::try::do_call (31 samples, 2.21%)</title><rect x="93.1575%" y="1189" width="2.2096%" height="15" fill="rgb(242,217,10)" fg:x="1307" fg:w="31"/><text x="93.4075%" y="1199.50">s..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (31 samples, 2.21%)</title><rect x="93.1575%" y="1173" width="2.2096%" height="15" fill="rgb(250,193,7)" fg:x="1307" fg:w="31"/><text x="93.4075%" y="1183.50">&lt;..</text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (31 samples, 2.21%)</title><rect x="93.1575%" y="1157" width="2.2096%" height="15" fill="rgb(230,104,19)" fg:x="1307" fg:w="31"/><text x="93.4075%" y="1167.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (31 samples, 2.21%)</title><rect x="93.1575%" y="1141" width="2.2096%" height="15" fill="rgb(230,181,4)" fg:x="1307" fg:w="31"/><text x="93.4075%" y="1151.50">r..</text></g><g><title>rayon_core::join::join_context (31 samples, 2.21%)</title><rect x="93.1575%" y="1125" width="2.2096%" height="15" fill="rgb(216,219,49)" fg:x="1307" fg:w="31"/><text x="93.4075%" y="1135.50">r..</text></g><g><title>rayon_core::join::join_context::{{closure}} (31 samples, 2.21%)</title><rect x="93.1575%" y="1109" width="2.2096%" height="15" fill="rgb(254,144,0)" fg:x="1307" fg:w="31"/><text x="93.4075%" y="1119.50">r..</text></g><g><title>rayon_core::unwind::halt_unwinding (19 samples, 1.35%)</title><rect x="94.0128%" y="1093" width="1.3542%" height="15" fill="rgb(205,209,38)" fg:x="1319" fg:w="19"/><text x="94.2628%" y="1103.50"></text></g><g><title>std::panic::catch_unwind (19 samples, 1.35%)</title><rect x="94.0128%" y="1077" width="1.3542%" height="15" fill="rgb(240,21,42)" fg:x="1319" fg:w="19"/><text x="94.2628%" y="1087.50"></text></g><g><title>std::panicking::try (19 samples, 1.35%)</title><rect x="94.0128%" y="1061" width="1.3542%" height="15" fill="rgb(241,132,3)" fg:x="1319" fg:w="19"/><text x="94.2628%" y="1071.50"></text></g><g><title>std::panicking::try::do_call (19 samples, 1.35%)</title><rect x="94.0128%" y="1045" width="1.3542%" height="15" fill="rgb(225,14,2)" fg:x="1319" fg:w="19"/><text x="94.2628%" y="1055.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (19 samples, 1.35%)</title><rect x="94.0128%" y="1029" width="1.3542%" height="15" fill="rgb(210,141,35)" fg:x="1319" fg:w="19"/><text x="94.2628%" y="1039.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (19 samples, 1.35%)</title><rect x="94.0128%" y="1013" width="1.3542%" height="15" fill="rgb(251,14,44)" fg:x="1319" fg:w="19"/><text x="94.2628%" y="1023.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (19 samples, 1.35%)</title><rect x="94.0128%" y="997" width="1.3542%" height="15" fill="rgb(247,48,18)" fg:x="1319" fg:w="19"/><text x="94.2628%" y="1007.50"></text></g><g><title>rayon_core::join::join_context (19 samples, 1.35%)</title><rect x="94.0128%" y="981" width="1.3542%" height="15" fill="rgb(225,0,40)" fg:x="1319" fg:w="19"/><text x="94.2628%" y="991.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (19 samples, 1.35%)</title><rect x="94.0128%" y="965" width="1.3542%" height="15" fill="rgb(221,31,33)" fg:x="1319" fg:w="19"/><text x="94.2628%" y="975.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (15 samples, 1.07%)</title><rect x="94.2979%" y="949" width="1.0691%" height="15" fill="rgb(237,42,40)" fg:x="1323" fg:w="15"/><text x="94.5479%" y="959.50"></text></g><g><title>std::panic::catch_unwind (15 samples, 1.07%)</title><rect x="94.2979%" y="933" width="1.0691%" height="15" fill="rgb(233,51,29)" fg:x="1323" fg:w="15"/><text x="94.5479%" y="943.50"></text></g><g><title>std::panicking::try (15 samples, 1.07%)</title><rect x="94.2979%" y="917" width="1.0691%" height="15" fill="rgb(226,58,20)" fg:x="1323" fg:w="15"/><text x="94.5479%" y="927.50"></text></g><g><title>std::panicking::try::do_call (15 samples, 1.07%)</title><rect x="94.2979%" y="901" width="1.0691%" height="15" fill="rgb(208,98,7)" fg:x="1323" fg:w="15"/><text x="94.5479%" y="911.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (15 samples, 1.07%)</title><rect x="94.2979%" y="885" width="1.0691%" height="15" fill="rgb(228,143,44)" fg:x="1323" fg:w="15"/><text x="94.5479%" y="895.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (15 samples, 1.07%)</title><rect x="94.2979%" y="869" width="1.0691%" height="15" fill="rgb(246,55,38)" fg:x="1323" fg:w="15"/><text x="94.5479%" y="879.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (15 samples, 1.07%)</title><rect x="94.2979%" y="853" width="1.0691%" height="15" fill="rgb(247,87,16)" fg:x="1323" fg:w="15"/><text x="94.5479%" y="863.50"></text></g><g><title>rayon_core::join::join_context (15 samples, 1.07%)</title><rect x="94.2979%" y="837" width="1.0691%" height="15" fill="rgb(234,129,42)" fg:x="1323" fg:w="15"/><text x="94.5479%" y="847.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (15 samples, 1.07%)</title><rect x="94.2979%" y="821" width="1.0691%" height="15" fill="rgb(220,82,16)" fg:x="1323" fg:w="15"/><text x="94.5479%" y="831.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (10 samples, 0.71%)</title><rect x="94.6543%" y="805" width="0.7128%" height="15" fill="rgb(211,88,4)" fg:x="1328" fg:w="10"/><text x="94.9043%" y="815.50"></text></g><g><title>std::panic::catch_unwind (10 samples, 0.71%)</title><rect x="94.6543%" y="789" width="0.7128%" height="15" fill="rgb(248,151,21)" fg:x="1328" fg:w="10"/><text x="94.9043%" y="799.50"></text></g><g><title>std::panicking::try (10 samples, 0.71%)</title><rect x="94.6543%" y="773" width="0.7128%" height="15" fill="rgb(238,163,6)" fg:x="1328" fg:w="10"/><text x="94.9043%" y="783.50"></text></g><g><title>std::panicking::try::do_call (10 samples, 0.71%)</title><rect x="94.6543%" y="757" width="0.7128%" height="15" fill="rgb(209,183,11)" fg:x="1328" fg:w="10"/><text x="94.9043%" y="767.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (10 samples, 0.71%)</title><rect x="94.6543%" y="741" width="0.7128%" height="15" fill="rgb(219,37,20)" fg:x="1328" fg:w="10"/><text x="94.9043%" y="751.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (10 samples, 0.71%)</title><rect x="94.6543%" y="725" width="0.7128%" height="15" fill="rgb(210,158,4)" fg:x="1328" fg:w="10"/><text x="94.9043%" y="735.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (10 samples, 0.71%)</title><rect x="94.6543%" y="709" width="0.7128%" height="15" fill="rgb(221,167,53)" fg:x="1328" fg:w="10"/><text x="94.9043%" y="719.50"></text></g><g><title>rayon_core::join::join_context (7 samples, 0.50%)</title><rect x="94.8681%" y="693" width="0.4989%" height="15" fill="rgb(237,151,45)" fg:x="1331" fg:w="7"/><text x="95.1181%" y="703.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (7 samples, 0.50%)</title><rect x="94.8681%" y="677" width="0.4989%" height="15" fill="rgb(231,39,3)" fg:x="1331" fg:w="7"/><text x="95.1181%" y="687.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (5 samples, 0.36%)</title><rect x="95.0107%" y="661" width="0.3564%" height="15" fill="rgb(212,167,28)" fg:x="1333" fg:w="5"/><text x="95.2607%" y="671.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.36%)</title><rect x="95.0107%" y="645" width="0.3564%" height="15" fill="rgb(232,178,8)" fg:x="1333" fg:w="5"/><text x="95.2607%" y="655.50"></text></g><g><title>std::panicking::try (5 samples, 0.36%)</title><rect x="95.0107%" y="629" width="0.3564%" height="15" fill="rgb(225,151,20)" fg:x="1333" fg:w="5"/><text x="95.2607%" y="639.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.36%)</title><rect x="95.0107%" y="613" width="0.3564%" height="15" fill="rgb(238,3,37)" fg:x="1333" fg:w="5"/><text x="95.2607%" y="623.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.36%)</title><rect x="95.0107%" y="597" width="0.3564%" height="15" fill="rgb(251,147,42)" fg:x="1333" fg:w="5"/><text x="95.2607%" y="607.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (5 samples, 0.36%)</title><rect x="95.0107%" y="581" width="0.3564%" height="15" fill="rgb(208,173,10)" fg:x="1333" fg:w="5"/><text x="95.2607%" y="591.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.36%)</title><rect x="95.0107%" y="565" width="0.3564%" height="15" fill="rgb(246,225,4)" fg:x="1333" fg:w="5"/><text x="95.2607%" y="575.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (5 samples, 0.36%)</title><rect x="95.0107%" y="549" width="0.3564%" height="15" fill="rgb(248,102,6)" fg:x="1333" fg:w="5"/><text x="95.2607%" y="559.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5 samples, 0.36%)</title><rect x="95.0107%" y="533" width="0.3564%" height="15" fill="rgb(232,6,21)" fg:x="1333" fg:w="5"/><text x="95.2607%" y="543.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5 samples, 0.36%)</title><rect x="95.0107%" y="517" width="0.3564%" height="15" fill="rgb(221,179,22)" fg:x="1333" fg:w="5"/><text x="95.2607%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 0.36%)</title><rect x="95.0107%" y="501" width="0.3564%" height="15" fill="rgb(252,50,20)" fg:x="1333" fg:w="5"/><text x="95.2607%" y="511.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (5 samples, 0.36%)</title><rect x="95.0107%" y="485" width="0.3564%" height="15" fill="rgb(222,56,38)" fg:x="1333" fg:w="5"/><text x="95.2607%" y="495.50"></text></g><g><title>ldpc::experiments::bmc_montecarlo::{{closure}}::{{closure}} (5 samples, 0.36%)</title><rect x="95.0107%" y="469" width="0.3564%" height="15" fill="rgb(206,193,29)" fg:x="1333" fg:w="5"/><text x="95.2607%" y="479.50"></text></g><g><title>rand::rngs::thread::thread_rng (1 samples, 0.07%)</title><rect x="95.2958%" y="453" width="0.0713%" height="15" fill="rgb(239,192,45)" fg:x="1337" fg:w="1"/><text x="95.5458%" y="463.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.07%)</title><rect x="95.2958%" y="437" width="0.0713%" height="15" fill="rgb(254,18,36)" fg:x="1337" fg:w="1"/><text x="95.5458%" y="447.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.07%)</title><rect x="95.2958%" y="421" width="0.0713%" height="15" fill="rgb(221,127,11)" fg:x="1337" fg:w="1"/><text x="95.5458%" y="431.50"></text></g><g><title>rand::rngs::thread::THREAD_RNG_KEY::__getit (1 samples, 0.07%)</title><rect x="95.2958%" y="405" width="0.0713%" height="15" fill="rgb(234,146,35)" fg:x="1337" fg:w="1"/><text x="95.5458%" y="415.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.07%)</title><rect x="95.2958%" y="389" width="0.0713%" height="15" fill="rgb(254,201,37)" fg:x="1337" fg:w="1"/><text x="95.5458%" y="399.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::try_register_dtor (1 samples, 0.07%)</title><rect x="95.2958%" y="373" width="0.0713%" height="15" fill="rgb(211,202,23)" fg:x="1337" fg:w="1"/><text x="95.5458%" y="383.50"></text></g><g><title>__cxa_thread_atexit_impl (1 samples, 0.07%)</title><rect x="95.2958%" y="357" width="0.0713%" height="15" fill="rgb(237,91,2)" fg:x="1337" fg:w="1"/><text x="95.5458%" y="367.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.07%)</title><rect x="95.2958%" y="341" width="0.0713%" height="15" fill="rgb(226,228,36)" fg:x="1337" fg:w="1"/><text x="95.5458%" y="351.50"></text></g><g><title>rayon_core::registry::WorkerThread::take_local_job (1 samples, 0.07%)</title><rect x="95.3671%" y="1429" width="0.0713%" height="15" fill="rgb(213,63,50)" fg:x="1338" fg:w="1"/><text x="95.6171%" y="1439.50"></text></g><g><title>__GI___sched_yield (4 samples, 0.29%)</title><rect x="95.4383%" y="1413" width="0.2851%" height="15" fill="rgb(235,194,19)" fg:x="1339" fg:w="4"/><text x="95.6883%" y="1423.50"></text></g><g><title>rayon_core::sleep::Sleep::no_work_found (52 samples, 3.71%)</title><rect x="95.4383%" y="1429" width="3.7063%" height="15" fill="rgb(207,204,18)" fg:x="1339" fg:w="52"/><text x="95.6883%" y="1439.50">rayo..</text></g><g><title>std::sync::condvar::Condvar::wait (48 samples, 3.42%)</title><rect x="95.7234%" y="1413" width="3.4212%" height="15" fill="rgb(248,8,7)" fg:x="1343" fg:w="48"/><text x="95.9734%" y="1423.50">std..</text></g><g><title>std::sys_common::condvar::Condvar::wait (48 samples, 3.42%)</title><rect x="95.7234%" y="1397" width="3.4212%" height="15" fill="rgb(223,145,47)" fg:x="1343" fg:w="48"/><text x="95.9734%" y="1407.50">std..</text></g><g><title>std::sys::unix::condvar::Condvar::wait (48 samples, 3.42%)</title><rect x="95.7234%" y="1381" width="3.4212%" height="15" fill="rgb(228,84,11)" fg:x="1343" fg:w="48"/><text x="95.9734%" y="1391.50">std..</text></g><g><title>__pthread_cond_wait (48 samples, 3.42%)</title><rect x="95.7234%" y="1365" width="3.4212%" height="15" fill="rgb(218,76,45)" fg:x="1343" fg:w="48"/><text x="95.9734%" y="1375.50">__p..</text></g><g><title>__futex_abstimed_wait_common64 (45 samples, 3.21%)</title><rect x="95.9373%" y="1349" width="3.2074%" height="15" fill="rgb(223,80,15)" fg:x="1346" fg:w="45"/><text x="96.1873%" y="1359.50">__f..</text></g><g><title>__pthread_disable_asynccancel (3 samples, 0.21%)</title><rect x="98.9309%" y="1333" width="0.2138%" height="15" fill="rgb(219,218,33)" fg:x="1388" fg:w="3"/><text x="99.1809%" y="1343.50"></text></g><g><title>__GI___clone (153 samples, 10.91%)</title><rect x="88.5959%" y="1637" width="10.9052%" height="15" fill="rgb(208,51,11)" fg:x="1243" fg:w="153"/><text x="88.8459%" y="1647.50">__GI___clone</text></g><g><title>start_thread (114 samples, 8.13%)</title><rect x="91.3756%" y="1621" width="8.1254%" height="15" fill="rgb(229,165,39)" fg:x="1282" fg:w="114"/><text x="91.6256%" y="1631.50">start_thread</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (113 samples, 8.05%)</title><rect x="91.4469%" y="1605" width="8.0542%" height="15" fill="rgb(241,100,24)" fg:x="1283" fg:w="113"/><text x="91.6969%" y="1615.50">&lt;alloc::box..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (113 samples, 8.05%)</title><rect x="91.4469%" y="1589" width="8.0542%" height="15" fill="rgb(228,14,23)" fg:x="1283" fg:w="113"/><text x="91.6969%" y="1599.50">&lt;alloc::box..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (113 samples, 8.05%)</title><rect x="91.4469%" y="1573" width="8.0542%" height="15" fill="rgb(247,116,52)" fg:x="1283" fg:w="113"/><text x="91.6969%" y="1583.50">std::thread..</text></g><g><title>std::panic::catch_unwind (111 samples, 7.91%)</title><rect x="91.5895%" y="1557" width="7.9116%" height="15" fill="rgb(216,149,33)" fg:x="1285" fg:w="111"/><text x="91.8395%" y="1567.50">std::panic:..</text></g><g><title>std::panicking::try (111 samples, 7.91%)</title><rect x="91.5895%" y="1541" width="7.9116%" height="15" fill="rgb(238,142,29)" fg:x="1285" fg:w="111"/><text x="91.8395%" y="1551.50">std::panick..</text></g><g><title>std::panicking::try::do_call (111 samples, 7.91%)</title><rect x="91.5895%" y="1525" width="7.9116%" height="15" fill="rgb(224,83,40)" fg:x="1285" fg:w="111"/><text x="91.8395%" y="1535.50">std::panick..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (111 samples, 7.91%)</title><rect x="91.5895%" y="1509" width="7.9116%" height="15" fill="rgb(234,165,11)" fg:x="1285" fg:w="111"/><text x="91.8395%" y="1519.50">&lt;core::pani..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (111 samples, 7.91%)</title><rect x="91.5895%" y="1493" width="7.9116%" height="15" fill="rgb(215,96,23)" fg:x="1285" fg:w="111"/><text x="91.8395%" y="1503.50">std::thread..</text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (111 samples, 7.91%)</title><rect x="91.5895%" y="1477" width="7.9116%" height="15" fill="rgb(233,179,26)" fg:x="1285" fg:w="111"/><text x="91.8395%" y="1487.50">&lt;rayon_core..</text></g><g><title>rayon_core::registry::main_loop (111 samples, 7.91%)</title><rect x="91.5895%" y="1461" width="7.9116%" height="15" fill="rgb(225,129,33)" fg:x="1285" fg:w="111"/><text x="91.8395%" y="1471.50">rayon_core:..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until (110 samples, 7.84%)</title><rect x="91.6607%" y="1445" width="7.8403%" height="15" fill="rgb(237,49,13)" fg:x="1286" fg:w="110"/><text x="91.9107%" y="1455.50">rayon_core:..</text></g><g><title>rayon_core::sleep::Sleep::work_found (5 samples, 0.36%)</title><rect x="99.1447%" y="1429" width="0.3564%" height="15" fill="rgb(211,3,31)" fg:x="1391" fg:w="5"/><text x="99.3947%" y="1439.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (5 samples, 0.36%)</title><rect x="99.1447%" y="1413" width="0.3564%" height="15" fill="rgb(216,152,19)" fg:x="1391" fg:w="5"/><text x="99.3947%" y="1423.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (5 samples, 0.36%)</title><rect x="99.1447%" y="1397" width="0.3564%" height="15" fill="rgb(251,121,35)" fg:x="1391" fg:w="5"/><text x="99.3947%" y="1407.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (5 samples, 0.36%)</title><rect x="99.1447%" y="1381" width="0.3564%" height="15" fill="rgb(210,217,47)" fg:x="1391" fg:w="5"/><text x="99.3947%" y="1391.50"></text></g><g><title>__GI___pthread_mutex_lock (5 samples, 0.36%)</title><rect x="99.1447%" y="1365" width="0.3564%" height="15" fill="rgb(244,116,22)" fg:x="1391" fg:w="5"/><text x="99.3947%" y="1375.50"></text></g><g><title>__lll_lock_wait (5 samples, 0.36%)</title><rect x="99.1447%" y="1349" width="0.3564%" height="15" fill="rgb(228,17,21)" fg:x="1391" fg:w="5"/><text x="99.3947%" y="1359.50"></text></g><g><title>_start (6 samples, 0.43%)</title><rect x="99.5011%" y="1637" width="0.4277%" height="15" fill="rgb(240,149,34)" fg:x="1396" fg:w="6"/><text x="99.7511%" y="1647.50"></text></g><g><title>_dl_start (1 samples, 0.07%)</title><rect x="99.8574%" y="1621" width="0.0713%" height="15" fill="rgb(208,125,47)" fg:x="1401" fg:w="1"/><text x="100.1074%" y="1631.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.07%)</title><rect x="99.8574%" y="1605" width="0.0713%" height="15" fill="rgb(249,186,39)" fg:x="1401" fg:w="1"/><text x="100.1074%" y="1615.50"></text></g><g><title>__GI___tunables_init (1 samples, 0.07%)</title><rect x="99.8574%" y="1589" width="0.0713%" height="15" fill="rgb(240,220,33)" fg:x="1401" fg:w="1"/><text x="100.1074%" y="1599.50"></text></g><g><title>all (1,403 samples, 100%)</title><rect x="0.0000%" y="1669" width="100.0000%" height="15" fill="rgb(243,110,23)" fg:x="0" fg:w="1403"/><text x="0.2500%" y="1679.50"></text></g><g><title>ldpc (1,403 samples, 100.00%)</title><rect x="0.0000%" y="1653" width="100.0000%" height="15" fill="rgb(219,163,46)" fg:x="0" fg:w="1403"/><text x="0.2500%" y="1663.50">ldpc</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (1 samples, 0.07%)</title><rect x="99.9287%" y="1637" width="0.0713%" height="15" fill="rgb(216,126,30)" fg:x="1402" fg:w="1"/><text x="100.1787%" y="1647.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.07%)</title><rect x="99.9287%" y="1621" width="0.0713%" height="15" fill="rgb(208,139,11)" fg:x="1402" fg:w="1"/><text x="100.1787%" y="1631.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.07%)</title><rect x="99.9287%" y="1605" width="0.0713%" height="15" fill="rgb(213,118,36)" fg:x="1402" fg:w="1"/><text x="100.1787%" y="1615.50"></text></g></svg></svg>